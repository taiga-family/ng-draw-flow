"use strict";
(self["webpackChunkdemo"] = self["webpackChunkdemo"] || []).push([["projects_demo_src_pages_documentation_labels_examples_component_ts_raw"],{

/***/ 62781:
/*!********************************************************************************!*\
  !*** ./projects/demo/src/pages/documentation/labels/examples/component.ts?raw ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = "import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {\n    DfArrowhead,\n    DfConnectionPoint,\n    DfConnectionType,\n    type DfDataModel,\n    dfPanZoomOptionsProvider,\n    NgDrawFlowComponent,\n    provideNgDrawFlowConfigs,\n} from '@ng-draw-flow/core';\nimport {TuiAddonDoc} from '@taiga-ui/addon-doc';\nimport {PolymorpheusComponent} from '@taiga-ui/polymorpheus';\n\nimport {LabelNodeComponent, SimpleNodeComponent} from '../../../../app/modules/nodes';\nimport {CopyComponent} from './labels/copy/copy.component';\n\n@Component({\n    standalone: true,\n    selector: 'example-component',\n    imports: [NgDrawFlowComponent, ReactiveFormsModule, TuiAddonDoc],\n    templateUrl: './template.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        dfPanZoomOptionsProvider({\n            topPosition: null,\n            leftPosition: 20,\n        }),\n        provideNgDrawFlowConfigs({\n            connection: {\n                type: DfConnectionType.SmoothStep,\n                arrowhead: {type: DfArrowhead.ArrowClosed},\n                curvature: 10,\n            },\n            nodes: {\n                labelNode: LabelNodeComponent,\n                simpleNode: SimpleNodeComponent,\n            },\n        }),\n    ],\n})\nexport default class ExampleComponent {\n    public data: DfDataModel = {\n        nodes: [\n            {\n                id: 'node-1',\n                data: {type: 'simpleNode', text: 'This base node'},\n                position: {x: 0, y: 0},\n                startNode: true,\n            },\n            {\n                id: 'node-2',\n                data: {type: 'simpleNode', text: 'This child node 1'},\n                position: {x: 250, y: 50},\n            },\n            {\n                id: 'node-3',\n                data: {type: 'simpleNode', text: 'This child node 2'},\n                position: {x: 250, y: -50},\n            },\n            {\n                id: 'node-4',\n                data: {type: 'simpleNode', text: 'This child node 3'},\n                position: {x: 500, y: 0},\n                endNode: true,\n            },\n            {\n                id: 'node-5',\n                data: {\n                    type: 'simpleNode',\n                    text: 'This node creates connections with a label',\n                    connectionLabel: {\n                        content: new PolymorpheusComponent(CopyComponent),\n                        context: 'some text',\n                    },\n                },\n                position: {x: 0, y: -100},\n            },\n            {\n                id: 'node-6',\n                data: {\n                    type: 'labelNode',\n                    text: 'This node defines label content dynamically',\n                },\n                position: {x: 0, y: 100},\n            },\n        ],\n        connections: [\n            {\n                source: {\n                    nodeId: 'node-1',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-1-output-1',\n                },\n                target: {\n                    nodeId: 'node-2',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-2-input-1',\n                },\n                label: {\n                    content: 'Label 1',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-1',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-1-output-1',\n                },\n                target: {\n                    nodeId: 'node-3',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-3-input-1',\n                },\n                label: {\n                    content: new PolymorpheusComponent(CopyComponent),\n                    context: 'https://taiga-ui.dev',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-2',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-2-output-1',\n                },\n                target: {\n                    nodeId: 'node-4',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-4-input-1',\n                },\n                label: {\n                    content: 'Label 3',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-3',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-3-output-1',\n                },\n                target: {\n                    nodeId: 'node-4',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-4-input-1',\n                },\n                label: {\n                    content: 'Label 4',\n                },\n            },\n        ],\n    };\n\n    public form = new FormControl<DfDataModel>(this.data);\n}\n";

/***/ })

}]);