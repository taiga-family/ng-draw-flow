{"version":3,"file":"projects_demo_src_pages_documentation_quickstart_quickstart_component_ts.js","mappings":"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","sources":["./projects/demo/src/pages/documentation/quickstart/examples/first-example/component.ts","./projects/demo/src/pages/documentation/quickstart/examples/first-example/template.html","./projects/demo/src/pages/documentation/quickstart/quickstart.component.ts","./projects/demo/src/pages/documentation/quickstart/quickstart.component.html"],"sourcesContent":["import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport type {DfDataModel} from '@ng-draw-flow/core';\nimport {\n    DfConnectionPoint,\n    dfPanZoomOptionsProvider,\n    NgDrawFlowComponent,\n} from '@ng-draw-flow/core';\n\n@Component({\n    standalone: true,\n    selector: 'first-example',\n    imports: [NgDrawFlowComponent, ReactiveFormsModule],\n    templateUrl: './template.html',\n    styleUrls: ['./styles.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        dfPanZoomOptionsProvider({\n            leftPosition: 50,\n        }),\n    ],\n})\nexport default class FirstExampleComponent {\n    public data: DfDataModel = {\n        nodes: new Map()\n            .set('node-1', {\n                id: 'node-1',\n                data: {type: 'simpleNode', text: 'This base node'},\n                position: {x: 0, y: 0},\n                startNode: true,\n            })\n            .set('node-2', {\n                id: 'node-2',\n                data: {type: 'simpleNode', text: 'This child node 1'},\n                position: {x: 250, y: 50},\n            })\n            .set('node-3', {\n                id: 'node-3',\n                data: {type: 'simpleNode', text: 'This child node 2'},\n                position: {x: 250, y: -50},\n            })\n            .set('node-4', {\n                id: 'node-4',\n                data: {type: 'simpleNode', text: 'This child node 3'},\n                position: {x: 500, y: 0},\n                endNode: true,\n            }),\n        connections: [\n            {\n                source: {\n                    nodeId: 'node-1',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-1-output-1',\n                },\n                target: {\n                    nodeId: 'node-2',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-2-input-1',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-1',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-1-output-1',\n                },\n                target: {\n                    nodeId: 'node-3',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-3-input-1',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-2',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-2-output-1',\n                },\n                target: {\n                    nodeId: 'node-4',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-4-input-1',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-3',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-3-output-1',\n                },\n                target: {\n                    nodeId: 'node-4',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-4-input-1',\n                },\n            },\n        ],\n    };\n\n    public form = new FormControl(this.data);\n}\n","<div class=\"editor\">\n    <ng-draw-flow [formControl]=\"form\" />\n</div>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport type {DfDataModel} from '@ng-draw-flow/core';\nimport {NgDrawFlowComponent} from '@ng-draw-flow/core';\nimport type {TuiRawLoaderContent} from '@taiga-ui/addon-doc';\nimport {TuiAddonDoc} from '@taiga-ui/addon-doc';\nimport {TuiLink} from '@taiga-ui/core';\n\nimport FirstExampleComponent from './examples/first-example/component';\n\n@Component({\n    standalone: true,\n    selector: 'quickstart-doc-page',\n    imports: [\n        FirstExampleComponent,\n        NgDrawFlowComponent,\n        ReactiveFormsModule,\n        TuiAddonDoc,\n        TuiLink,\n    ],\n    templateUrl: './quickstart.component.html',\n    styleUrls: ['./quickstart.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport default class QuickstartComponent {\n    public gettingStarted = {\n        imports: import('./examples/imports.md?raw'),\n        providing: import('./examples/providing.md?raw'),\n        data1: import('./examples/data-1.md?raw'),\n        template: import('./examples/template.md?raw'),\n        data2: import('./examples/data-2.md?raw'),\n    };\n\n    public readonly customNodeExample: Record<string, TuiRawLoaderContent> = {\n        TypeScript: import('./examples/node.component.ts?raw'),\n        Styles: import('./examples/node.styles.less?raw'),\n        Template: import('./examples/node.template.html?raw'),\n    };\n\n    protected nodeData: DfDataModel = {\n        nodes: new Map().set('node-1', {\n            id: 'node-1',\n            data: {type: 'simpleNode', text: 'Node example'},\n            position: {x: 0, y: 0},\n        }),\n        connections: [],\n    };\n\n    public nodeForm = new FormControl(this.nodeData);\n}\n","<tui-doc-page header=\"Getting started\">\n    <section>\n        <img\n            alt=\"ng-draw-flow logo\"\n            src=\"assets/icons/logo.svg\"\n            class=\"logo\"\n        />\n\n        <p>\n            If you're looking to get up and running swiftly, you're in the right spot! This guide will expedite your\n            journey from the starting point to a working application with NgDrawFlow in just a few minutes. Following\n            this, you'll have the opportunity to explore NgDrawFlow more thoroughly through examples or by delving into\n            the API documentation.\n        </p>\n    </section>\n    <section>\n        <h2>Play online</h2>\n        <p>\n            You can try NgDrawFlow without setting anything up locally by checking out the starter projects we have on\n            <a\n                href=\"https://codesandbox.io/p/devbox/ng-drae-flow-demo-y9qd4s?file=%2Fsrc%2Fapp%2Fapp.component.ts\"\n                target=\"_blank\"\n                tuiLink\n            >\n                CodeSandbox\n            </a>\n        </p>\n    </section>\n    <section>\n        <h2>Installation</h2>\n        <p>To get started locally you should have a few things:</p>\n        <ul class=\"tui-list tui-list_small\">\n            <li class=\"tui-list__item\">\n                <a\n                    href=\"https://nodejs.org/\"\n                    tuiLink\n                >\n                    Node.js\n                </a>\n                installed.\n            </li>\n            <li class=\"tui-list__item\">\n                A working knowledge of\n                <a\n                    href=\"https://angular.dev/\"\n                    tuiLink\n                >\n                    Angular\n                </a>\n                . You don't need to be an expert, but you should be comfortable with the basics.\n            </li>\n        </ul>\n        <p>First, spin up a new Angular project</p>\n        <code>ng new my-app</code>\n        <p>NgDrawFlow is published on npm as ng-draw-flow, so go ahead and add it next.</p>\n        <code>npm i &commat;ng-draw-flow/core --save</code>\n        <p>Lastly, spin up the dev server and we're good to go!</p>\n        <code>ng serve</code>\n    </section>\n\n    <section>\n        <h2>Import Dependencies and Register Node Components</h2>\n\n        <p>\n            To get started with the ng-draw-flow library, begin by setting up your module with the necessary imports and\n            component registrations.\n        </p>\n        <p>\n            Add the\n            <code>NgDrawFlowComponent</code>\n            and\n            <code>ReactiveFormsModule</code>\n            to your module's imports array:\n        </p>\n\n        <tui-doc-code\n            filename=\"app.module.ts\"\n            [code]=\"gettingStarted.imports\"\n        />\n\n        <p>\n            Then, within the providers section, register the components that you want to be available for use as nodes\n            within the graph editor:\n        </p>\n\n        <tui-doc-code\n            filename=\"app.module.ts\"\n            [code]=\"gettingStarted.providing\"\n        />\n\n        <p>\n            Make sure to replace\n            <code>yourNode</code>\n            with your specific component identifier for the node within the editor, and\n            <code>YourNodeComponent</code>\n            with the actual component class you intend to use.\n        </p>\n    </section>\n\n    <section>\n        <h2>Set Up Data Model and Control for Graph Structure</h2>\n\n        <p>\n            In the component where you intend to construct your graph, you need to create a data structure that defines\n            the nodes and connections.\n        </p>\n\n        <tui-doc-code\n            filename=\"app.connectors.component.ts\"\n            [code]=\"gettingStarted.data1\"\n        />\n\n        <p>\n            Next, link this data structure to your ng-draw-flow component using a\n            <code>FormControl</code>\n            . This will allow for reactive updates and interactions within your graph editor:\n        </p>\n\n        <tui-doc-code\n            filename=\"app.component.html\"\n            [code]=\"gettingStarted.template\"\n        />\n\n        <p>\n            This setup ensures that your ng-draw-flow component is fully integrated with the Angular forms system,\n            enabling seamless data flow and state management for your graph.\n        </p>\n    </section>\n\n    <section>\n        <h2>Populate Example DfDataModel</h2>\n\n        <p>\n            To illustrate how to set up the\n            <code>DfDataModel</code>\n            with actual data, the following example lays out a scenario with a collection of nodes and their\n            connections:\n        </p>\n\n        <tui-doc-code\n            filename=\"app.connectors.component.ts\"\n            [code]=\"gettingStarted.data2\"\n        />\n\n        <p>\n            Each\n            <code>node</code>\n            mainly consists of an\n            <code>id</code>\n            , a\n            <code>position</code>\n            , and a\n            <code>data</code>\n            field. Inside the\n            <code>data</code>\n            field, you need to specify the node type that was previously registered and all the data you want to provide\n            to the node.\n        </p>\n        <p>\n            The\n            <code>connections</code>\n            array contains objects that describe the start and end points of each connection. The\n            <code>source</code>\n            and\n            <code>target</code>\n            holds information about which node and specific connector are used for each connection.\n        </p>\n    </section>\n\n    <section class=\"tui-space_top-4\">\n        <first-example />\n    </section>\n\n    <section>\n        <h2>Creating Nodes</h2>\n        <p>\n            In ng-draw-flow, nodes can be customized to look and function just how you want them to. To create your own\n            node, you should develop a component that extends from the\n            <code>NgDrawFlowBaseNode</code>\n            class. This component will incorporate directives such as\n            <code>DrawFlowInputDirective</code>\n            and\n            <code>DrawFlowOutputDirective</code>\n            .\n        </p>\n        <p>Here is a basic blueprint for a simple node component:</p>\n\n        <tui-doc-example\n            style=\"padding: 0\"\n            [content]=\"customNodeExample\"\n        >\n            <div class=\"node-demo\">\n                <ng-draw-flow [formControl]=\"nodeForm\" />\n            </div>\n        </tui-doc-example>\n    </section>\n</tui-doc-page>\n"],"names":["FormControl","ReactiveFormsModule","DfConnectionPoint","dfPanZoomOptionsProvider","NgDrawFlowComponent","FirstExampleComponent","constructor","data","nodes","Map","set","id","type","text","position","x","y","startNode","endNode","connections","source","nodeId","connectorType","Output","connectorId","target","Input","form","selectors","standalone","features","i0","ɵɵProvidersFeature","leftPosition","ɵɵStandaloneFeature","decls","vars","consts","template","FirstExampleComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","i1","NgControlStatus","FormControlDirective","styles","changeDetection","TuiLink","QuickstartComponent","gettingStarted","imports","providing","data1","data2","customNodeExample","TypeScript","Styles","Template","nodeData","nodeForm","QuickstartComponent_Template","ɵɵtext","i2","TuiDocCode","TuiDocExample","TuiDocPage"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}