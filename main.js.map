{"version":3,"file":"main.js","mappings":"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","sources":["./projects/demo/src/app/app.browser.module.ts","./projects/demo/src/app/app.component.ts","./projects/demo/src/app/app.component.html","./projects/demo/src/app/app.providers.ts","./projects/demo/src/app/app.routes.ts","./projects/demo/src/app/constants/demo-path.ts","./projects/demo/src/app/constants/github-api.ts","./projects/demo/src/app/constants/index.ts","./projects/demo/src/app/modules/logo/logo.component.ts","./projects/demo/src/app/modules/logo/logo.template.html","./projects/demo/src/app/modules/nodes/form-node/form-node.component.ts","./projects/demo/src/app/modules/nodes/form-node/form-node.component.html","./projects/demo/src/app/modules/nodes/index.ts","./projects/demo/src/app/modules/nodes/info-node/info-node.component.ts","./projects/demo/src/app/modules/nodes/info-node/info-node.component.html","./projects/demo/src/app/modules/nodes/input-node/input-node.component.ts","./projects/demo/src/app/modules/nodes/input-node/input-node.component.html","./projects/demo/src/app/modules/nodes/mini-node/mini-node.component.ts","./projects/demo/src/app/modules/nodes/mini-node/mini-node.component.html","./projects/demo/src/app/modules/nodes/output-node/output-node.component.ts","./projects/demo/src/app/modules/nodes/output-node/output-node.component.html","./projects/demo/src/app/modules/nodes/simple-node/simple-node.component.ts","./projects/demo/src/app/modules/nodes/simple-node/simple-node.component.html","./projects/demo/src/main.browser.ts","./projects/demo/src/pages/pages.ts","./projects/demo/src/polyfills.ts","./projects/ng-draw-flow/src/index.ts","./projects/ng-draw-flow/src/lib/components/connections/connection/connection.component.ts","./projects/ng-draw-flow/src/lib/components/connections/connection/connection.component.svg","./projects/ng-draw-flow/src/lib/components/connections/connections.service.ts","./projects/ng-draw-flow/src/lib/components/connections/draft-connection/draft-connection.component.ts","./projects/ng-draw-flow/src/lib/components/connections/draft-connection/draft-connection.component.svg","./projects/ng-draw-flow/src/lib/components/connections/draft-connection/draft-connection.service.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/calculate-curvature.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/calculate-distance.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-bezier-path.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/consts.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/create-smoothstep-path.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/bottom-bottom-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/bottom-left-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/bottom-right-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/bottom-top-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/index.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/left-bottom-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/left-left-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/left-right-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/left-top-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/right-bottom-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/right-left-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/right-right-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/right-top-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/top-bottom-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/top-left-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/top-right-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/curvatures/top-top-smoothstep.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/index.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/create-smoothstep-path/utils.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/get-coonector-dataset.util.ts","./projects/ng-draw-flow/src/lib/components/connections/utils/index.ts","./projects/ng-draw-flow/src/lib/components/connectors/base-connector.ts","./projects/ng-draw-flow/src/lib/components/connectors/index.ts","./projects/ng-draw-flow/src/lib/components/connectors/input.component.ts","./projects/ng-draw-flow/src/lib/components/connectors/output.component.ts","./projects/ng-draw-flow/src/lib/components/node/node.component.ts","./projects/ng-draw-flow/src/lib/components/node/node.component.html","./projects/ng-draw-flow/src/lib/components/pan-zoom/pan-zoom.component.ts","./projects/ng-draw-flow/src/lib/components/pan-zoom/pan-zoom.component.html","./projects/ng-draw-flow/src/lib/components/pan-zoom/pan-zoom.const.ts","./projects/ng-draw-flow/src/lib/components/pan-zoom/pan-zoom.options.ts","./projects/ng-draw-flow/src/lib/components/pan-zoom/pan-zoom.service.ts","./projects/ng-draw-flow/src/lib/components/pan-zoom/zoom/index.ts","./projects/ng-draw-flow/src/lib/components/pan-zoom/zoom/zoom.directive.ts","./projects/ng-draw-flow/src/lib/components/pan-zoom/zoom/zoom.service.ts","./projects/ng-draw-flow/src/lib/components/scene/scene.component.ts","./projects/ng-draw-flow/src/lib/components/scene/scene.component.html","./projects/ng-draw-flow/src/lib/directives/drag-drop/drag-drop.directive.ts","./projects/ng-draw-flow/src/lib/directives/drag-drop/drag-drop.enum.ts","./projects/ng-draw-flow/src/lib/directives/drag-drop/drag-drop.interface.ts","./projects/ng-draw-flow/src/lib/directives/drag-drop/drag-drop.service.ts","./projects/ng-draw-flow/src/lib/directives/drag-drop/index.ts","./projects/ng-draw-flow/src/lib/directives/errors/errors.directive.ts","./projects/ng-draw-flow/src/lib/directives/errors/index.ts","./projects/ng-draw-flow/src/lib/directives/index.ts","./projects/ng-draw-flow/src/lib/directives/resize-observer/index.ts","./projects/ng-draw-flow/src/lib/directives/resize-observer/resize-observer.directive.ts","./projects/ng-draw-flow/src/lib/directives/selectable-element/index.ts","./projects/ng-draw-flow/src/lib/directives/selectable-element/selectable-element.directive.ts","./projects/ng-draw-flow/src/lib/helpers/clamp.ts","./projects/ng-draw-flow/src/lib/helpers/collect-invalid-node-ids.ts","./projects/ng-draw-flow/src/lib/helpers/connector.ts","./projects/ng-draw-flow/src/lib/helpers/deep-equal.ts","./projects/ng-draw-flow/src/lib/helpers/distance-between-points.ts","./projects/ng-draw-flow/src/lib/helpers/distance-between-touches.ts","./projects/ng-draw-flow/src/lib/helpers/handlers.ts","./projects/ng-draw-flow/src/lib/helpers/index.ts","./projects/ng-draw-flow/src/lib/helpers/initial-coordinates.ts","./projects/ng-draw-flow/src/lib/helpers/prevent-default.ts","./projects/ng-draw-flow/src/lib/helpers/px.ts","./projects/ng-draw-flow/src/lib/helpers/stop-propagation.ts","./projects/ng-draw-flow/src/lib/ng-draw-flow-node.base.ts","./projects/ng-draw-flow/src/lib/ng-draw-flow.component.ts","./projects/ng-draw-flow/src/lib/ng-draw-flow.component.html","./projects/ng-draw-flow/src/lib/ng-draw-flow.configs.ts","./projects/ng-draw-flow/src/lib/ng-draw-flow.interfaces.ts","./projects/ng-draw-flow/src/lib/ng-draw-flow.token.ts","./projects/ng-draw-flow/src/lib/services/coordinates.service.ts","./projects/ng-draw-flow/src/lib/services/selection.service.ts","./projects/ng-draw-flow/src/lib/validators/cycle-detection/cycle-detection.validator.ts","./projects/ng-draw-flow/src/lib/validators/cycle-detection/helpers.ts","./projects/ng-draw-flow/src/lib/validators/index.ts","./projects/ng-draw-flow/src/lib/validators/invalid-nodes.token.ts","./projects/ng-draw-flow/src/lib/validators/isolated-nodes/isolated-nodes.validator.ts"],"sourcesContent":["import {HttpClient, HttpClientModule} from '@angular/common/http';\nimport {NgModule, SecurityContext} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TuiAddonDoc} from '@taiga-ui/addon-doc';\nimport {TuiAlert, TuiDialog, TuiLink, TuiRoot} from '@taiga-ui/core';\nimport {NG_EVENT_PLUGINS} from '@taiga-ui/event-plugins';\nimport {MarkdownModule} from 'ngx-markdown';\n\nimport {AppComponent} from './app.component';\nimport {APP_PROVIDERS} from './app.providers';\nimport {AppRoutingModule} from './app.routes';\n\n@NgModule({\n    imports: [\n        BrowserModule.withServerTransition({\n            appId: 'demo',\n        }),\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        TuiRoot,\n        TuiDialog,\n        TuiAlert,\n        HttpClientModule,\n        MarkdownModule.forRoot({\n            loader: HttpClient,\n            sanitize: SecurityContext.NONE,\n        }),\n        ...TuiAddonDoc,\n        TuiLink,\n    ],\n    declarations: [AppComponent],\n    providers: [APP_PROVIDERS, NG_EVENT_PLUGINS],\n    bootstrap: [AppComponent],\n})\nexport class AppBrowserModule {}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\n\n// eslint-disable-next-line @angular-eslint/prefer-standalone\n@Component({\n    selector: 'my-app',\n    templateUrl: './app.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {}\n","<tui-root>\n    <tui-doc-main />\n    <router-outlet />\n</tui-root>\n","import {isPlatformBrowser, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport type {Provider} from '@angular/core';\nimport {inject, PLATFORM_ID} from '@angular/core';\nimport {provideNgDrawFlowConfigs} from '@ng-draw-flow/core';\nimport {\n    TUI_DOC_DEFAULT_TABS,\n    TUI_DOC_LOGO,\n    TUI_DOC_PAGES,\n    TUI_DOC_TITLE,\n} from '@taiga-ui/addon-doc';\nimport {HIGHLIGHT_OPTIONS} from 'ngx-highlightjs';\n\nimport {DEMO_PAGES} from '../pages/pages';\nimport {LOGO_CONTENT} from './modules/logo/logo.component';\nimport {\n    FormNodeComponent,\n    InfoNodeComponent,\n    InputNodeComponent,\n    MiniNodeComponent,\n    OutputNodeComponent,\n    SimpleNodeComponent,\n} from './modules/nodes';\n\nexport const APP_PROVIDERS: Provider[] = [\n    {\n        provide: LocationStrategy,\n        useClass: PathLocationStrategy,\n    },\n    {\n        provide: TUI_DOC_TITLE,\n        useValue: 'NgDrawFlow | ',\n    },\n    {\n        provide: TUI_DOC_LOGO,\n        useValue: LOGO_CONTENT,\n    },\n    {\n        provide: TUI_DOC_DEFAULT_TABS,\n        useValue: ['Description and examples', 'API'],\n    },\n    {\n        provide: TUI_DOC_PAGES,\n        useValue: DEMO_PAGES,\n    },\n    {\n        provide: HIGHLIGHT_OPTIONS,\n        useFactory: () => {\n            const isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n\n            return {\n                coreLibraryLoader: async () => import('highlight.js/lib/core'),\n                lineNumbersLoader: async () =>\n                    // SSR ReferenceError: window is not defined\n                    isBrowser\n                        ? import('ngx-highlightjs/line-numbers' as string)\n                        : Promise.resolve(),\n                languages: {\n                    typescript: async () =>\n                        import('highlight.js/lib/languages/typescript'),\n                    less: async () => import('highlight.js/lib/languages/less'),\n                    xml: async () => import('highlight.js/lib/languages/xml'),\n                },\n            };\n        },\n    },\n    provideNgDrawFlowConfigs({\n        nodes: {\n            infoNode: InfoNodeComponent,\n            simpleNode: SimpleNodeComponent,\n            inputNode: InputNodeComponent,\n            outputNode: OutputNodeComponent,\n            miniNode: MiniNodeComponent,\n            formNode: FormNodeComponent,\n        },\n    }),\n];\n","import {NgModule} from '@angular/core';\nimport type {Routes} from '@angular/router';\nimport {RouterModule} from '@angular/router';\nimport {DemoPath} from '@demo/constants';\n\nexport const appRoutes: Routes = [\n    // Quickstart\n    {\n        path: DemoPath.Quickstart,\n        loadComponent: async () =>\n            import('../pages/documentation/quickstart/quickstart.component'),\n        data: {\n            title: 'Quickstart',\n        },\n    },\n    {\n        path: DemoPath.TermsAndDefinitions,\n        loadComponent: async () =>\n            import(\n                '../pages/documentation/terms-and-definitions/terms-and-definitions.component'\n            ),\n        data: {\n            title: 'Terms and Definitions',\n        },\n    },\n    {\n        path: DemoPath.ConfigurationAndPublicApi,\n        loadComponent: async () =>\n            import(\n                '../pages/documentation/configuration-and-public-api/configuration-and-public-api.component'\n            ),\n        data: {\n            title: 'Configuration & Public API',\n        },\n    },\n    {\n        path: DemoPath.PanZoom,\n        loadComponent: async () =>\n            import(\n                '../pages/documentation/pan-zoom-configuration/pan-zoom-configuration.component'\n            ),\n        data: {\n            title: 'PanZoom Configuration',\n        },\n    },\n    {\n        path: DemoPath.Nodes,\n        loadComponent: async () =>\n            import('../pages/documentation/creating-nodes/creating-nodes.component'),\n        data: {\n            title: 'Creating Nodes',\n        },\n    },\n    {\n        path: DemoPath.Connectors,\n        loadComponent: async () =>\n            import('../pages/documentation/connectors/connectors.component'),\n        data: {\n            title: 'Connectors',\n        },\n    },\n    {\n        path: DemoPath.Validation,\n        loadComponent: async () =>\n            import('../pages/documentation/validation/validation.component'),\n        data: {\n            title: 'Validation',\n        },\n    },\n    // Examples\n    {\n        path: DemoPath.SimpleExample,\n        loadComponent: async () =>\n            import('../pages/examples/simple-example/simple-example.component'),\n        data: {\n            title: 'Simple example',\n        },\n    },\n    {\n        path: DemoPath.Overview,\n        loadComponent: async () =>\n            import('../pages/examples/overview/overview.component'),\n        data: {\n            title: 'Feature Overview',\n        },\n    },\n    {\n        path: DemoPath.Editor,\n        loadComponent: async () => import('../pages/examples/editor/editor.component'),\n        data: {\n            title: 'Editor example',\n        },\n    },\n    {\n        path: DemoPath.StressTest,\n        loadComponent: async () =>\n            import('../pages/examples/stress-test/stress-test.component'),\n        data: {\n            title: 'Stress Test',\n        },\n    },\n    {\n        path: '**',\n        redirectTo: DemoPath.Quickstart,\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes, {\n            initialNavigation: 'enabledBlocking',\n            scrollPositionRestoration: 'enabled',\n        }),\n    ],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export const DemoPath = {\n    Quickstart: 'documentation/quickstart',\n    TermsAndDefinitions: 'documentation/terms-and-definitions',\n    ConfigurationAndPublicApi: 'documentation/configuration-and-public-api',\n    PanZoom: 'documentation/pan-zoom-configuration',\n    Nodes: 'documentation/creating-nodes',\n    Connectors: 'documentation/connectors',\n    Connections: 'documentation/connections',\n    Validation: 'documentation/validation',\n    SimpleExample: 'examples/simple-example',\n    Overview: 'examples/overview',\n    Editor: 'examples/editor',\n    StressTest: 'examples/stress-test',\n    CustomNodes: 'examples/nodes-example/custom-nodes-example',\n} as const;\n","export const GITHUB_API = 'https://api.github.com/repos/taiga-family/ng-draw-flow';\n","export * from './demo-path';\nexport * from './github-api';\n","import {HttpClient} from '@angular/common/http';\nimport type {OnInit} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    DestroyRef,\n    inject,\n    signal,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {RouterLink} from '@angular/router';\nimport {TuiButton, TuiIcon, TuiLink} from '@taiga-ui/core';\nimport {TuiBadgedContent} from '@taiga-ui/kit';\nimport {PolymorpheusComponent} from '@taiga-ui/polymorpheus';\n\nimport {GITHUB_API} from '../../constants';\n\n@Component({\n    standalone: true,\n    selector: 'logo',\n    imports: [RouterLink, TuiBadgedContent, TuiButton, TuiIcon, TuiLink],\n    templateUrl: './logo.template.html',\n    styleUrls: ['./logo.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LogoComponent implements OnInit {\n    protected readonly stars = signal('');\n    private readonly destroyRef = inject(DestroyRef);\n    private readonly http = inject(HttpClient);\n\n    public ngOnInit(): void {\n        this.http\n            .get<Record<string, any>>(GITHUB_API)\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe((response) =>\n                this.stars.set(\n                    Intl.NumberFormat('en', {notation: 'compact'}).format(\n                        response['stargazers_count'],\n                    ),\n                ),\n            );\n    }\n}\n\nexport const LOGO_CONTENT = new PolymorpheusComponent(LogoComponent);\n","<div class=\"container\">\n    <a\n        routerLink=\"/\"\n        tuiLink\n        class=\"logo-link\"\n    >\n        <span class=\"logo-name\">\n            <img\n                alt=\"ng-draw-flow logo\"\n                src=\"assets/icons/logo.svg\"\n                class=\"logo\"\n            />\n            NgDrawFlow\n        </span>\n    </a>\n\n    <img\n        alt=\"by t-bank\"\n        src=\"assets/icons/by.svg\"\n        class=\"by\"\n    />\n\n    <div class=\"link-group-container link-group-items\">\n        <tui-badged-content class=\"app-link\">\n            <tui-icon\n                icon=\"@tui.star\"\n                size=\"s\"\n                tuiSlot=\"bottom\"\n                [style.color]=\"'orange'\"\n                [style.font-size.rem]=\"1\"\n            />\n\n            <a\n                href=\"https://github.com/taiga-family/ng-draw-flow\"\n                rel=\"noreferrer\"\n                target=\"_blank\"\n                title=\"NgDrawFlow source code on GitHub\"\n            >\n                <button\n                    appearance=\"outline-grayscale\"\n                    size=\"s\"\n                    tuiButton\n                    type=\"button\"\n                    class=\"app-link\"\n                >\n                    <tui-icon\n                        icon=\"@tui.github\"\n                        [style.height.rem]=\"1\"\n                    />\n                    {{ stars() }}\n                </button>\n            </a>\n        </tui-badged-content>\n\n        <a\n            appearance=\"icon\"\n            href=\"https://codesandbox.io/p/devbox/ng-drae-flow-demo-y9qd4s?file=%2Fsrc%2Fapp%2Fapp.component.ts\"\n            iconStart=\"assets/icons/codesandbox.svg\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            title=\"Test it in CodeSandbox\"\n            tuiLink\n            class=\"app-link\"\n        ></a>\n    </div>\n</div>\n","import {CommonModule} from '@angular/common';\nimport type {AfterViewInit} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    DestroyRef,\n    inject,\n    Input,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {DfInputComponent, DfOutputComponent, DrawFlowBaseNode} from '@ng-draw-flow/core';\nimport {TuiButton} from '@taiga-ui/core';\nimport {TuiInputModule, TuiTextfieldControllerModule} from '@taiga-ui/legacy';\n\ninterface NodeForm {\n    field1: FormGroup<NodeFormGroup>;\n    field2: FormGroup<NodeFormGroup>;\n}\n\ninterface NodeFormGroup {\n    connectorId: FormControl<string | null>;\n    fieldValue: FormControl<string | null>;\n}\n\n@Component({\n    standalone: true,\n    selector: 'app-form-node',\n    imports: [\n        CommonModule,\n        DfInputComponent,\n        DfOutputComponent,\n        ReactiveFormsModule,\n        TuiButton,\n        TuiInputModule,\n        TuiTextfieldControllerModule,\n    ],\n    templateUrl: './form-node.component.html',\n    styleUrls: ['./form-node.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(keydown.delete.stop)': '0',\n        '(keydown.backspace.stop)': '0',\n    },\n})\nexport class FormNodeComponent extends DrawFlowBaseNode implements AfterViewInit {\n    public form = new FormGroup<NodeForm>({\n        field1: new FormGroup<NodeFormGroup>({\n            connectorId: new FormControl<string>('node-5-output-1'),\n            fieldValue: new FormControl<string>('', [Validators.required]),\n        }),\n        field2: new FormGroup<NodeFormGroup>({\n            connectorId: new FormControl<string>('node-5-output-2'),\n            fieldValue: new FormControl<string>('', [Validators.required]),\n        }),\n    });\n\n    @Input()\n    public override set invalid(value: boolean) {\n        super.invalid = value;\n    }\n\n    public override get invalid(): boolean {\n        const formInvalid = Object.values(this.form.controls).some(\n            (fieldGroup: FormGroup<NodeFormGroup>): boolean =>\n                fieldGroup.controls.fieldValue.touched &&\n                fieldGroup.controls.fieldValue.invalid,\n        );\n\n        return super.invalid || formInvalid;\n    }\n\n    private readonly destroyRef = inject(DestroyRef);\n\n    public get fieldNames(): string[] {\n        return Object.keys(this.form.controls);\n    }\n\n    public getConnectorId(fieldName: string | null): string | null {\n        if (!fieldName) {\n            return null;\n        }\n\n        const group = this.form.get(fieldName) as FormGroup<NodeFormGroup>;\n\n        return group.controls.connectorId.value;\n    }\n\n    public ngAfterViewInit(): void {\n        this.form.valueChanges\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe((value) => {\n                this.model.value = value;\n            });\n    }\n\n    public add(): void {\n        const index = Object.keys(this.form.controls).length + 1;\n        const newFieldKey = `field${index}`;\n        const newField = new FormGroup({\n            connectorId: new FormControl(`node-5-output-${index}`),\n            fieldValue: new FormControl(''),\n        });\n\n        // @ts-ignore\n        this.form.addControl(newFieldKey, newField);\n    }\n}\n","<df-input\n    *ngIf=\"!startNode\"\n    class=\"input\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-input-1', single: false}\"\n/>\n\n<div class=\"tui-space_bottom-4 tui-text_body-s\">\n    {{ model.text }}\n</div>\n\n<form\n    tuiTheme=\"light\"\n    [formGroup]=\"form\"\n>\n    <div\n        *ngFor=\"let fieldName of fieldNames; let i = index\"\n        [formGroupName]=\"fieldName\"\n    >\n        <div class=\"field tui-space_bottom-4\">\n            <tui-input\n                formControlName=\"fieldValue\"\n                [tuiTextfieldSize]=\"'s'\"\n            />\n\n            <ng-container *ngIf=\"!!getConnectorId(fieldName)\">\n                <df-output\n                    class=\"output\"\n                    [connectorData]=\"{nodeId, connectorId: getConnectorId(fieldName)!, single: false}\"\n                />\n            </ng-container>\n        </div>\n    </div>\n</form>\n\n<button\n    size=\"s\"\n    tuiButton\n    type=\"button\"\n    (click)=\"add()\"\n>\n    Add field\n</button>\n","export * from './form-node/form-node.component';\nexport * from './info-node/info-node.component';\nexport * from './input-node/input-node.component';\nexport * from './mini-node/mini-node.component';\nexport * from './output-node/output-node.component';\nexport * from './simple-node/simple-node.component';\n","import {CommonModule} from '@angular/common';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {DfInputComponent, DfOutputComponent, DrawFlowBaseNode} from '@ng-draw-flow/core';\n\n@Component({\n    standalone: true,\n    selector: 'app-info-node',\n    imports: [CommonModule, DfInputComponent, DfOutputComponent],\n    templateUrl: './info-node.component.html',\n    styleUrls: ['./info-node.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InfoNodeComponent extends DrawFlowBaseNode {}\n","<p class=\"tui-text_body-xs\">\n    This node is your first step towards mastering the powerful features of our editor. Feel free to move nodes and\n    connections around to better organize your graphs.\n</p>\n\n<p class=\"tui-text_body-xs\">Deleting Elements:</p>\n\n<ul class=\"tui-list tui-list_extra-small\">\n    <li class=\"tui-list__item\">Select the node or connection you wish to remove.</li>\n    <li class=\"tui-list__item\">\n        Press the\n        <b>Backspace</b>\n        or\n        <b>Delete</b>\n        key.\n    </li>\n</ul>\n\n<p class=\"tui-text_body-xs\">Explore, experiment, and create complex data structures with ease!</p>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {\n    DfConnectorPosition,\n    DfInputComponent,\n    DrawFlowBaseNode,\n} from '@ng-draw-flow/core';\n\n@Component({\n    standalone: true,\n    selector: 'app-input-node',\n    imports: [DfInputComponent],\n    templateUrl: './input-node.component.html',\n    styleUrls: ['./input-node.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InputNodeComponent extends DrawFlowBaseNode {\n    protected connectorPosition = DfConnectorPosition;\n}\n","<df-input\n    class=\"input input_left\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-input-1', single: false}\"\n    [position]=\"connectorPosition.Left\"\n/>\n\n<df-input\n    class=\"input input_top\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-input-2', single: false}\"\n    [position]=\"connectorPosition.Top\"\n/>\n\n<p class=\"tui-text_body-xs\">{{ model.text }}</p>\n\n<df-input\n    class=\"input input_right\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-input-3', single: false}\"\n    [position]=\"connectorPosition.Right\"\n/>\n\n<df-input\n    class=\"input input_bottom\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-input-4', single: false}\"\n    [position]=\"connectorPosition.Bottom\"\n/>\n","import {CommonModule} from '@angular/common';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {DfInputComponent, DfOutputComponent, DrawFlowBaseNode} from '@ng-draw-flow/core';\n\n@Component({\n    standalone: true,\n    selector: 'app-mini-node',\n    imports: [CommonModule, DfInputComponent, DfOutputComponent],\n    templateUrl: './mini-node.component.html',\n    styleUrls: ['./mini-node.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniNodeComponent extends DrawFlowBaseNode {}\n","<df-input\n    *ngIf=\"!startNode\"\n    class=\"input\"\n    [connectorData]=\"{nodeId, connectorId: 'input-1', single: false}\"\n/>\n\n<p class=\"tui-text_body-xs\">Node {{ model.index }}</p>\n\n<df-output\n    *ngIf=\"!endNode\"\n    class=\"output\"\n    [connectorData]=\"{nodeId, connectorId: 'output-1', single: false}\"\n/>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {\n    DfConnectorPosition,\n    DfOutputComponent,\n    DrawFlowBaseNode,\n} from '@ng-draw-flow/core';\n\n@Component({\n    standalone: true,\n    selector: 'app-output-node',\n    imports: [DfOutputComponent],\n    templateUrl: './output-node.component.html',\n    styleUrls: ['./output-node.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OutputNodeComponent extends DrawFlowBaseNode {\n    protected connectorPosition = DfConnectorPosition;\n}\n","<df-output\n    class=\"output output_left\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-output-1', single: false}\"\n    [position]=\"connectorPosition.Left\"\n/>\n\n<df-output\n    class=\"output output_top\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-output-2', single: false}\"\n    [position]=\"connectorPosition.Top\"\n/>\n\n<p class=\"tui-text_body-xs\">{{ model.text }}</p>\n\n<df-output\n    class=\"output output_right\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-output-3', single: false}\"\n    [position]=\"connectorPosition.Right\"\n/>\n\n<df-output\n    class=\"output output_bottom\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-output-4', single: false}\"\n    [position]=\"connectorPosition.Bottom\"\n/>\n","import {AsyncPipe, NgIf} from '@angular/common';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {DfInputComponent, DfOutputComponent, DrawFlowBaseNode} from '@ng-draw-flow/core';\n\n@Component({\n    standalone: true,\n    selector: 'app-simple-node',\n    imports: [AsyncPipe, DfInputComponent, DfOutputComponent, NgIf],\n    templateUrl: './simple-node.component.html',\n    styleUrls: ['./simple-node.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SimpleNodeComponent extends DrawFlowBaseNode {}\n","<df-input\n    *ngIf=\"!startNode\"\n    class=\"input\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-input-1', single: false}\"\n/>\n\n<p class=\"tui-text_body-xs\">{{ model.text }}</p>\n\n<df-output\n    *ngIf=\"!endNode\"\n    class=\"output\"\n    [connectorData]=\"{nodeId, connectorId: nodeId + '-output-1', single: false}\"\n/>\n","import './polyfills';\n\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppBrowserModule} from './app/app.browser.module';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    platformBrowserDynamic()\n        .bootstrapModule(AppBrowserModule)\n        .then((ref) => {\n            const windowRef: any = window;\n\n            // Ensure Angular destroys itself on hot reloads for Stackblitz\n            if (windowRef.ngRef) {\n                windowRef.ngRef.destroy();\n            }\n\n            windowRef.ngRef = ref;\n        })\n        .catch((err: unknown) => console.error(err));\n});\n","import {DemoPath} from '@demo/constants';\nimport type {TuiDocRoutePages} from '@taiga-ui/addon-doc';\n\nexport const DEMO_PAGES: TuiDocRoutePages = [\n    {\n        section: 'Documentation',\n        title: 'Quickstart',\n        route: DemoPath.Quickstart,\n    },\n    {\n        section: 'Documentation',\n        title: 'Terms and Definitions',\n        route: DemoPath.TermsAndDefinitions,\n    },\n    {\n        section: 'Documentation',\n        title: 'Configuration & Public API',\n        route: DemoPath.ConfigurationAndPublicApi,\n    },\n    {\n        section: 'Documentation',\n        title: 'PanZoom Configuration',\n        route: DemoPath.PanZoom,\n    },\n    {\n        section: 'Documentation',\n        title: 'Creating Nodes',\n        route: DemoPath.Nodes,\n    },\n    {\n        section: 'Documentation',\n        title: 'Connectors',\n        route: DemoPath.Connectors,\n    },\n    {\n        section: 'Documentation',\n        title: 'Validation',\n        route: DemoPath.Validation,\n    },\n    {\n        section: 'Examples',\n        title: 'Simple example',\n        route: DemoPath.SimpleExample,\n    },\n    {\n        section: 'Examples',\n        title: 'Feature Overview',\n        route: DemoPath.Overview,\n    },\n    {\n        section: 'Examples',\n        title: 'Editor example',\n        route: DemoPath.Editor,\n    },\n    {\n        section: 'Examples',\n        title: 'Stress Test',\n        route: DemoPath.StressTest,\n    },\n];\n","import 'zone.js';\n","export * from './lib/components/connectors';\nexport * from './lib/components/pan-zoom/pan-zoom.options';\nexport * from './lib/directives/errors/errors.directive';\nexport * from './lib/directives/resize-observer';\nexport * from './lib/ng-draw-flow.component';\nexport * from './lib/ng-draw-flow.configs';\nexport * from './lib/ng-draw-flow.interfaces';\nexport * from './lib/ng-draw-flow.token';\nexport * from './lib/ng-draw-flow-node.base';\nexport * from './lib/validators';\n","import {AsyncPipe} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n} from '@angular/core';\nimport type {BehaviorSubject, Observable} from 'rxjs';\nimport {\n    animationFrameScheduler,\n    asyncScheduler,\n    combineLatest,\n    concat,\n    delay,\n    distinctUntilChanged,\n    map,\n    observeOn,\n    of,\n    shareReplay,\n    skip,\n    startWith,\n    switchMap,\n} from 'rxjs';\n\nimport {SelectableElementDirective} from '../../../directives';\nimport {createConnectorHash, deepEqual} from '../../../helpers';\nimport {DRAW_FLOW_OPTIONS} from '../../../ng-draw-flow.configs';\nimport type {\n    DfConnectorData,\n    DfDataConnection,\n    DfDataConnector,\n} from '../../../ng-draw-flow.interfaces';\nimport {DfConnectionType} from '../../../ng-draw-flow.interfaces';\nimport {CoordinatesService} from '../../../services/coordinates.service';\nimport {ConnectionsService} from '../connections.service';\nimport {calculateCurvature, calculateDistance, createBezierPath} from '../utils';\nimport {createSmoothstepPath} from '../utils/create-smoothstep-path/create-smoothstep-path.util';\n\n@Component({\n    standalone: true,\n    selector: 'df-connection',\n    imports: [AsyncPipe, SelectableElementDirective],\n    templateUrl: './connection.component.svg',\n    styleUrls: ['../connection.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(document:keydown.delete)': 'this.handleKeyboardEvent($event)',\n        '(document:keydown.backspace)': 'this.handleKeyboardEvent($event)',\n    },\n})\nexport class ConnectionComponent {\n    private readonly connectionsService = inject(ConnectionsService);\n    private readonly coordinatesService = inject(CoordinatesService);\n    private readonly options = inject(DRAW_FLOW_OPTIONS);\n    protected selected = false;\n\n    @Input()\n    public connection!: DfDataConnection;\n\n    @Output()\n    protected readonly connectionDeleted = new EventEmitter<void>();\n\n    @Output()\n    protected readonly connectionSelected = new EventEmitter<void>();\n\n    protected readonly path$: Observable<string> = of(null).pipe(\n        observeOn(asyncScheduler),\n        switchMap(() =>\n            combineLatest([\n                this.getConnectionPoint(this.connection?.source),\n                this.getConnectionPoint(this.connection?.target),\n            ]),\n        ),\n        switchMap(([sourcePoint, targetPoint]) => {\n            if (!sourcePoint || !targetPoint) {\n                console.warn('One of the connection points not found');\n\n                return of([]);\n            }\n\n            return of([sourcePoint, targetPoint]);\n        }),\n        distinctUntilChanged(deepEqual),\n        observeOn(animationFrameScheduler),\n        map(([start, end]) => {\n            if (!start || !end) {\n                return '';\n            }\n\n            switch (this.options.connection.type) {\n                case DfConnectionType.SmoothStep:\n                    return createSmoothstepPath(\n                        start,\n                        end,\n                        this.options.connection.curvature,\n                    );\n                case DfConnectionType.Bezier:\n                default: {\n                    const distance = calculateDistance(start.point, end.point);\n                    const maxCurvature = this.options.connection.curvature;\n                    const curvature = calculateCurvature(distance, maxCurvature);\n\n                    return createBezierPath(start, end, curvature);\n                }\n            }\n        }),\n        shareReplay({bufferSize: 1, refCount: true}),\n    );\n\n    protected readonly optimization$: Observable<boolean> = this.path$.pipe(\n        skip(1),\n        switchMap(() => concat(of(true), of(false).pipe(delay(400)))),\n        startWith(false),\n        distinctUntilChanged(),\n    );\n\n    protected handleKeyboardEvent(event: KeyboardEvent): void {\n        if (!this.selected) {\n            return;\n        }\n\n        event.preventDefault();\n\n        this.connectionsService.removeConnection(this.connection);\n        this.connectionDeleted.emit();\n    }\n\n    protected onSelectedChanged(selected: boolean): void {\n        this.selected = selected;\n\n        if (selected) {\n            this.connectionSelected.emit();\n        }\n    }\n\n    private getConnectionPoint(\n        connector: DfDataConnector,\n    ): BehaviorSubject<DfConnectorData> | BehaviorSubject<null> {\n        return this.coordinatesService.getConnectionPoint(createConnectorHash(connector));\n    }\n}\n","<svg class=\"connection\" [class.optimize-speed]=\"optimization$ | async\">\n    <path class=\"selectable-area\" [attr.d]=\"path$ | async\" (dfSelectableElement)=\"onSelectedChanged($event)\" />\n    <path class=\"main-path\" [attr.d]=\"path$ | async\" [class.df-selected]=\"selected\" />\n</svg>\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\nimport type {DfDataConnection} from '../../ng-draw-flow.interfaces';\n\n@Injectable()\nexport class ConnectionsService {\n    public readonly connections$ = new BehaviorSubject<DfDataConnection[]>([]);\n    public readonly usedConnectors$ = new BehaviorSubject<string[]>([]);\n\n    public addConnections(connections: DfDataConnection[]): void {\n        const newConnections = connections.filter(\n            (newConnection) =>\n                !this.connections$.value.some((existingConnection) =>\n                    this.areConnectionsEqual(existingConnection, newConnection),\n                ),\n        );\n\n        if (newConnections.length === 0) {\n            return;\n        }\n\n        const updatedUsedConnectors = [...this.usedConnectors$.value];\n\n        newConnections.forEach((connection) => {\n            if (!updatedUsedConnectors.includes(connection.source.connectorId)) {\n                updatedUsedConnectors.push(connection.source.connectorId);\n            }\n\n            if (!updatedUsedConnectors.includes(connection.target.connectorId)) {\n                updatedUsedConnectors.push(connection.target.connectorId);\n            }\n        });\n\n        this.usedConnectors$.next(updatedUsedConnectors);\n        this.connections$.next([...this.connections$.value, ...newConnections]);\n    }\n\n    public removeConnection(connectionToRemove: DfDataConnection): void {\n        const filteredConnections = this.connections$.value.filter(\n            (existingConnection) =>\n                !this.areConnectionsEqual(existingConnection, connectionToRemove),\n        );\n\n        const usedConnectors = this.usedConnectors$.value.filter((connectorId: string) =>\n            filteredConnections.some(\n                (connection) =>\n                    connection.source.connectorId === connectorId ||\n                    connection.target.connectorId === connectorId,\n            ),\n        );\n\n        this.usedConnectors$.next(usedConnectors);\n        this.connections$.next(filteredConnections);\n    }\n\n    public removeConnectionsByNodeId(id: string): void {\n        const connectionsToKeep = this.connections$.value.filter(\n            (connection) =>\n                connection.source.nodeId !== id && connection.target.nodeId !== id,\n        );\n\n        const usedConnectors = this.usedConnectors$.value.filter((connectorId: string) =>\n            connectionsToKeep.some(\n                (connection) =>\n                    connection.source.connectorId === connectorId ||\n                    connection.target.connectorId === connectorId,\n            ),\n        );\n\n        this.usedConnectors$.next(usedConnectors);\n        this.connections$.next(connectionsToKeep);\n    }\n\n    public removeConnectionsByConnectorId(connectorIdToRemove: string): void {\n        if (!connectorIdToRemove) {\n            return;\n        }\n\n        const connectionsToKeep = this.connections$.value.filter(\n            (connection) =>\n                connection.source.connectorId !== connectorIdToRemove &&\n                connection.target.connectorId !== connectorIdToRemove,\n        );\n\n        const usedConnectors = this.usedConnectors$.value.filter(\n            (connectorId) => connectorId !== connectorIdToRemove,\n        );\n\n        this.usedConnectors$.next(usedConnectors);\n        this.connections$.next(connectionsToKeep);\n    }\n\n    private areConnectionsEqual(\n        connection1: DfDataConnection,\n        connection2: DfDataConnection,\n    ): boolean {\n        return (\n            connection1.source.nodeId === connection2.source.nodeId &&\n            connection1.source.connectorType === connection2.source.connectorType &&\n            connection1.source.connectorId === connection2.source.connectorId &&\n            connection1.target.nodeId === connection2.target.nodeId &&\n            connection1.target.connectorType === connection2.target.connectorType &&\n            connection1.target.connectorId === connection2.target.connectorId\n        );\n    }\n}\n","import type {ElementRef, Signal} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    inject,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {DRAW_FLOW_OPTIONS} from '../../../ng-draw-flow.configs';\nimport type {DfConnectorData, DfOptions} from '../../../ng-draw-flow.interfaces';\nimport {DfConnectionType} from '../../../ng-draw-flow.interfaces';\nimport {calculateCurvature, calculateDistance, createBezierPath} from '../utils';\nimport {createSmoothstepPath} from '../utils/create-smoothstep-path/create-smoothstep-path.util';\nimport {DraftConnectionService} from './draft-connection.service';\n\n@Component({\n    standalone: true,\n    selector: 'df-draft-connection',\n    templateUrl: './draft-connection.component.svg',\n    styleUrls: ['../connection.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DraftConnectionComponent {\n    private readonly draftConnectionService = inject(DraftConnectionService);\n    private readonly options: DfOptions = inject(DRAW_FLOW_OPTIONS);\n    private readonly maxCurvature = this.options.connection.curvature;\n\n    @ViewChild('connectionPath')\n    protected connectionPath!: ElementRef;\n\n    @Output()\n    protected readonly connectionCreated = this.draftConnectionService.connectionCreated$;\n\n    protected path: Signal<string> = computed(() => {\n        const sourcePoint: DfConnectorData = this.draftConnectionService.source();\n        const targetPoint: DfConnectorData = this.draftConnectionService.target();\n\n        switch (this.options.connection.type) {\n            case DfConnectionType.SmoothStep:\n                return createSmoothstepPath(sourcePoint, targetPoint, this.maxCurvature);\n            case DfConnectionType.Bezier:\n            default: {\n                const distance = calculateDistance(sourcePoint.point, targetPoint.point);\n                const curvature = calculateCurvature(distance, this.maxCurvature);\n\n                return createBezierPath(sourcePoint, targetPoint, curvature);\n            }\n        }\n    });\n}\n","<svg class=\"connection draft-connection\">\n    <path #connectionPath class=\"main-path\" [attr.d]=\"path()\" />\n</svg>\n","import {DOCUMENT} from '@angular/common';\nimport type {OnDestroy, WritableSignal} from '@angular/core';\nimport {inject, Injectable, signal} from '@angular/core';\nimport {\n    animationFrameScheduler,\n    BehaviorSubject,\n    filter,\n    fromEvent,\n    map,\n    observeOn,\n    pairwise,\n    repeat,\n    Subject,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs';\n\nimport {\n    createConnectorHash,\n    dfDistanceBetweenPoints,\n    INITIAL_COORDINATES,\n} from '../../../helpers';\nimport type {\n    DfConnectorData,\n    DfDataConnection,\n    DfDataConnector,\n} from '../../../ng-draw-flow.interfaces';\nimport {DfConnectionPoint, DfConnectorPosition} from '../../../ng-draw-flow.interfaces';\nimport {CoordinatesService} from '../../../services/coordinates.service';\nimport {PanZoomService} from '../../pan-zoom/pan-zoom.service';\nimport {getConnectorDataset} from '../utils/get-coonector-dataset.util';\n\n@Injectable()\nexport class DraftConnectionService implements OnDestroy {\n    private readonly panZoomService = inject(PanZoomService);\n    private readonly coordinatesService = inject(CoordinatesService);\n    protected readonly destroy$ = new Subject<void>();\n    private sourceConnector!: DfDataConnector;\n\n    public source: WritableSignal<DfConnectorData> = signal<DfConnectorData>({\n        point: INITIAL_COORDINATES,\n        position: DfConnectorPosition.Right,\n    });\n\n    public target: WritableSignal<DfConnectorData> = signal<DfConnectorData>({\n        point: INITIAL_COORDINATES,\n        position: DfConnectorPosition.Left,\n    });\n\n    public readonly isConnectionCreating$ = new BehaviorSubject<boolean>(false);\n    public readonly connectionCreated$ = new Subject<DfDataConnection>();\n    public readonly connection$ = new Subject<DfDataConnector>();\n\n    constructor() {\n        this.connectionSubscription();\n    }\n\n    public ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private connectionSubscription(): void {\n        const document = inject(DOCUMENT);\n\n        this.connection$\n            .pipe(\n                tap((connectorData: DfDataConnector) => this.onDragStart(connectorData)),\n                switchMap(() => fromEvent<PointerEvent>(document, 'pointermove')),\n                filter(() => this.isConnectionCreating$.value),\n                observeOn(animationFrameScheduler),\n                pairwise(),\n                map(([previousEvent, currentEvent]) =>\n                    this.onDragMove(previousEvent, currentEvent),\n                ),\n                // eslint-disable-next-line rxjs/no-unsafe-takeuntil\n                takeUntil(\n                    fromEvent<PointerEvent>(document, 'pointerup').pipe(\n                        filter(() => this.isConnectionCreating$.value),\n                        tap((event: PointerEvent) => this.onDragEnd(event)),\n                    ),\n                ),\n                // eslint-disable-next-line rxjs/no-unsafe-takeuntil\n                takeUntil(this.destroy$),\n                repeat(),\n            )\n            .subscribe();\n    }\n\n    private onDragStart(connector: DfDataConnector): void {\n        this.sourceConnector = connector;\n        this.isConnectionCreating$.next(true);\n        const sourceId = createConnectorHash(connector);\n        const sourcePoint: DfConnectorData | null =\n            this.coordinatesService.getConnectionPoint(sourceId)?.value;\n\n        if (!sourcePoint) {\n            return;\n        }\n\n        this.source.set(sourcePoint);\n        this.target.set({\n            ...sourcePoint,\n            position: this.getTargetPosition(this.source().position),\n        });\n    }\n\n    private onDragMove(previousEvent: PointerEvent, currentEvent: PointerEvent): void {\n        const {deltaX, deltaY} = dfDistanceBetweenPoints(previousEvent, currentEvent);\n        const {zoom} = this.panZoomService.panzoomModel;\n        const target: DfConnectorData = this.target();\n\n        this.target.set({\n            position: target.position,\n            point: {\n                x: target.point.x + deltaX / zoom,\n                y: target.point.y + deltaY / zoom,\n            },\n        });\n    }\n\n    private getTargetPosition(\n        startPosition: DfConnectorPosition | null,\n    ): DfConnectorPosition | null {\n        switch (startPosition) {\n            case DfConnectorPosition.Bottom:\n                return DfConnectorPosition.Top;\n            case DfConnectorPosition.Left:\n                return DfConnectorPosition.Right;\n            case DfConnectorPosition.Right:\n                return DfConnectorPosition.Left;\n            case DfConnectorPosition.Top:\n                return DfConnectorPosition.Bottom;\n            default:\n                return null;\n        }\n    }\n\n    private onDragEnd(event: PointerEvent): void {\n        const target = event.target as HTMLElement | null;\n        const targetConnector = target ? getConnectorDataset(target) : null;\n\n        if (\n            targetConnector &&\n            targetConnector.connectorType === DfConnectionPoint.Input\n        ) {\n            this.connectionCreated$.next({\n                source: this.sourceConnector,\n                target: targetConnector,\n            });\n        }\n\n        this.resetConnectors();\n        this.isConnectionCreating$.next(false);\n    }\n\n    private resetConnectors(): void {\n        this.source.set({\n            point: INITIAL_COORDINATES,\n            position: DfConnectorPosition.Right,\n        });\n        this.target.set({\n            point: INITIAL_COORDINATES,\n            position: null,\n        });\n    }\n}\n","export function calculateCurvature(distance: number, maxCurvature: number): number {\n    const maxDistanceForCurvature = 150;\n\n    return (\n        (Math.min(distance, maxDistanceForCurvature) / maxDistanceForCurvature) *\n        maxCurvature\n    );\n}\n","import type {DfPoint} from '../../../ng-draw-flow.interfaces';\n\nexport function calculateDistance(sourcePoint: DfPoint, targetPoint: DfPoint): number {\n    return Math.sqrt(\n        (targetPoint.x - sourcePoint.x) ** 2 + (targetPoint.y - sourcePoint.y) ** 2,\n    );\n}\n","import type {DfConnectorData} from '../../../ng-draw-flow.interfaces';\nimport {DfConnectorPosition} from '../../../ng-draw-flow.interfaces';\n\nexport function createBezierPath(\n    startConnector: DfConnectorData,\n    endConnector: DfConnectorData,\n    curvature: number,\n): string {\n    const {x: startX, y: startY} = startConnector.point;\n    const startConnectorPosition = startConnector.position;\n    const {x: endX, y: endY} = endConnector.point;\n    const endConnectorPosition = endConnector.position;\n\n    if (\n        startConnectorPosition === DfConnectorPosition.Right &&\n        endConnectorPosition === DfConnectorPosition.Top\n    ) {\n        const startConnectorPointX = startX + curvature / 2;\n        const startConnectorPointY = startY;\n        const endConnectorPointX = endX;\n        const endConnectorPointY = endY + (endY - startY) / 7;\n\n        return `M ${startX} ${startY} C ${startConnectorPointX} ${startConnectorPointY}, ${endConnectorPointX} ${endConnectorPointY}, ${endX} ${endY}`;\n    }\n\n    if (\n        startConnectorPosition === DfConnectorPosition.Bottom &&\n        endConnectorPosition === DfConnectorPosition.Left\n    ) {\n        const startConnectorPointX = startX;\n        const startConnectorPointY = startY + curvature / 2;\n        const endConnectorPointX = endX - (endX - startX) / 7;\n\n        return `M ${startX} ${startY} C ${startConnectorPointX} ${startConnectorPointY}, ${endConnectorPointX} ${endY}, ${endX} ${endY}`;\n    }\n\n    if (\n        startConnectorPosition === DfConnectorPosition.Bottom &&\n        endConnectorPosition === DfConnectorPosition.Top\n    ) {\n        return `M ${startX} ${startY} C ${startX} ${startY + curvature}, ${endX} ${\n            endY - curvature\n        } ${endX} ${endY}`;\n    }\n\n    if (\n        startConnectorPosition === DfConnectorPosition.Right &&\n        endConnectorPosition === DfConnectorPosition.Left\n    ) {\n        return `M ${startX} ${startY} C ${startX + curvature} ${startY}, ${\n            endX - curvature\n        } ${endY}, ${endX} ${endY}`;\n    }\n\n    return '';\n}\n","export const MIN_LINE_SIZE = 20;\n","import type {DfConnectorData} from '../../../../ng-draw-flow.interfaces';\nimport {DfConnectorPosition} from '../../../../ng-draw-flow.interfaces';\nimport {\n    createBottomBottomCurve,\n    createBottomLeftCurve,\n    createBottomRightCurve,\n    createBottomTopCurve,\n    createLeftBottomCurve,\n    createLeftLeftCurve,\n    createLeftRightCurve,\n    createLeftTopCurve,\n    createRightBottomCurve,\n    createRightLeftCurve,\n    createRightRightCurve,\n    createRightTopCurve,\n    createTopBottomCurve,\n    createTopLeftCurve,\n    createTopRightCurve,\n    createTopTopCurve,\n} from './curvatures';\n\nexport function createSmoothstepPath(\n    startConnector: DfConnectorData,\n    endConnector: DfConnectorData,\n    radius: number,\n): string {\n    const {x: startX, y: startY} = startConnector.point;\n    const {x: endX, y: endY} = endConnector.point;\n    const startConnectorPosition = startConnector.position;\n    const endConnectorPosition = endConnector.position;\n\n    if (startConnectorPosition === DfConnectorPosition.Right) {\n        switch (endConnectorPosition) {\n            case DfConnectorPosition.Bottom:\n                return createRightBottomCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Right:\n                return createRightRightCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Top:\n                return createRightTopCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Left:\n            default:\n                return createRightLeftCurve({startX, startY, endX, endY, radius});\n        }\n    }\n\n    if (startConnectorPosition === DfConnectorPosition.Left) {\n        switch (endConnectorPosition) {\n            case DfConnectorPosition.Bottom:\n                return createLeftBottomCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Left:\n                return createLeftLeftCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Top:\n                return createLeftTopCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Right:\n            default:\n                return createLeftRightCurve({startX, startY, endX, endY, radius});\n        }\n    }\n\n    if (startConnectorPosition === DfConnectorPosition.Bottom) {\n        switch (endConnectorPosition) {\n            case DfConnectorPosition.Bottom:\n                return createBottomBottomCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Left:\n                return createBottomLeftCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Right:\n                return createBottomRightCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Top:\n            default:\n                return createBottomTopCurve({startX, startY, endX, endY, radius});\n        }\n    }\n\n    if (startConnectorPosition === DfConnectorPosition.Top) {\n        switch (endConnectorPosition) {\n            case DfConnectorPosition.Left:\n                return createTopLeftCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Right:\n                return createTopRightCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Top:\n                return createTopTopCurve({startX, startY, endX, endY, radius});\n            case DfConnectorPosition.Bottom:\n            default:\n                return createTopBottomCurve({startX, startY, endX, endY, radius});\n        }\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createBottomBottomCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n    const horizontalDifference = startX - endX;\n\n    radius = adjustRadius(horizontalDifference, radius);\n\n    if (isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            isEndPointOnRightSide\n                ? createVerticalLineToRightWithCurve(\n                      startX,\n                      startY + MIN_LINE_SIZE,\n                      radius,\n                      !isEndPointOnUpSide,\n                  )\n                : createVerticalLineToLeftWithCurve(\n                      startX,\n                      startY + MIN_LINE_SIZE,\n                      radius,\n                      !isEndPointOnUpSide,\n                  ),\n            createHorizontalLineWithCurve(\n                endX,\n                startY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return [\n        createStartPoint(startX, startY),\n        isEndPointOnRightSide\n            ? createVerticalLineToRightWithCurve(\n                  startX,\n                  endY + MIN_LINE_SIZE,\n                  radius,\n                  isEndPointOnUpSide,\n              )\n            : createVerticalLineToLeftWithCurve(\n                  startX,\n                  endY + MIN_LINE_SIZE,\n                  radius,\n                  isEndPointOnUpSide,\n              ),\n        createHorizontalLineWithCurve(\n            endX,\n            endY + MIN_LINE_SIZE,\n            radius,\n            isEndPointOnRightSide,\n            !isEndPointOnUpSide,\n        ),\n        createEndPoint(endX, endY),\n    ].join(' ');\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createBottomLeftCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnLeftSide = startX > endX;\n    const isEndPointOnUpSide = startY > endY;\n    const halfY = (startY + endY) / 2;\n\n    if (isEndPointOnLeftSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX - MIN_LINE_SIZE,\n                startY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnLeftSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                endX - MIN_LINE_SIZE,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnLeftSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                startX - MIN_LINE_SIZE,\n                startY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnLeftSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                startX - MIN_LINE_SIZE,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnLeftSide && !isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(startX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnLeftSide && !isEndPointOnUpSide) {\n        if (endY <= startY + MIN_LINE_SIZE + radius * 2) {\n            return [\n                createStartPoint(startX, startY),\n                createVerticalLineToLeftWithCurve(\n                    startX,\n                    endY + MIN_LINE_SIZE * 1.5,\n                    radius,\n                    isEndPointOnUpSide,\n                ),\n                createHorizontalLineWithCurve(\n                    endX - MIN_LINE_SIZE,\n                    endY + MIN_LINE_SIZE * 1.5,\n                    radius,\n                    !isEndPointOnLeftSide,\n                    !isEndPointOnUpSide,\n                ),\n                createVerticalLineToRightWithCurve(\n                    endX - MIN_LINE_SIZE,\n                    endY,\n                    radius,\n                    !isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY + Math.min(MIN_LINE_SIZE, halfY),\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX - MIN_LINE_SIZE,\n                startY + Math.min(MIN_LINE_SIZE, halfY),\n                radius,\n                !isEndPointOnLeftSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                endX - MIN_LINE_SIZE,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createBottomRightCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n\n    if (isEndPointOnRightSide && !isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(\n                startX,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(\n                startX,\n                startY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        if (endX >= startX + MIN_LINE_SIZE) {\n            return [\n                createStartPoint(startX, startY),\n                createHorizontalLineWithCurve(\n                    endX,\n                    startY,\n                    radius,\n                    isEndPointOnRightSide,\n                    isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n    }\n\n    if (!isEndPointOnRightSide && !isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(startX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        let secondCurvatureRadius = radius;\n\n        if (endX + radius <= startX - radius) {\n            secondCurvatureRadius = Math.min(\n                radius,\n                Math.abs((endX + radius - (startX - radius)) / 4),\n            );\n        }\n\n        if (endX + MIN_LINE_SIZE > startX) {\n            secondCurvatureRadius = Math.min(\n                radius,\n                Math.abs((endX + radius - (startX - radius)) / 4),\n            );\n\n            return [\n                createStartPoint(startX, startY),\n                createVerticalLineToRightWithCurve(\n                    startX,\n                    startY + MIN_LINE_SIZE,\n                    secondCurvatureRadius,\n                    !isEndPointOnUpSide,\n                ),\n                createHorizontalLineWithCurve(\n                    endX + MIN_LINE_SIZE,\n                    startY + MIN_LINE_SIZE,\n                    secondCurvatureRadius,\n                    !isEndPointOnRightSide,\n                    isEndPointOnUpSide,\n                ),\n                createVerticalLineToLeftWithCurve(\n                    endX + MIN_LINE_SIZE,\n                    endY,\n                    radius,\n                    isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY + MIN_LINE_SIZE,\n                secondCurvatureRadius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY + MIN_LINE_SIZE,\n                secondCurvatureRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createBottomTopCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const halfY = (startY + endY) / 2;\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n\n    if (!isEndPointOnUpSide) {\n        const horizontalDifference = startX - endX;\n\n        radius = adjustRadius(horizontalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            isEndPointOnRightSide\n                ? createVerticalLineToRightWithCurve(\n                      startX,\n                      halfY,\n                      radius,\n                      isEndPointOnUpSide,\n                  )\n                : createVerticalLineToLeftWithCurve(\n                      startX,\n                      halfY,\n                      radius,\n                      isEndPointOnUpSide,\n                  ),\n            createHorizontalLineWithCurve(\n                endX,\n                halfY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        if (endX >= startX + MIN_LINE_SIZE) {\n            return [\n                createStartPoint(startX, startY),\n                createHorizontalLineWithCurve(\n                    endX,\n                    startY,\n                    radius,\n                    isEndPointOnRightSide,\n                    isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n    }\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(\n                startX,\n                startY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        let secondCurvatureRadius = radius;\n\n        if (endX + MIN_LINE_SIZE > startX) {\n            secondCurvatureRadius = Math.min(\n                radius,\n                Math.abs((endX + radius - (startX - radius)) / 4),\n            );\n\n            return [\n                createStartPoint(startX, startY),\n                createVerticalLineToRightWithCurve(\n                    startX,\n                    startY + MIN_LINE_SIZE,\n                    secondCurvatureRadius,\n                    !isEndPointOnUpSide,\n                ),\n                createHorizontalLineWithCurve(\n                    endX + MIN_LINE_SIZE,\n                    startY + MIN_LINE_SIZE,\n                    secondCurvatureRadius,\n                    !isEndPointOnRightSide,\n                    isEndPointOnUpSide,\n                ),\n                createVerticalLineToLeftWithCurve(\n                    endX + MIN_LINE_SIZE,\n                    endY - MIN_LINE_SIZE,\n                    radius,\n                    isEndPointOnUpSide,\n                ),\n                createHorizontalLineWithCurve(\n                    endX,\n                    endY - MIN_LINE_SIZE,\n                    radius,\n                    isEndPointOnRightSide,\n                    !isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n\n        if (endX + radius <= startX - radius) {\n            secondCurvatureRadius = Math.min(\n                radius,\n                Math.abs((endX + radius - (startX - radius)) / 4),\n            );\n        }\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY + MIN_LINE_SIZE,\n                secondCurvatureRadius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY + MIN_LINE_SIZE,\n                secondCurvatureRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","// Right\nexport * from './right-bottom-smoothstep.util';\nexport * from './right-left-smoothstep.util';\nexport * from './right-right-smoothstep.util';\nexport * from './right-top-smoothstep.util';\n// Bottom\nexport * from './bottom-bottom-smoothstep.util';\nexport * from './bottom-left-smoothstep.util';\nexport * from './bottom-right-smoothstep.util';\nexport * from './bottom-top-smoothstep.util';\n// Top\nexport * from './top-bottom-smoothstep.util';\nexport * from './top-left-smoothstep.util';\nexport * from './top-right-smoothstep.util';\nexport * from './top-top-smoothstep.util';\n// Left\nexport * from './left-bottom-smoothstep.util';\nexport * from './left-left-smoothstep.util';\nexport * from './left-right-smoothstep.util';\nexport * from './left-top-smoothstep.util';\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createLeftBottomCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX - MIN_LINE_SIZE < endX;\n    const isEndPointOnUpSide = startY > endY + MIN_LINE_SIZE - radius;\n    const horizontalDifference = startX - MIN_LINE_SIZE - endX;\n    const verticalDifference = startY + MIN_LINE_SIZE - endY;\n    const halfY = (startY + endY) / 2;\n    let secondRadius = radius;\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                endX,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        secondRadius = Math.min(\n            adjustRadius(horizontalDifference, radius),\n            adjustRadius(verticalDifference, radius),\n        );\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX - MIN_LINE_SIZE,\n                startY,\n                secondRadius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                startX - MIN_LINE_SIZE,\n                halfY,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                halfY,\n                secondRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && !isEndPointOnUpSide) {\n        radius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                endX - MIN_LINE_SIZE,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                endX - MIN_LINE_SIZE,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && !isEndPointOnUpSide) {\n        radius = adjustRadius(horizontalDifference, radius);\n        secondRadius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX - MIN_LINE_SIZE,\n                startY,\n                secondRadius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                startX - MIN_LINE_SIZE,\n                endY + MIN_LINE_SIZE,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createLeftLeftCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const verticalDifference = startY - endY;\n\n    radius = adjustRadius(verticalDifference, radius);\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n\n    if (startX === endX && endY === startY) {\n        return '';\n    }\n\n    radius = adjustRadius(verticalDifference, radius);\n\n    if (endX <= startX) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                endX - MIN_LINE_SIZE - radius,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                endX - MIN_LINE_SIZE - radius,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return [\n        createStartPoint(startX, startY),\n        createHorizontalLineWithCurve(\n            startX - MIN_LINE_SIZE - radius,\n            startY,\n            radius,\n            !isEndPointOnRightSide,\n            isEndPointOnUpSide,\n        ),\n        createVerticalLineToRightWithCurve(\n            startX - MIN_LINE_SIZE - radius,\n            endY,\n            radius,\n            isEndPointOnUpSide,\n        ),\n        createEndPoint(endX, endY),\n    ].join(' ');\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createLeftRightCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const verticalDifference = startY - endY;\n\n    radius = adjustRadius(verticalDifference, radius);\n    const halfX = (startX + endX) / 2;\n    const halfY = (startY + endY) / 2;\n    const isEndPointOnLeftSide = startX > endX;\n    const isEndPointOnRightSide = startX < endX + MIN_LINE_SIZE;\n    const isEndPointOnUpSide = startY > endY;\n\n    if (endX === startX) {\n        return '';\n    }\n\n    if (\n        isEndPointOnRightSide &&\n        isEndPointOnLeftSide &&\n        startY < endY + MIN_LINE_SIZE &&\n        startY + MIN_LINE_SIZE > endY\n    ) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                halfX,\n                startY,\n                radius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(halfX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                halfX,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(halfX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return [\n        createStartPoint(startX, startY),\n        createHorizontalLineWithCurve(\n            startX - MIN_LINE_SIZE,\n            startY,\n            radius,\n            !isEndPointOnRightSide,\n            isEndPointOnUpSide,\n        ),\n        createVerticalLineToRightWithCurve(\n            startX - MIN_LINE_SIZE,\n            halfY,\n            radius,\n            isEndPointOnUpSide,\n        ),\n        createHorizontalLineWithCurve(\n            endX + MIN_LINE_SIZE,\n            halfY,\n            radius,\n            isEndPointOnRightSide,\n            isEndPointOnUpSide,\n        ),\n        createVerticalLineToLeftWithCurve(\n            endX + MIN_LINE_SIZE,\n            endY,\n            radius,\n            isEndPointOnUpSide,\n        ),\n        createEndPoint(endX, endY),\n    ].join(' ');\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createLeftTopCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n    const horizontalDifference = startX - endX;\n    const halfX = (startX + endX) / 2;\n    const halfY = (startY + endY) / 2;\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        radius = adjustRadius(horizontalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                halfX,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                halfX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && !isEndPointOnUpSide) {\n        if (endX <= startX + MIN_LINE_SIZE) {\n            return [\n                createStartPoint(startX, startY),\n                createHorizontalLineWithCurve(\n                    endX,\n                    startY,\n                    radius,\n                    isEndPointOnRightSide,\n                    isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n\n        const firstLineEndX = startX - MIN_LINE_SIZE;\n\n        if (startY + radius * 2 >= endY - radius * 2) {\n            radius = (endY - startY) / 4;\n        }\n\n        const secondCurveRadius = Math.min(radius, firstLineEndX - endX);\n        const secondLineEndX = endX + secondCurveRadius / 2;\n        const horizontalLineToEndX = `L ${secondLineEndX} ${halfY}`;\n        const thirdCurve = `Q ${secondLineEndX - secondCurveRadius / 2} ${halfY} ${endX} ${halfY + secondCurveRadius / 2}`;\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX - MIN_LINE_SIZE,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                startX - MIN_LINE_SIZE,\n                halfY,\n                secondCurveRadius,\n                isEndPointOnUpSide,\n            ),\n            horizontalLineToEndX,\n            thirdCurve,\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && !isEndPointOnUpSide) {\n        if (startY + radius * 2 >= endY - radius * 2) {\n            radius = (endY - startY) / 4;\n        }\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX - MIN_LINE_SIZE,\n                startY,\n                radius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                startX - MIN_LINE_SIZE,\n                halfY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                halfY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX - MIN_LINE_SIZE,\n                startY,\n                radius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                startX - MIN_LINE_SIZE,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n} from '../utils';\n\nexport function createRightBottomCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX + MIN_LINE_SIZE < endX;\n    const isEndPointOnUpSide = startY > endY + MIN_LINE_SIZE - radius;\n    const horizontalDifference = startX + MIN_LINE_SIZE - endX;\n    const verticalDifference = startY + MIN_LINE_SIZE - endY;\n    const halfY = (startY + endY) / 2;\n    let secondRadius = radius;\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                endX,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        secondRadius = Math.min(\n            adjustRadius(horizontalDifference, radius),\n            adjustRadius(verticalDifference, radius),\n        );\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX + MIN_LINE_SIZE,\n                startY,\n                secondRadius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                startX + MIN_LINE_SIZE,\n                halfY,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                halfY,\n                secondRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && !isEndPointOnUpSide) {\n        radius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && !isEndPointOnUpSide) {\n        radius = adjustRadius(horizontalDifference, radius);\n        secondRadius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX + MIN_LINE_SIZE,\n                startY,\n                secondRadius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                startX + MIN_LINE_SIZE,\n                endY + MIN_LINE_SIZE,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createRightLeftCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const verticalDifference = startY - endY;\n\n    radius = adjustRadius(verticalDifference, radius);\n    const halfX = (startX + endX) / 2;\n    const halfY = (startY + endY) / 2;\n    const isEndPointOnLeftSide = startX > endX;\n    const isEndPointOnRightSide = startX + MIN_LINE_SIZE <= endX;\n    const isEndPointOnUpSide = startY > endY;\n\n    if (\n        !isEndPointOnRightSide &&\n        !isEndPointOnLeftSide &&\n        startY < endY + MIN_LINE_SIZE &&\n        startY + MIN_LINE_SIZE > endY\n    ) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                halfX,\n                startY,\n                radius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(halfX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                halfX,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(halfX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return [\n        createStartPoint(startX, startY),\n        createHorizontalLineWithCurve(\n            startX + MIN_LINE_SIZE,\n            startY,\n            radius,\n            !isEndPointOnRightSide,\n            isEndPointOnUpSide,\n        ),\n        createVerticalLineToLeftWithCurve(\n            startX + MIN_LINE_SIZE,\n            halfY,\n            radius,\n            isEndPointOnUpSide,\n        ),\n        createHorizontalLineWithCurve(\n            endX - MIN_LINE_SIZE,\n            halfY,\n            radius,\n            isEndPointOnRightSide,\n            isEndPointOnUpSide,\n        ),\n        createVerticalLineToRightWithCurve(\n            endX - MIN_LINE_SIZE,\n            endY,\n            radius,\n            isEndPointOnUpSide,\n        ),\n        createEndPoint(endX, endY),\n    ].join(' ');\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n} from '../utils';\n\nexport function createRightRightCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const verticalDifference = startY - endY;\n\n    radius = adjustRadius(verticalDifference, radius);\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n\n    if (startX === endX && endY === startY) {\n        return '';\n    }\n\n    radius = adjustRadius(verticalDifference, radius);\n\n    if (endX >= startX) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE - radius,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE - radius,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return [\n        createStartPoint(startX, startY),\n        createHorizontalLineWithCurve(\n            startX + MIN_LINE_SIZE - radius,\n            startY,\n            radius,\n            !isEndPointOnRightSide,\n            isEndPointOnUpSide,\n        ),\n        createVerticalLineToLeftWithCurve(\n            startX + MIN_LINE_SIZE - radius,\n            endY,\n            radius,\n            isEndPointOnUpSide,\n        ),\n        createEndPoint(endX, endY),\n    ].join(' ');\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createRightTopCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n    const horizontalDifference = startX - endX;\n    const halfX = (startX + endX) / 2;\n    const halfY = (startY + endY) / 2;\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        radius = adjustRadius(horizontalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                halfX,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                halfX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && !isEndPointOnUpSide) {\n        if (endX >= startX + MIN_LINE_SIZE) {\n            return [\n                createStartPoint(startX, startY),\n                createHorizontalLineWithCurve(\n                    endX,\n                    startY,\n                    radius,\n                    isEndPointOnRightSide,\n                    isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n\n        const firstLineEndX = startX + MIN_LINE_SIZE;\n\n        if (startY + radius * 2 >= endY - radius * 2) {\n            radius = (endY - startY) / 4;\n        }\n\n        const secondCurveRadius = Math.min(radius, firstLineEndX - endX);\n        const secondLineEndX = endX + secondCurveRadius / 2;\n        const horizontalLineToEndX = `L ${secondLineEndX} ${halfY}`;\n        const thirdCurve = `Q ${secondLineEndX - secondCurveRadius / 2} ${halfY} ${endX} ${halfY + secondCurveRadius / 2}`;\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX + MIN_LINE_SIZE,\n                startY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                startX + MIN_LINE_SIZE,\n                halfY,\n                secondCurveRadius,\n                isEndPointOnUpSide,\n            ),\n            horizontalLineToEndX,\n            thirdCurve,\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && !isEndPointOnUpSide) {\n        if (startY + radius * 2 >= endY - radius * 2) {\n            radius = (endY - startY) / 4;\n        }\n\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX + MIN_LINE_SIZE,\n                startY,\n                radius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                startX + MIN_LINE_SIZE,\n                halfY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                halfY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createHorizontalLineWithCurve(\n                startX + MIN_LINE_SIZE,\n                startY,\n                radius,\n                !isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                startX + MIN_LINE_SIZE,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createTopBottomCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const halfY = (startY + endY) / 2;\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n\n    if (startY === endY) {\n        return '';\n    }\n\n    if (isEndPointOnUpSide) {\n        const horizontalDifference = startX - endX;\n\n        radius = adjustRadius(horizontalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            isEndPointOnRightSide\n                ? createVerticalLineToRightWithCurve(\n                      startX,\n                      halfY,\n                      radius,\n                      isEndPointOnUpSide,\n                  )\n                : createVerticalLineToLeftWithCurve(\n                      startX,\n                      halfY,\n                      radius,\n                      isEndPointOnUpSide,\n                  ),\n            createHorizontalLineWithCurve(\n                endX,\n                halfY,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && !isEndPointOnUpSide) {\n        let secondCurvatureRadius = radius;\n\n        if (endX + MIN_LINE_SIZE > startX) {\n            secondCurvatureRadius = Math.min(\n                radius,\n                Math.abs((endX + radius - (startX - radius)) / 4),\n            );\n\n            return [\n                createStartPoint(startX, startY),\n                createVerticalLineToRightWithCurve(\n                    startX,\n                    startY - MIN_LINE_SIZE,\n                    secondCurvatureRadius,\n                    !isEndPointOnUpSide,\n                ),\n                createHorizontalLineWithCurve(\n                    endX + MIN_LINE_SIZE,\n                    startY - MIN_LINE_SIZE,\n                    secondCurvatureRadius,\n                    !isEndPointOnRightSide,\n                    isEndPointOnUpSide,\n                ),\n                createVerticalLineToLeftWithCurve(\n                    endX + MIN_LINE_SIZE,\n                    endY + MIN_LINE_SIZE,\n                    radius,\n                    isEndPointOnUpSide,\n                ),\n                createHorizontalLineWithCurve(\n                    endX,\n                    endY + MIN_LINE_SIZE,\n                    radius,\n                    isEndPointOnRightSide,\n                    !isEndPointOnUpSide,\n                ),\n                createEndPoint(endX, endY),\n            ].join(' ');\n        }\n\n        if (endX + radius <= startX - radius) {\n            secondCurvatureRadius = Math.min(\n                radius,\n                Math.abs((endX + radius - (startX - radius)) / 4),\n            );\n        }\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                secondCurvatureRadius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY - MIN_LINE_SIZE,\n                secondCurvatureRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && !isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY + MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY + MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createTopLeftCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX - MIN_LINE_SIZE + radius < endX;\n    const isEndPointOnUpSide = startY > endY;\n    const verticalDifference = startY - endY - MIN_LINE_SIZE;\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        const secondRadius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX - MIN_LINE_SIZE,\n                startY - MIN_LINE_SIZE,\n                secondRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                endX - MIN_LINE_SIZE,\n                endY,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnUpSide && !isEndPointOnRightSide) {\n        const secondRadius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                Math.min(startX - MIN_LINE_SIZE, endX - MIN_LINE_SIZE),\n                startY - MIN_LINE_SIZE,\n                secondRadius,\n                false,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                Math.min(startX - MIN_LINE_SIZE, endX - MIN_LINE_SIZE),\n                endY,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnUpSide && isEndPointOnRightSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                startX - MIN_LINE_SIZE,\n                startY - MIN_LINE_SIZE,\n                radius,\n                false,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToRightWithCurve(\n                startX - MIN_LINE_SIZE,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(startX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createTopRightCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX + MIN_LINE_SIZE + radius < endX;\n    const isEndPointOnUpSide = startY > endY;\n    const verticalDifference = startY - endY - MIN_LINE_SIZE;\n\n    if (isEndPointOnRightSide && isEndPointOnUpSide) {\n        const secondRadius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY - MIN_LINE_SIZE,\n                secondRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnUpSide && isEndPointOnRightSide) {\n        const secondRadius = adjustRadius(verticalDifference, radius);\n\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                endX + MIN_LINE_SIZE,\n                startY - MIN_LINE_SIZE,\n                secondRadius,\n                isEndPointOnRightSide,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                endX + MIN_LINE_SIZE,\n                endY,\n                secondRadius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnUpSide && !isEndPointOnRightSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToRightWithCurve(\n                startX,\n                startY - MIN_LINE_SIZE,\n                radius,\n                !isEndPointOnUpSide,\n            ),\n            createHorizontalLineWithCurve(\n                startX + MIN_LINE_SIZE,\n                startY - MIN_LINE_SIZE,\n                radius,\n                true,\n                isEndPointOnUpSide,\n            ),\n            createVerticalLineToLeftWithCurve(\n                startX + MIN_LINE_SIZE,\n                endY,\n                radius,\n                isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    if (!isEndPointOnRightSide && isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            createVerticalLineToLeftWithCurve(startX, endY, radius, isEndPointOnUpSide),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return '';\n}\n","import type {DfPathCoords} from '../../../../../ng-draw-flow.interfaces';\nimport {MIN_LINE_SIZE} from '../consts';\nimport {\n    adjustRadius,\n    createEndPoint,\n    createHorizontalLineWithCurve,\n    createStartPoint,\n    createVerticalLineToLeftWithCurve,\n    createVerticalLineToRightWithCurve,\n} from '../utils';\n\nexport function createTopTopCurve({\n    startX,\n    startY,\n    endX,\n    endY,\n    radius,\n}: DfPathCoords): string {\n    const isEndPointOnRightSide = startX < endX;\n    const isEndPointOnUpSide = startY > endY;\n    const horizontalDifference = startX - endX;\n\n    radius = adjustRadius(horizontalDifference, radius);\n\n    if (startY === endY) {\n        return '';\n    }\n\n    if (isEndPointOnUpSide) {\n        return [\n            createStartPoint(startX, startY),\n            isEndPointOnRightSide\n                ? createVerticalLineToRightWithCurve(\n                      startX,\n                      endY - MIN_LINE_SIZE,\n                      radius,\n                      isEndPointOnUpSide,\n                  )\n                : createVerticalLineToLeftWithCurve(\n                      startX,\n                      endY - MIN_LINE_SIZE,\n                      radius,\n                      isEndPointOnUpSide,\n                  ),\n            createHorizontalLineWithCurve(\n                endX,\n                endY - MIN_LINE_SIZE,\n                radius,\n                isEndPointOnRightSide,\n                !isEndPointOnUpSide,\n            ),\n            createEndPoint(endX, endY),\n        ].join(' ');\n    }\n\n    return [\n        createStartPoint(startX, startY),\n        isEndPointOnRightSide\n            ? createVerticalLineToRightWithCurve(\n                  startX,\n                  startY - MIN_LINE_SIZE,\n                  radius,\n                  !isEndPointOnUpSide,\n              )\n            : createVerticalLineToLeftWithCurve(\n                  startX,\n                  startY - MIN_LINE_SIZE,\n                  radius,\n                  !isEndPointOnUpSide,\n              ),\n        createHorizontalLineWithCurve(\n            endX,\n            startY - MIN_LINE_SIZE,\n            radius,\n            isEndPointOnRightSide,\n            isEndPointOnUpSide,\n        ),\n        createEndPoint(endX, endY),\n    ].join(' ');\n}\n","export * from './create-smoothstep-path.util';\n","export function adjustRadius(difference: number, radius: number): number {\n    if (Math.abs(difference) <= radius * 4) {\n        return Math.abs(difference) / 4;\n    }\n\n    if (Math.abs(difference) <= radius * 2) {\n        return Math.abs(difference) / 2;\n    }\n\n    return radius;\n}\n\nexport function createStartPoint(x: number, y: number): string {\n    return `M ${x} ${y}`;\n}\n\nexport function createEndPoint(x: number, y: number): string {\n    return createLine(x, y);\n}\n\n/* eslint-disable @typescript-eslint/max-params */\nexport function createHorizontalLineWithCurve(\n    x: number,\n    y: number,\n    radius: number,\n    isEndPointOnRightSide: boolean,\n    isEndPointOnUpSide: boolean,\n): string {\n    const lineToCurvature = createLine(\n        isEndPointOnRightSide ? x - radius : x + radius,\n        y,\n    );\n\n    return `${lineToCurvature} Q ${x} ${y}, ${x} ${isEndPointOnUpSide ? y - radius : y + radius}`;\n}\n\nexport function createVerticalLineToRightWithCurve(\n    x: number,\n    y: number,\n    radius: number,\n    isEndPointOnUpSide = false,\n): string {\n    const lineToCurvature = createLine(x, isEndPointOnUpSide ? y + radius : y - radius);\n\n    return `${lineToCurvature} Q ${x} ${y}, ${x + radius} ${y}`;\n}\n\nexport function createVerticalLineToLeftWithCurve(\n    x: number,\n    y: number,\n    radius: number,\n    isEndPointOnUpSide = false,\n): string {\n    const lineToCurvature = createLine(x, isEndPointOnUpSide ? y + radius : y - radius);\n\n    return `${lineToCurvature} Q ${x} ${y}, ${x - radius} ${y}`;\n}\n/* eslint-enable @typescript-eslint/max-params */\n\nexport function createLine(x: number, y: number): string {\n    return `L ${x} ${y}`;\n}\n","import {isConnectorType} from '../../../helpers';\nimport type {DfDataConnector} from '../../../ng-draw-flow.interfaces';\n\nexport function getConnectorDataset(element: HTMLElement): DfDataConnector | null {\n    const {nodeId, connectorId, connectorType, position} = element.dataset;\n    const isValidConnector =\n        nodeId && connectorId && connectorType && isConnectorType(connectorType);\n\n    return isValidConnector\n        ? {\n              nodeId,\n              connectorId,\n              connectorType,\n              position,\n          }\n        : null;\n}\n","export * from './calculate-curvature.util';\nexport * from './calculate-distance.util';\nexport * from './create-bezier-path.util';\nexport * from './create-smoothstep-path';\n","import {DestroyRef, Directive, ElementRef, HostBinding, inject} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {filter} from 'rxjs';\n\nimport type {\n    DfConnectionPoint,\n    DfConnectorPosition,\n    DfDataConnectorConfig,\n    DfPoint,\n} from '../../ng-draw-flow.interfaces';\nimport {ConnectionsService} from '../connections/connections.service';\n\n@Directive()\nexport abstract class BaseConnector {\n    protected abstract data: DfDataConnectorConfig;\n    protected readonly destroyRef = inject(DestroyRef);\n    protected isDisabled = false;\n    public coordinates?: DfPoint;\n    public position?: DfConnectorPosition;\n\n    @HostBinding('attr.data-node-id')\n    public get bindNodeId(): string {\n        return this.data?.nodeId;\n    }\n\n    @HostBinding('attr.data-connector-id')\n    public get bindConnectorId(): string {\n        return this.data?.connectorId;\n    }\n\n    @HostBinding('attr.data-position')\n    public get bindPosition(): DfConnectorPosition | undefined {\n        return this.position;\n    }\n\n    @HostBinding('attr.data-connector-type')\n    protected connectorType!: DfConnectionPoint;\n\n    public readonly nativeElement = inject(ElementRef).nativeElement;\n    protected readonly connectionsService = inject(ConnectionsService);\n\n    protected readonly sub = this.connectionsService.usedConnectors$\n        .pipe(\n            filter(() => !!this.data?.connectorId),\n            takeUntilDestroyed(),\n        )\n        .subscribe((usedConnectorIds: string[]) => {\n            this.setupDisabledState(usedConnectorIds.includes(this.data.connectorId));\n        });\n\n    protected setupDisabledState(connected: boolean): void {\n        if (connected) {\n            this.nativeElement.setAttribute('data-connected', 'true');\n        } else {\n            this.nativeElement.removeAttribute('data-connected');\n        }\n\n        this.isDisabled = this.data.single && connected;\n\n        this.nativeElement.classList.toggle('df-disabled', this.isDisabled);\n    }\n\n    public destroy(): void {\n        this.connectionsService.removeConnectionsByConnectorId(this.data.connectorId);\n    }\n}\n","export * from './input.component';\nexport * from './output.component';\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\n\nimport type {DfDataConnectorConfig} from '../../ng-draw-flow.interfaces';\nimport {DfConnectionPoint, DfConnectorPosition} from '../../ng-draw-flow.interfaces';\nimport {BaseConnector} from './base-connector';\n\n@Component({\n    standalone: true,\n    selector: 'df-input',\n    template: '',\n    styleUrls: ['./connector.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DfInputComponent extends BaseConnector {\n    protected override connectorType = DfConnectionPoint.Input;\n\n    @Input('connectorData')\n    public data!: DfDataConnectorConfig;\n\n    @Input()\n    public override position = DfConnectorPosition.Left;\n}\n","import {ChangeDetectionStrategy, Component, inject, Input} from '@angular/core';\n\nimport type {DfDataConnectorConfig} from '../../ng-draw-flow.interfaces';\nimport {DfConnectionPoint, DfConnectorPosition} from '../../ng-draw-flow.interfaces';\nimport {DraftConnectionService} from '../connections/draft-connection/draft-connection.service';\nimport {BaseConnector} from './base-connector';\n\n@Component({\n    standalone: true,\n    selector: 'df-output',\n    template: '',\n    styleUrls: ['./connector.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(pointerdown.stop)': 'this.onDragStart($event)',\n    },\n})\nexport class DfOutputComponent extends BaseConnector {\n    protected override connectorType = DfConnectionPoint.Output;\n    private readonly draftConnectionService = inject(DraftConnectionService);\n\n    @Input('connectorData')\n    public data!: DfDataConnectorConfig;\n\n    @Input()\n    public override position = DfConnectorPosition.Right;\n\n    protected onDragStart(_event: PointerEvent): void {\n        const {nodeId, connectorId} = this.data;\n\n        if (!nodeId || !connectorId || this.isDisabled) {\n            return;\n        }\n\n        this.draftConnectionService.connection$.next({\n            nodeId,\n            connectorId,\n            connectorType: DfConnectionPoint.Output,\n            position: this.position,\n        });\n    }\n}\n","import type {\n    AfterViewInit,\n    ComponentRef,\n    ElementRef,\n    OnChanges,\n    QueryList,\n    SimpleChanges,\n} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    DestroyRef,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport type {Observable} from 'rxjs';\nimport {merge, tap} from 'rxjs';\n\nimport type {DfDragDrop, DfDragDropDistance} from '../../directives';\nimport {\n    DfDragDropStage,\n    DragDropDirective,\n    SelectableElementDirective,\n} from '../../directives';\nimport {createConnectorHash, INITIAL_COORDINATES} from '../../helpers';\nimport {DRAW_FLOW_OPTIONS} from '../../ng-draw-flow.configs';\nimport type {\n    DfDataInitialNode,\n    DfDataNode,\n    DfOptions,\n    DfPoint,\n} from '../../ng-draw-flow.interfaces';\nimport {DfConnectionPoint} from '../../ng-draw-flow.interfaces';\nimport {DRAW_FLOW_ROOT_ELEMENT} from '../../ng-draw-flow.token';\nimport type {DrawFlowBaseNode} from '../../ng-draw-flow-node.base';\nimport {CoordinatesService} from '../../services/coordinates.service';\nimport type {DfInputComponent, DfOutputComponent} from '../connectors';\nimport {DF_PAN_ZOOM_OPTIONS} from '../pan-zoom/pan-zoom.options';\nimport {PanZoomService} from '../pan-zoom/pan-zoom.service';\n\n@Component({\n    standalone: true,\n    selector: 'df-node',\n    imports: [DragDropDirective, SelectableElementDirective],\n    templateUrl: './node.component.html',\n    styleUrls: ['./node.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(document:keydown.delete)': 'this.handleKeyboardEvent($event)',\n        '(document:keydown.backspace)': 'this.handleKeyboardEvent($event)',\n    },\n})\nexport class NodeComponent implements AfterViewInit, OnChanges {\n    private readonly cdr = inject(ChangeDetectorRef);\n    private readonly destroyRef = inject(DestroyRef);\n    private readonly panZoomService = inject(PanZoomService);\n    private readonly coordinatesService = inject(CoordinatesService);\n    private readonly drawFlowComponents = inject<DfOptions>(DRAW_FLOW_OPTIONS).nodes;\n    private readonly nodeDragThreshold =\n        inject<DfOptions>(DRAW_FLOW_OPTIONS).options.nodeDragThreshold;\n\n    private readonly drawFlowElement = inject<HTMLElement>(DRAW_FLOW_ROOT_ELEMENT);\n    private readonly panZoomOptions = inject(DF_PAN_ZOOM_OPTIONS);\n\n    private innerComponent!: DrawFlowBaseNode;\n    private nodeContentComponentRef!: ComponentRef<DrawFlowBaseNode>;\n    private nodeWidth!: number;\n    private nodeHeight!: number;\n    private selected = false;\n    private value!: DfDataNode;\n    private accumulatedDelta: DfPoint = INITIAL_COORDINATES;\n    private previousInputs: DfInputComponent[] = [];\n    private previousOutputs: DfOutputComponent[] = [];\n\n    @ViewChild('nodeElement')\n    private readonly nodeElementRef!: ElementRef<HTMLElement>;\n\n    @ViewChild('container', {read: ViewContainerRef})\n    private readonly containerRef!: ViewContainerRef;\n\n    @Input()\n    public node!: DfDataInitialNode | DfDataNode;\n\n    @Input()\n    public invalid = false;\n\n    @Output()\n    protected readonly nodeMoved = new EventEmitter<DfDataNode>();\n\n    @Output()\n    protected readonly nodeDeleted = new EventEmitter<void>();\n\n    @Output()\n    protected readonly nodeSelected = new EventEmitter<DfDataNode>();\n\n    @Output()\n    protected readonly connectorDeleted = new EventEmitter<string>();\n\n    protected cursor: 'grabbing' | 'initial' = 'initial';\n\n    protected handleKeyboardEvent(event: KeyboardEvent): void {\n        if (this.selected && !this.node.startNode) {\n            event.preventDefault();\n\n            this.nodeDeleted.emit();\n        }\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.invalid && this.innerComponent) {\n            this.innerComponent.invalid = changes.invalid.currentValue;\n            this.innerComponent.markForCheck();\n        }\n    }\n\n    public ngAfterViewInit(): void {\n        this.createNodeContentComponent(this.node);\n        this.subscribeToConnectorsChanges();\n        this.saveInnerNodeSize();\n        this.fillValue();\n        this.setInitialPosition();\n        this.updateConnectorsCoordinates();\n\n        if (this.invalid) {\n            this.innerComponent.invalid = true;\n            this.innerComponent.markForCheck();\n        }\n    }\n\n    protected createNodeContentComponent(node: DfDataInitialNode | DfDataNode): void {\n        const {id: nodeId, startNode, endNode, data} = node;\n        const nodeType = data.type;\n\n        this.containerRef.clear();\n        this.nodeContentComponentRef = this.containerRef.createComponent(\n            this.drawFlowComponents[nodeType]!,\n        );\n\n        this.innerComponent = this.nodeContentComponentRef.instance;\n\n        this.innerComponent.nodeId = nodeId;\n        this.innerComponent.startNode = startNode;\n        this.innerComponent.endNode = endNode;\n        this.innerComponent.model = data;\n\n        this.cdr.detectChanges();\n    }\n\n    protected onSelectedChanged(selected: boolean): void {\n        this.selected = selected;\n        this.innerComponent.selected = selected;\n\n        if (selected) {\n            this.nodeSelected.emit(this.value);\n        }\n    }\n\n    protected onDrag(event: DfDragDrop): void {\n        if (this.node.startNode) {\n            return;\n        }\n\n        if (event.stage === DfDragDropStage.Move) {\n            this.onDragMove(event.distance);\n        } else {\n            this.onDragEnd();\n        }\n    }\n\n    private onDragMove(distance: DfDragDropDistance): void {\n        const {zoom} = this.panZoomService.panzoomModel;\n\n        this.cursor = 'grabbing';\n\n        // Accumulate offset\n        this.accumulatedDelta.x += distance.deltaX / zoom;\n        this.accumulatedDelta.y += distance.deltaY / zoom;\n\n        const applyX = Math.abs(this.accumulatedDelta.x) >= this.nodeDragThreshold;\n        const applyY = Math.abs(this.accumulatedDelta.y) >= this.nodeDragThreshold;\n\n        if (applyX || applyY) {\n            // Apply accumulated offset\n            this.value.position.x += applyX ? this.accumulatedDelta.x : 0;\n            this.value.position.y += applyY ? this.accumulatedDelta.y : 0;\n\n            const centeredPosition = this.getCenteredPosition();\n\n            this.applyPositionToStyle(centeredPosition, true);\n            this.recalculateConnectorsPosition({\n                deltaX: applyX ? this.accumulatedDelta.x * zoom : 0,\n                deltaY: applyY ? this.accumulatedDelta.y * zoom : 0,\n            });\n\n            // Reset only used directions\n            if (applyX) {\n                this.accumulatedDelta.x = 0;\n            }\n\n            if (applyY) {\n                this.accumulatedDelta.y = 0;\n            }\n        }\n\n        this.panZoomService.panzoomDisabled = true;\n    }\n\n    private onDragEnd(): void {\n        this.cursor = 'initial';\n        this.panZoomService.panzoomDisabled = false;\n        this.nodeMoved.emit(this.value);\n        this.applyPositionToStyle(this.getCenteredPosition(), false);\n\n        this.accumulatedDelta = INITIAL_COORDINATES;\n    }\n\n    private fillValue(): void {\n        if (!('position' in this.node)) {\n            this.value = {\n                ...this.node,\n                position: this.getCenterOfViewport(),\n            };\n        } else {\n            this.value = this.node;\n        }\n    }\n\n    private saveInnerNodeSize(): void {\n        const nativeElement = this.nodeContentComponentRef.location.nativeElement;\n\n        this.nodeWidth = nativeElement.offsetWidth;\n        this.nodeHeight = nativeElement.offsetHeight;\n    }\n\n    private updateConnectorsCoordinates(): void {\n        const centeredCoordinates = this.getCenteredPosition();\n\n        this.innerComponent.inputs?.forEach((input: DfInputComponent) => {\n            this.updateConnectorCoordinates(\n                centeredCoordinates,\n                this.value.id,\n                input,\n                DfConnectionPoint.Input,\n            );\n        });\n\n        this.innerComponent.outputs?.forEach((output: DfOutputComponent) => {\n            this.updateConnectorCoordinates(\n                centeredCoordinates,\n                this.value.id,\n                output,\n                DfConnectionPoint.Output,\n            );\n        });\n    }\n\n    private recalculateConnectorsPosition(distance: DfDragDropDistance): void {\n        const {zoom} = this.panZoomService.panzoomModel;\n        const currentMoveDistance = {\n            deltaX: distance.deltaX / zoom,\n            deltaY: distance.deltaY / zoom,\n        };\n\n        this.innerComponent.inputs?.forEach((input: DfInputComponent) => {\n            this.recalculateConnectorPositionFromLast(\n                currentMoveDistance,\n                input,\n                DfConnectionPoint.Input,\n            );\n        });\n\n        this.innerComponent.outputs?.forEach((output: DfOutputComponent) => {\n            this.recalculateConnectorPositionFromLast(\n                currentMoveDistance,\n                output,\n                DfConnectionPoint.Output,\n            );\n        });\n    }\n\n    private recalculateConnectorPositionFromLast(\n        distance: DfDragDropDistance,\n        connector: DfInputComponent | DfOutputComponent,\n        connectorType: DfConnectionPoint,\n    ): void {\n        const newConnectorPosition = {\n            x: (connector.coordinates?.x ?? 0) + distance.deltaX,\n            y: (connector.coordinates?.y ?? 0) + distance.deltaY,\n        };\n\n        const connectorData = createConnectorHash({\n            nodeId: connector.data.nodeId,\n            connectorType,\n            connectorId: connector.data.connectorId,\n        });\n\n        connector.coordinates = newConnectorPosition;\n\n        this.coordinatesService.addConnectionPoint(\n            connectorData,\n            newConnectorPosition,\n            connector.position,\n        );\n    }\n\n    /* eslint-disable @typescript-eslint/max-params */\n    private updateConnectorCoordinates(\n        position: DfPoint,\n        nodeId: string,\n        connector: DfInputComponent | DfOutputComponent,\n        connectorType: DfConnectionPoint,\n    ): void {\n        const calculatedConnectorPosition = this.calculateConnectorPosition(\n            connector.nativeElement,\n            position,\n        );\n\n        connector.coordinates = calculatedConnectorPosition;\n\n        const connectorData = createConnectorHash({\n            nodeId,\n            connectorType,\n            connectorId: connector.nativeElement.dataset.connectorId,\n        });\n\n        this.coordinatesService.addConnectionPoint(\n            connectorData,\n            calculatedConnectorPosition,\n            connector.position,\n        );\n    }\n    /* eslint-enable @typescript-eslint/max-params */\n\n    private calculateConnectorPosition(\n        element: HTMLElement,\n        nodePosition: DfPoint,\n    ): DfPoint {\n        let x = nodePosition.x + element.offsetLeft + element.clientWidth / 2;\n        let y = nodePosition.y + element.offsetTop + element.clientHeight / 2;\n\n        while (element && !element.hasAttribute('data-draw-flow-node')) {\n            element = element.offsetParent as HTMLElement;\n\n            if (element) {\n                x += element.offsetLeft;\n                y += element.offsetTop;\n            }\n        }\n\n        return {x, y};\n    }\n\n    private applyPositionToStyle(position: DfPoint, dynamic: boolean): void {\n        this.nodeElementRef.nativeElement.style.transform = dynamic\n            ? `translate3D(${position.x}px, ${position.y}px, 0)`\n            : `translate(${position.x}px, ${position.y}px)`;\n    }\n\n    private getCenteredPosition(): DfPoint {\n        const {\n            panSize,\n            leftPosition: panZoomLeftPosition,\n            topPosition: panZoomTopPosition,\n        } = this.panZoomOptions;\n        const halfOfNodeWidth = this.nodeWidth / 2;\n        const halfOfNodeHeight = this.nodeHeight / 2;\n        const halfOfPanSize = panSize / 2;\n\n        const centeredPosition = {\n            x: this.value.position.x + halfOfPanSize - halfOfNodeWidth,\n            y: this.value.position.y + halfOfPanSize - halfOfNodeHeight,\n        };\n\n        if (panZoomTopPosition || panZoomTopPosition === 0) {\n            centeredPosition.y += halfOfNodeHeight;\n        }\n\n        if (panZoomLeftPosition || panZoomLeftPosition === 0) {\n            centeredPosition.x += halfOfNodeWidth;\n        }\n\n        return centeredPosition;\n    }\n\n    private subscribeToConnectorsChanges(): void {\n        if (!this.innerComponent) {\n            return;\n        }\n\n        this.previousOutputs = this.innerComponent?.outputs?.toArray() || [];\n        this.previousInputs = this.innerComponent?.inputs?.toArray() || [];\n\n        const connectorsUpdates$ = this.collectConnectorUpdateSources();\n\n        if (connectorsUpdates$.length > 0) {\n            merge(...connectorsUpdates$)\n                .pipe(takeUntilDestroyed(this.destroyRef))\n                .subscribe(() => this.updateConnectorsCoordinates());\n        }\n    }\n\n    private getCenterOfViewport(): DfPoint {\n        // Get the current scale of the pan\n        const {x: panPositionX, y: panPositionY, zoom} = this.panZoomService.panzoomModel;\n        const {\n            panSize,\n            leftPosition: panZoomLeftPosition,\n            topPosition: panZoomTopPosition,\n        } = this.panZoomOptions;\n        const halfOfPanSize = panSize / 2;\n\n        // Get current pan position\n        const scaledPanPositionX = halfOfPanSize + (panPositionX * -1) / zoom;\n        const scaledPanPositionY = halfOfPanSize + (panPositionY * -1) / zoom;\n\n        // Calculating the centre of the visible part of the viewport relative to the whole board\n        const position = {\n            x: scaledPanPositionX - halfOfPanSize,\n            y: scaledPanPositionY - halfOfPanSize,\n        };\n\n        if (panZoomLeftPosition) {\n            position.x -=\n                (this.drawFlowElement.offsetWidth / 2) * -1 +\n                panZoomLeftPosition +\n                this.nodeWidth / 2;\n        }\n\n        if (panZoomTopPosition) {\n            position.y -=\n                (this.drawFlowElement.offsetHeight / 2) * -1 +\n                panZoomTopPosition +\n                this.nodeHeight / 2;\n        }\n\n        return position;\n    }\n\n    private setInitialPosition(): void {\n        const centeredPosition = this.getCenteredPosition();\n\n        this.applyPositionToStyle(centeredPosition, false);\n    }\n\n    /**\n     * Collects all sources of connector updates\n     */\n    private collectConnectorUpdateSources(): Array<Observable<void>> {\n        const sources: Array<Observable<void>> = [];\n\n        this.addContentComponentUpdates(sources);\n        this.addInputsUpdates(sources);\n        this.addOutputsUpdates(sources);\n\n        return sources;\n    }\n\n    /**\n     * Adds updates from the node content component\n     */\n    private addContentComponentUpdates(sources: Array<Observable<void>>): void {\n        if (this.innerComponent?.connectorsUpdated) {\n            sources.push(this.innerComponent.connectorsUpdated);\n        }\n    }\n\n    /**\n     * Adds updates from inputs\n     */\n    private addInputsUpdates(sources: Array<Observable<any>>): void {\n        if (this.innerComponent?.inputs?.changes) {\n            sources.push(\n                this.innerComponent.inputs.changes.pipe(\n                    tap((currentInputs: QueryList<DfInputComponent>) => {\n                        this.handleRemovedInputs(currentInputs);\n                    }),\n                ),\n            );\n        }\n    }\n\n    /**\n     * Adds updates from outputs with handling for removed items\n     */\n    private addOutputsUpdates(sources: Array<Observable<any>>): void {\n        if (this.innerComponent?.outputs?.changes) {\n            sources.push(\n                this.innerComponent.outputs.changes.pipe(\n                    tap((currentOutputs: QueryList<DfOutputComponent>) => {\n                        this.handleRemovedOutputs(currentOutputs);\n                    }),\n                ),\n            );\n        }\n    }\n\n    /**\n     * Processes removed inputs\n     */\n    private handleRemovedInputs(currentInputs: QueryList<DfInputComponent>): void {\n        const currentArray = currentInputs.toArray();\n        const removedOutputs = this.previousInputs.filter(\n            (prev) => !currentArray.some((curr) => curr === prev),\n        );\n\n        if (removedOutputs.length > 0) {\n            removedOutputs.forEach((output: DfInputComponent) => {\n                this.connectorDeleted.emit(output.data.connectorId);\n            });\n        }\n\n        this.previousInputs = currentArray;\n    }\n\n    /**\n     * Processes removed outputs\n     */\n    private handleRemovedOutputs(currentOutputs: QueryList<DfOutputComponent>): void {\n        const currentArray = currentOutputs.toArray();\n        const removedOutputs = this.previousOutputs.filter(\n            (prev) => !currentArray.some((curr) => curr === prev),\n        );\n\n        if (removedOutputs.length > 0) {\n            removedOutputs.forEach((output: DfOutputComponent) => {\n                this.connectorDeleted.emit(output.data.connectorId);\n            });\n        }\n\n        this.previousOutputs = currentArray;\n    }\n}\n","<div\n    #nodeElement\n    data-draw-flow-node\n    class=\"draw-flow-node\"\n    [style.cursor]=\"cursor\"\n    (dfDragDrop)=\"onDrag($event)\"\n    (dfSelectableElement)=\"onSelectedChanged($event)\"\n>\n    <div class=\"node-content\">\n        <ng-container #container />\n    </div>\n</div>\n","import {AsyncPipe, NgIf} from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    inject,\n    Output,\n} from '@angular/core';\nimport {ResizeObserverService} from '@ng-web-apis/resize-observer';\nimport type {Observable} from 'rxjs';\nimport {\n    animationFrameScheduler,\n    BehaviorSubject,\n    combineLatest,\n    fromEvent,\n    map,\n    merge,\n    startWith,\n    Subject,\n    take,\n    tap,\n    throttleTime,\n    timer,\n} from 'rxjs';\n\nimport type {DfDragDrop} from '../../directives/drag-drop';\nimport {DfDragDropStage, DragDropDirective} from '../../directives/drag-drop';\nimport {DfResizeObserver} from '../../directives/resize-observer';\nimport {DF_FALSE_HANDLER, dfClamp, dfPx, INITIAL_COORDINATES} from '../../helpers';\nimport type {DfPoint} from '../../ng-draw-flow.interfaces';\nimport {DRAW_FLOW_ROOT_ELEMENT} from '../../ng-draw-flow.token';\nimport {DF_PAN_ZOOM_INITIAL_SCALE} from './pan-zoom.const';\nimport type {DfPanZoomOptions} from './pan-zoom.options';\nimport {DF_PAN_ZOOM_OPTIONS} from './pan-zoom.options';\nimport {PanZoomService} from './pan-zoom.service';\nimport {ZoomDirective} from './zoom';\nimport type {DfZoom} from './zoom/zoom.interfaces';\n\n@Component({\n    standalone: true,\n    selector: 'df-pan-zoom',\n    imports: [AsyncPipe, DfResizeObserver, DragDropDirective, NgIf, ZoomDirective],\n    templateUrl: './pan-zoom.component.html',\n    styleUrls: ['./pan-zoom.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PanZoomComponent {\n    private readonly el = inject<ElementRef<HTMLElement>>(ElementRef);\n    private readonly panZoomService = inject(PanZoomService);\n    private readonly drawFlowRootElement = inject<HTMLElement>(DRAW_FLOW_ROOT_ELEMENT);\n    private readonly panZoomOptions: DfPanZoomOptions =\n        inject<DfPanZoomOptions>(DF_PAN_ZOOM_OPTIONS);\n\n    private readonly resizeObserver$ = inject(ResizeObserverService);\n    private readonly zoom$ = new BehaviorSubject<number>(DF_PAN_ZOOM_INITIAL_SCALE);\n    private readonly coordinates$ = new BehaviorSubject<DfPoint>(INITIAL_COORDINATES);\n    private readonly manualZoomAnimation$ = new Subject<boolean>();\n    private readonly dragStage$ = new Subject<DfDragDropStage>();\n\n    @Output()\n    protected readonly scale = new EventEmitter<number>();\n\n    protected readonly zoomAnimationDuration = this.panZoomOptions.zoomAnimationDuration;\n    protected readonly cursor$ = this.dragStage$.pipe(\n        map((stage) => (stage === DfDragDropStage.Move ? 'grabbing' : 'initial')),\n        startWith('initial'),\n    );\n\n    protected readonly transitioned$ = merge(\n        this.manualZoomAnimation$,\n        this.dragStage$.pipe(\n            map((stage: DfDragDropStage) => stage !== DfDragDropStage.Move),\n        ),\n        fromEvent(this.el.nativeElement, 'touchmove', {passive: true}).pipe(\n            throttleTime(16, animationFrameScheduler, {leading: true, trailing: true}),\n            map(DF_FALSE_HANDLER),\n        ),\n        fromEvent(this.el.nativeElement, 'wheel', {passive: true}).pipe(\n            throttleTime(16, animationFrameScheduler, {leading: true, trailing: true}),\n            map(DF_FALSE_HANDLER),\n        ),\n    );\n\n    protected readonly wrapperTransform$ = combineLatest([\n        this.coordinates$.pipe(\n            tap(({x, y}: DfPoint) => {\n                this.panZoomService.panzoomModel.x = x;\n                this.panZoomService.panzoomModel.y = y;\n            }),\n            map(({x, y}: DfPoint) => `${dfPx(x)}, ${dfPx(y)}`),\n        ),\n        this.zoom$.pipe(\n            tap((zoom: number) => {\n                this.scale.emit(Math.round(zoom * 100));\n                this.panZoomService.panzoomModel.zoom = zoom;\n            }),\n        ),\n    ]).pipe(\n        map(([translate, zoom]) => `translate(${translate}) scale(${zoom}) rotate(0deg)`),\n    );\n\n    protected readonly panZoomContainerTransform$: Observable<string> =\n        this.resizeObserver$.pipe(\n            map((entries: readonly ResizeObserverEntry[]) => entries[0]!.contentRect),\n            map((rootSize: DOMRectReadOnly) => {\n                let translate = '';\n                const {\n                    leftPosition: panZoomLeftPosition,\n                    topPosition: panZoomTopPosition,\n                } = this.panZoomOptions;\n\n                if (panZoomLeftPosition || panZoomLeftPosition === 0) {\n                    const offset = (rootSize.width / 2) * -1 + panZoomLeftPosition;\n\n                    this.panZoomService.panzoomModel.offsetX = offset * -1;\n\n                    translate = `translateX(${offset}px)`;\n                } else {\n                    this.panZoomService.panzoomModel.offsetX = 0;\n                }\n\n                if (panZoomTopPosition || panZoomTopPosition === 0) {\n                    const offset = (rootSize.height / 2) * -1 + panZoomTopPosition;\n\n                    this.panZoomService.panzoomModel.offsetY = offset * -1;\n\n                    translate = `${translate}translateY(${offset}px)`;\n                } else {\n                    this.panZoomService.panzoomModel.offsetY = 0;\n                }\n\n                return translate;\n            }),\n        );\n\n    protected onPan({distance, stage}: DfDragDrop): void {\n        if (this.panZoomService.panzoomDisabled) {\n            return;\n        }\n\n        this.dragStage$.next(stage);\n\n        this.coordinates$.next(\n            this.getGuardedCoordinates(\n                this.coordinates$.value.x + distance.deltaX,\n                this.coordinates$.value.y + distance.deltaY,\n            ),\n        );\n    }\n\n    protected onZoom({clientX, clientY, delta}: DfZoom): void {\n        const {x: offsetX, y: offsetY} = this.drawFlowRootElement.getBoundingClientRect();\n\n        this.processZoom(clientX - offsetX, clientY - offsetY, delta);\n    }\n\n    public resetPanzoom(): void {\n        this.zoom$.next(DF_PAN_ZOOM_INITIAL_SCALE);\n        this.coordinates$.next(INITIAL_COORDINATES);\n    }\n\n    public zoomIn(): void {\n        const {zoomStep, maxZoom} = this.panZoomOptions;\n        const zoom = this.panZoomService.panzoomModel.zoom + zoomStep;\n\n        this.setZoom(zoom <= maxZoom ? zoom : maxZoom);\n    }\n\n    public zoomOut(): void {\n        const {zoomStep, minZoom} = this.panZoomOptions;\n        const zoom = this.panZoomService.panzoomModel.zoom - zoomStep;\n\n        this.setZoom(zoom >= minZoom ? zoom : minZoom);\n    }\n\n    private setZoom(zoom: number): void {\n        this.manualZoomAnimation$.next(true);\n        this.zoom$.next(zoom);\n        const {x, y} = this.coordinates$.value;\n\n        this.coordinates$.next(this.getGuardedCoordinates(x, y));\n        timer(this.zoomAnimationDuration)\n            .pipe(take(1))\n            .subscribe(() => this.manualZoomAnimation$.next(false));\n    }\n\n    private processZoom(clientX: number, clientY: number, delta: number): void {\n        const oldScale = this.zoom$.value;\n        const {minZoom, maxZoom} = this.panZoomOptions;\n        const newScale = dfClamp(oldScale + delta, minZoom, maxZoom);\n\n        const center = this.getScaleCenter(\n            {clientX, clientY},\n            this.coordinates$.value,\n            this.zoom$.value,\n        );\n\n        const moveX = center.x * oldScale - center.x * newScale;\n        const moveY = center.y * oldScale - center.y * newScale;\n\n        this.zoom$.next(newScale);\n        this.coordinates$.next(\n            this.getGuardedCoordinates(\n                this.coordinates$.value.x + moveX,\n                this.coordinates$.value.y + moveY,\n            ),\n        );\n    }\n\n    private getGuardedCoordinates(x: number, y: number): DfPoint {\n        const {offsetX, offsetY} = this.offsets();\n\n        return {\n            x: dfClamp(x, -offsetX, offsetX),\n            y: dfClamp(y, -offsetY, offsetY),\n        };\n    }\n\n    private getScaleCenter(\n        {clientX, clientY}: {clientX: number; clientY: number},\n        {x, y}: DfPoint,\n        scale: number,\n    ): DfPoint {\n        const {offsetWidth, offsetHeight} = this.el.nativeElement;\n\n        return {\n            x: (clientX - x - offsetWidth / 2) / scale,\n            y: (clientY - y - offsetHeight / 2) / scale,\n        };\n    }\n\n    private offsets(): {offsetX: number; offsetY: number} {\n        const {panSize} = this.panZoomOptions;\n        const offsetX = this.zoom$.value * panSize;\n        const offsetY = this.zoom$.value * panSize;\n\n        return {offsetX, offsetY};\n    }\n}\n","<div\n    class=\"pan-zoom\"\n    [style.cursor]=\"cursor$ | async\"\n    [style.transform]=\"wrapperTransform$ | async\"\n    [style.transition-duration]=\"(transitioned$ | async) ? zoomAnimationDuration + 'ms' : '0s'\"\n    (dfDragDrop)=\"onPan($event)\"\n    (dfZoom)=\"onZoom($event)\"\n>\n    <div\n        class=\"panzoom__container\"\n        [style.transform]=\"panZoomContainerTransform$ | async\"\n    >\n        <ng-content />\n    </div>\n</div>\n","export const DF_PAN_ZOOM_INITIAL_SCALE = 1;\n","import type {FactoryProvider} from '@angular/core';\nimport {InjectionToken} from '@angular/core';\n\nexport interface DfPanZoomOptions {\n    panSize: number;\n    topPosition: number | null;\n    leftPosition: number | null;\n    minZoom: number;\n    maxZoom: number;\n    zoomStep: number;\n    zoomAnimationDuration: number;\n    zoomWheelSensitivity: number;\n    touchSensitivity: number;\n}\n\nexport const DF_PAN_ZOOM_DEFAULT_OPTIONS: DfPanZoomOptions = {\n    panSize: 20000,\n    topPosition: null,\n    leftPosition: null,\n    minZoom: 0.25,\n    maxZoom: 3,\n    zoomStep: 0.25,\n    zoomAnimationDuration: 300,\n    zoomWheelSensitivity: 0.01,\n    touchSensitivity: 0.01,\n};\n\nexport const DF_PAN_ZOOM_OPTIONS = new InjectionToken(\n    '[DF_PAN_ZOOM_OPTIONS]: [PAN_ZOOM_OPTIONS]',\n    {\n        factory: () => DF_PAN_ZOOM_DEFAULT_OPTIONS,\n    },\n);\n\nexport function dfPanZoomOptionsProvider(\n    options: Partial<DfPanZoomOptions>,\n): FactoryProvider {\n    return {\n        provide: DF_PAN_ZOOM_OPTIONS,\n        useFactory: (): DfPanZoomOptions => ({\n            ...DF_PAN_ZOOM_DEFAULT_OPTIONS,\n            ...options,\n        }),\n    };\n}\n","import {Injectable} from '@angular/core';\n\nimport type {DfPanzoomModel} from './pan-zoom.interfaces';\n\n@Injectable()\nexport class PanZoomService {\n    public panzoomModel: DfPanzoomModel = {x: 0, y: 0, offsetX: 0, offsetY: 0, zoom: 1};\n    public panzoomDisabled = false;\n}\n","export * from './zoom.directive';\n","import {Directive, inject} from '@angular/core';\n\nimport {ZoomService} from './zoom.service';\n\n@Directive({\n    standalone: true,\n    selector: '[dfZoom]',\n    outputs: ['dfZoom'],\n    providers: [ZoomService],\n    host: {\n        '[style.touch-action]': '\"none\"',\n    },\n})\nexport class ZoomDirective {\n    protected readonly dfZoom = inject(ZoomService);\n}\n","import {ElementRef, inject, Injectable} from '@angular/core';\nimport {\n    filter,\n    fromEvent,\n    map,\n    merge,\n    Observable,\n    scan,\n    switchMap,\n    takeUntil,\n    throttleTime,\n} from 'rxjs';\n\nimport {dfDistanceBetweenTouches, dfPreventDefault} from '../../../helpers';\nimport {DF_PAN_ZOOM_OPTIONS} from '../pan-zoom.options';\nimport type {DfZoom} from './zoom.interfaces';\n\n@Injectable()\nexport class ZoomService extends Observable<DfZoom> {\n    constructor() {\n        const nativeElement: HTMLElement = inject(ElementRef).nativeElement;\n        const options = inject(DF_PAN_ZOOM_OPTIONS);\n        const wheelSensitivity = options?.zoomWheelSensitivity;\n        const touchSensitivity = options?.touchSensitivity;\n\n        super((subscriber) => {\n            merge(\n                fromEvent<TouchEvent>(nativeElement, 'touchstart', {passive: true}).pipe(\n                    filter(({touches}) => touches.length > 1),\n                    switchMap((startEvent) =>\n                        fromEvent<TouchEvent>(nativeElement, 'touchmove', {\n                            passive: true,\n                        }).pipe(\n                            dfPreventDefault(),\n                            throttleTime(16),\n                            scan(\n                                (prev, event) => {\n                                    const distance = dfDistanceBetweenTouches(event);\n\n                                    return {\n                                        event,\n                                        distance,\n                                        delta:\n                                            (distance - prev.distance) * touchSensitivity,\n                                    };\n                                },\n                                {\n                                    event: startEvent,\n                                    distance: dfDistanceBetweenTouches(startEvent),\n                                    delta: 0,\n                                },\n                            ),\n                            map(({event, delta}) => {\n                                const [touch1, touch2] = [\n                                    event.touches[0] ?? {clientX: 0, clientY: 0},\n                                    event.touches[1] ?? {clientX: 0, clientY: 0},\n                                ];\n                                const clientX = (touch1.clientX + touch2.clientX) / 2;\n                                const clientY = (touch1.clientY + touch2.clientY) / 2;\n\n                                return {clientX, clientY, delta, event};\n                            }),\n                            takeUntil(fromEvent(nativeElement, 'touchend')),\n                        ),\n                    ),\n                ),\n                fromEvent<WheelEvent>(nativeElement, 'wheel', {passive: false}).pipe(\n                    dfPreventDefault(),\n                    map((wheel) => ({\n                        clientX: wheel.clientX,\n                        clientY: wheel.clientY,\n                        delta: -wheel.deltaY * wheelSensitivity,\n                        event: wheel,\n                    })),\n                ),\n            ).subscribe(subscriber);\n        });\n    }\n}\n","import {CommonModule} from '@angular/common';\nimport type {OnInit, Signal} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    DestroyRef,\n    EventEmitter,\n    forwardRef,\n    inject,\n    Output,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport type {ControlValueAccessor} from '@angular/forms';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {filter} from 'rxjs';\n\nimport type {\n    DfDataConnection,\n    DfDataInitialNode,\n    DfDataModel,\n    DfDataNode,\n    DfEvent,\n} from '../../ng-draw-flow.interfaces';\nimport {INVALID_NODES} from '../../validators/invalid-nodes.token';\nimport {ConnectionComponent} from '../connections/connection/connection.component';\nimport {ConnectionsService} from '../connections/connections.service';\nimport {DraftConnectionComponent} from '../connections/draft-connection/draft-connection.component';\nimport {DraftConnectionService} from '../connections/draft-connection/draft-connection.service';\nimport {NodeComponent} from '../node/node.component';\nimport {DF_PAN_ZOOM_OPTIONS} from '../pan-zoom/pan-zoom.options';\n\n@Component({\n    standalone: true,\n    selector: 'df-scene',\n    imports: [CommonModule, ConnectionComponent, DraftConnectionComponent, NodeComponent],\n    templateUrl: './scene.component.html',\n    styleUrls: ['./scene.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => SceneComponent),\n            multi: true,\n        },\n    ],\n    host: {\n        'data-element': 'scene',\n        '[style.height.px]': 'this.panSize',\n        '[style.width.px]': 'this.panSize',\n    },\n})\nexport class SceneComponent implements ControlValueAccessor, OnInit {\n    private readonly cdr = inject(ChangeDetectorRef);\n    private readonly connectionsService = inject(ConnectionsService);\n    private readonly draftConnectionService = inject(DraftConnectionService);\n    private readonly destroyRef = inject(DestroyRef);\n\n    @Output()\n    protected readonly nodeSelected = new EventEmitter<DfDataNode>();\n\n    @Output()\n    protected readonly nodeMoved = new EventEmitter<DfEvent<DfDataNode>>();\n\n    @Output()\n    protected readonly nodeDeleted = new EventEmitter<DfEvent<DfDataNode>>();\n\n    @Output()\n    protected readonly connectionCreated = new EventEmitter<DfEvent<DfDataConnection>>();\n\n    @Output()\n    protected readonly connectionDeleted = new EventEmitter<DfEvent<DfDataConnection>>();\n\n    @Output()\n    protected readonly connectionSelected = new EventEmitter<DfDataConnection>();\n\n    protected isConnectionCreating$ = this.draftConnectionService.isConnectionCreating$;\n    protected readonly panSize = inject(DF_PAN_ZOOM_OPTIONS).panSize;\n    protected model!: DfDataModel;\n    protected $invalidNodes: Signal<string[]> = inject(INVALID_NODES);\n\n    public ngOnInit(): void {\n        this.initializeConnectionsSubscription();\n    }\n\n    protected onConnectionCreated(connection: DfDataConnection): void {\n        this.connectionsService.addConnections([connection]);\n        this.connectionCreated.emit({\n            target: connection,\n            model: this.model,\n        });\n    }\n\n    protected onConnectionDeleted(connection: DfDataConnection): void {\n        this.connectionDeleted.emit({\n            target: connection,\n            model: this.model,\n        });\n    }\n\n    protected onConnectorDeleted(connectorId: string): void {\n        this.connectionsService.removeConnectionsByConnectorId(connectorId);\n        this.cdr.detectChanges();\n    }\n\n    protected onNodeMoved(updated: DfDataNode): void {\n        this.model = {\n            ...this.model,\n            nodes: this.model.nodes.map((n) => (n.id === updated.id ? updated : n)),\n        };\n        this.nodeMoved.emit({\n            target: updated,\n            model: this.model,\n        });\n    }\n\n    protected onNodeDeleted(id: string): void {\n        const deleted: DfDataNode = this.model.nodes.find(\n            (n) => n.id === id,\n        ) as DfDataNode;\n\n        this.model = {\n            ...this.model,\n            nodes: this.model.nodes.filter((n) => n.id !== id),\n        };\n        this.nodeDeleted.emit({target: deleted, model: this.model});\n        this.emitConnectionDeletedByNodeId(id);\n        this.connectionsService.removeConnectionsByNodeId(id);\n    }\n\n    protected onNodeSelected(node: DfDataNode): void {\n        this.nodeSelected.emit(node);\n    }\n\n    protected trackByNodeId(_: number, node: DfDataInitialNode | DfDataNode): string {\n        return node.id;\n    }\n\n    protected trackByConnectionsFn(_index: number, connection: DfDataConnection): string {\n        return `${connection.source.nodeId}-${connection.source.connectorId}to${connection.target.nodeId}-${connection.target.connectorId}`;\n    }\n\n    protected originalOrder(): number {\n        return 0;\n    }\n\n    public writeValue(value: DfDataModel): void {\n        if (!value) {\n            return;\n        }\n\n        this.model = value;\n        this.connectionsService.addConnections(this.model.connections);\n\n        this.cdr.markForCheck();\n    }\n\n    public registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    private initializeConnectionsSubscription(): void {\n        this.connectionsService.connections$\n            .pipe(\n                filter(() => !!this.model),\n                takeUntilDestroyed(this.destroyRef),\n            )\n            .subscribe((connections: DfDataConnection[]) => {\n                this.model.connections = connections;\n                this.cdr.markForCheck();\n            });\n    }\n\n    private emitConnectionDeletedByNodeId(nodeId: string): void {\n        this.connectionsService.connections$.value\n            .filter(\n                (connection) =>\n                    connection.source.nodeId === nodeId ||\n                    connection.target.nodeId === nodeId,\n            )\n            ?.forEach((connection) =>\n                this.connectionDeleted.emit({target: connection, model: this.model}),\n            );\n    }\n\n    // @ts-ignore\n    private onChange: (value: DfDataModel) => void = (_: DfDataModel) => {};\n    // @ts-ignore\n    private onTouched: () => void = () => {};\n}\n","<ng-container *ngFor=\"let node of model?.nodes; trackBy: trackByNodeId\">\n    <df-node\n        [invalid]=\"$invalidNodes().includes(node.id)\"\n        [node]=\"node\"\n        (connectorDeleted)=\"onConnectorDeleted($event)\"\n        (nodeDeleted)=\"onNodeDeleted(node.id)\"\n        (nodeMoved)=\"onNodeMoved($event)\"\n        (nodeSelected)=\"onNodeSelected($event)\"\n    />\n</ng-container>\n\n<ng-container *ngFor=\"let connection of model?.connections; trackBy: trackByConnectionsFn\">\n    <df-connection\n        [connection]=\"connection\"\n        (connectionDeleted)=\"onConnectionDeleted(connection)\"\n        (connectionSelected)=\"connectionSelected.emit(connection)\"\n    />\n</ng-container>\n\n<df-draft-connection\n    *ngIf=\"isConnectionCreating$ | async\"\n    (connectionCreated)=\"onConnectionCreated($event)\"\n/>\n","import {Directive, ElementRef, inject} from '@angular/core';\nimport type {Observable} from 'rxjs';\n\nimport type {DfDragDrop} from './drag-drop.interface';\nimport {DragDropService} from './drag-drop.service';\n\n@Directive({\n    standalone: true,\n    selector: '[dfDragDrop]',\n    outputs: ['dfDragDrop'],\n})\nexport class DragDropDirective {\n    protected readonly elementRef: ElementRef<HTMLElement> = inject(ElementRef);\n    protected readonly dfDragDrop: Observable<DfDragDrop> = inject(\n        DragDropService,\n    ).streamFor(this.elementRef.nativeElement);\n}\n","export enum DfDragDropStage {\n    Start = 'start',\n    Move = 'move',\n    End = 'end',\n}\n","import type {DfDragDropStage} from './drag-drop.enum';\n\nexport interface DfDragDropDistance {\n    deltaX: number;\n    deltaY: number;\n}\n\nexport interface DfDragDrop {\n    sourceElement: HTMLElement;\n    distance: DfDragDropDistance;\n    stage: DfDragDropStage;\n}\n","import {Injectable} from '@angular/core';\nimport type {Observable} from 'rxjs';\nimport {\n    animationFrameScheduler,\n    filter,\n    fromEvent,\n    map,\n    merge,\n    repeat,\n    share,\n    shareReplay,\n    switchMap,\n    take,\n    takeUntil,\n    throttleTime,\n} from 'rxjs';\n\nimport {DfDragDropStage} from './drag-drop.enum';\nimport type {DfDragDrop} from './drag-drop.interface';\n\n/**\n * Centralised RxJS-based drag-and-drop stream factory.\n * Creates **one** `pointermove / pointerup` listener on `document`\n * and produces per-element drag streams filtered by `pointerId`.\n */\n@Injectable({providedIn: 'root'})\nexport class DragDropService {\n    /** Cache for element-scoped `pointerdown` observables (lazy–created). */\n    private readonly pointerDownMap = new WeakMap<\n        HTMLElement,\n        Observable<PointerEvent>\n    >();\n\n    /** Cache for ready-made drag-stream observables (so we never duplicate work). */\n    private readonly dragDropStreams = new WeakMap<HTMLElement, Observable<DfDragDrop>>();\n\n    /** Shared `pointermove` stream on the whole document (ref-counted). */\n    private readonly pointerMove$ = fromEvent<PointerEvent>(document, 'pointermove').pipe(\n        share(),\n    );\n\n    /** Shared `pointerup` stream on the whole document (ref-counted). */\n    private readonly pointerUp$ = fromEvent<PointerEvent>(document, 'pointerup').pipe(\n        share(),\n    );\n\n    /**\n     * Returns (and caches) a drag-and-drop observable for the provided element.\n     * The observable emits:\n     *   • `DfDragDropStage.Move` every animation frame while the pointer is down;\n     *   • a final `DfDragDropStage.End` when the pointer is released.\n     */\n    public streamFor(el: HTMLElement): Observable<DfDragDrop> {\n        const cached = this.dragDropStreams.get(el);\n\n        if (cached) {\n            return cached;\n        }\n\n        const pointerDown$ =\n            this.pointerDownMap.get(el) ??\n            fromEvent<PointerEvent>(el, 'pointerdown', {passive: true}).pipe(share());\n\n        this.pointerDownMap.set(el, pointerDown$);\n\n        const drag$: Observable<DfDragDrop> = pointerDown$.pipe(\n            switchMap((startEvent: PointerEvent): Observable<DfDragDrop> => {\n                const id = startEvent.pointerId;\n                let lastPointerEvent = startEvent;\n\n                const pointerUpStream$ = this.pointerUp$.pipe(\n                    filter((e) => e.pointerId === id),\n                    take(1),\n                    map(\n                        (): DfDragDrop => ({\n                            stage: DfDragDropStage.End,\n                            sourceElement: el,\n                            distance: {deltaX: 0, deltaY: 0},\n                        }),\n                    ),\n                    shareReplay({bufferSize: 1, refCount: false}),\n                );\n\n                const pointerMoveStream$ = this.pointerMove$.pipe(\n                    filter((e) => e.pointerId === id),\n                    throttleTime(16, animationFrameScheduler, {\n                        leading: true,\n                        trailing: true,\n                    }),\n                    map((e) => {\n                        const dx = e.clientX - lastPointerEvent.clientX;\n                        const dy = e.clientY - lastPointerEvent.clientY;\n\n                        lastPointerEvent = e;\n\n                        return <DfDragDrop>{\n                            stage: DfDragDropStage.Move,\n                            sourceElement: el,\n                            distance: {deltaX: dx, deltaY: dy},\n                        };\n                    }),\n                    takeUntil(pointerUpStream$),\n                );\n\n                return merge(pointerMoveStream$, pointerUpStream$);\n            }),\n            repeat(),\n            share(),\n        );\n\n        this.dragDropStreams.set(el, drag$);\n\n        return drag$;\n    }\n}\n","export * from './drag-drop.directive';\nexport * from './drag-drop.enum';\nexport * from './drag-drop.interface';\nexport * from './drag-drop.service';\n","import type {OnInit} from '@angular/core';\nimport {DestroyRef, Directive, inject} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {NgControl} from '@angular/forms';\nimport {combineLatest, distinctUntilChanged, map, startWith} from 'rxjs';\n\nimport {deepEqual} from '../../helpers';\nimport {collectInvalidNodeIds} from '../../helpers/collect-invalid-node-ids';\nimport {INVALID_NODES} from '../../validators/invalid-nodes.token';\n\n@Directive({standalone: true, selector: '[dfErrors]'})\nexport class ErrorsDirective implements OnInit {\n    private readonly destroyRef = inject(DestroyRef);\n    private readonly ngControl = inject(NgControl);\n    private readonly $invalidNodes = inject(INVALID_NODES);\n\n    public ngOnInit(): void {\n        if (!this.ngControl?.control) {\n            return;\n        }\n\n        const control = this.ngControl.control;\n\n        combineLatest([\n            control.statusChanges.pipe(startWith(control.status)),\n            control.valueChanges.pipe(startWith(control.value)),\n        ])\n            .pipe(\n                map(() => collectInvalidNodeIds(control.errors)),\n                distinctUntilChanged(deepEqual),\n                takeUntilDestroyed(this.destroyRef),\n            )\n            .subscribe((idsSet: Set<string>) => {\n                this.$invalidNodes.set(Array.from(idsSet));\n            });\n    }\n}\n","export * from './errors.directive';\n","export * from './drag-drop';\nexport * from './errors';\nexport * from './resize-observer';\nexport * from './selectable-element';\n","export * from './resize-observer.directive';\n","import {Directive, ElementRef, inject} from '@angular/core';\nimport {\n    RESIZE_OPTION_BOX,\n    RESIZE_OPTION_BOX_DEFAULT,\n    ResizeObserverService,\n} from '@ng-web-apis/resize-observer';\n\n/**\n * @deprecated: internal use only\n * TODO: Remove this directive after EOL Taiga UI 3\n */\n@Directive({\n    standalone: true,\n    selector: '[dfResizeObserver]',\n    inputs: ['dfResizeBox: box'],\n    outputs: ['dfResizeObserver'],\n    providers: [\n        ResizeObserverService,\n        {\n            provide: RESIZE_OPTION_BOX,\n            useFactory: (): ResizeObserverBoxOptions =>\n                inject(ElementRef).nativeElement.getAttribute('dfResizeBox') ||\n                RESIZE_OPTION_BOX_DEFAULT,\n        },\n    ],\n})\nexport class DfResizeObserver {\n    protected readonly dfResizeObserver = inject(ResizeObserverService);\n\n    public box: ResizeObserverBoxOptions = RESIZE_OPTION_BOX_DEFAULT;\n}\n","export * from './selectable-element.directive';\n","import type {OnDestroy, OnInit} from '@angular/core';\nimport {Directive, ElementRef, EventEmitter, inject, Output} from '@angular/core';\n\nimport {SelectionService} from '../../services/selection.service';\n\n@Directive({\n    standalone: true,\n    selector: '[dfSelectableElement]',\n})\nexport class SelectableElementDirective implements OnInit, OnDestroy {\n    private selected = false;\n    private readonly el = inject(ElementRef<HTMLElement>);\n    private readonly selectionService = inject(SelectionService);\n    private unregisterFn: (() => void) | null = null;\n\n    @Output('dfSelectableElement')\n    protected readonly selectionChanged = new EventEmitter<boolean>();\n\n    public ngOnInit(): void {\n        // Register the element in the service and save the unregistration function.\n        this.unregisterFn = this.selectionService.registerElement(\n            this.el.nativeElement,\n            (selected) => this.handleSelectionChange(selected),\n        );\n    }\n\n    public ngOnDestroy(): void {\n        // Unregister when the directive is destroyed\n        if (this.unregisterFn) {\n            this.unregisterFn();\n            this.unregisterFn = null;\n        }\n    }\n\n    private handleSelectionChange(selected: boolean): void {\n        if (this.selected !== selected) {\n            this.selected = selected;\n            this.selectionChanged.emit(selected);\n        }\n    }\n}\n","/**\n * Clamps a value between two inclusive limits\n *\n * @param value\n * @param min lower limit\n * @param max upper limit\n */\nexport function dfClamp(value: number, min: number, max: number): number {\n    return Math.min(max, Math.max(min, value));\n}\n","import type {ValidationErrors} from '@angular/forms';\n\nexport function collectInvalidNodeIds(errors: ValidationErrors | null): Set<string> {\n    if (!errors) {\n        return new Set();\n    }\n\n    const allIds: string[] = Object.values(errors)\n        .map((v) => {\n            if (Array.isArray(v) && v.every((x) => typeof x === 'string')) {\n                return v as string[];\n            }\n\n            if (v && typeof v === 'object' && Array.isArray(v.nodeIds)) {\n                return v.nodeIds as string[];\n            }\n\n            return [];\n        })\n        .reduce<string[]>((acc, arr) => acc.concat(arr), []);\n\n    return new Set(allIds);\n}\n","import type {DfConnectionPoint, DfDataConnector} from '../ng-draw-flow.interfaces';\n\nexport function isConnectorType(type: string): type is DfConnectionPoint {\n    return ['input', 'output'].includes(type);\n}\n\n/**\n * Creates a unique string identifier for a connector.\n *\n * The function generates a string that uniquely identifies a connector\n * based on its key properties: node identifier, connector type, and\n * connector identifier. The resulting identifier is used\n * as a key in various data structures (e.g., in connectionPointsMap)\n * for tracking and updating connector positions.\n *\n * @param connector - Connector object containing nodeId, connectorType, and connectorId\n * @returns String identifier in the format \"nodeId:value,connectorType:value,connectorId:value\"\n */\nexport function createConnectorHash(connector: DfDataConnector): string {\n    return `nodeId:${connector.nodeId},connectorType:${connector.connectorType},connectorId:${connector.connectorId}`;\n}\n","/**\n * Deep comparison of two values\n * @param a - first value to compare\n * @param b - second value to compare\n * @param visited - Map to track visited objects (for circular reference detection)\n * @returns boolean result of comparison\n */\nexport function deepEqual(a: any, b: any, visited = new Map()): boolean {\n    // 1. Strict equality & primitives\n    if (a === b) {\n        return true;\n    }\n\n    if (a == null || b == null) {\n        return false;\n    } // handles null & undefined\n\n    const typeA = typeof a;\n    const typeB = typeof b;\n\n    if (typeA !== typeB) {\n        return false;\n    }\n\n    // Special-case NaN\n    if (typeA !== 'object') {\n        return typeA === 'number' && Number.isNaN(a) && Number.isNaN(b);\n    }\n\n    // 2. Circular-reference handling\n    if (visited.has(a)) {\n        return visited.get(a) === b;\n    }\n\n    visited.set(a, b);\n\n    // 3. Arrays\n    const isArrayA = Array.isArray(a);\n    const isArrayB = Array.isArray(b);\n\n    if (isArrayA !== isArrayB) {\n        return false;\n    }\n\n    if (isArrayA) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i], visited)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    // 4. Special built-ins\n    if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime();\n    }\n\n    if (a instanceof RegExp && b instanceof RegExp) {\n        return a.toString() === b.toString();\n    }\n\n    // 5. Map\n    if (a instanceof Map && b instanceof Map) {\n        if (a.size !== b.size) {\n            return false;\n        }\n\n        for (const [key, value] of a.entries()) {\n            if (!b.has(key) || !deepEqual(value, b.get(key), visited)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    // 6. Set\n    if (a instanceof Set && b instanceof Set) {\n        if (a.size !== b.size) {\n            return false;\n        }\n\n        const arrA = Array.from(a);\n        const arrB = Array.from(b);\n\n        const primitivesOnly = (arr: unknown[]): boolean =>\n            arr.every((item) => typeof item !== 'object' || item === null);\n\n        // Primitive sets → sort with comparator for deterministic equality\n        if (primitivesOnly(arrA) && primitivesOnly(arrB)) {\n            const primitiveCompare = (x: unknown, y: unknown): number =>\n                typeof x === 'number' && typeof y === 'number'\n                    ? x - y\n                    : String(x).localeCompare(String(y));\n\n            arrA.sort(primitiveCompare);\n            arrB.sort(primitiveCompare);\n\n            for (let i = 0; i < arrA.length; i++) {\n                if (arrA[i] !== arrB[i]) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        // Non-primitive sets → element-wise deep comparison\n        return (\n            arrA.every((itemA) =>\n                arrB.some((itemB) => deepEqual(itemA, itemB, new Map(visited))),\n            ) &&\n            arrB.every((itemB) =>\n                arrA.some((itemA) => deepEqual(itemA, itemB, new Map(visited))),\n            )\n        );\n    }\n\n    // 7. Plain objects\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    return keysA.every(\n        (key) =>\n            Object.prototype.hasOwnProperty.call(b, key) &&\n            deepEqual(a[key], b[key], visited),\n    );\n}\n","import type {DfDelta} from '../ng-draw-flow.interfaces';\n\nexport function dfDistanceBetweenPoints(\n    firstEvent: PointerEvent,\n    secondEvent: PointerEvent,\n): DfDelta {\n    const deltaX = secondEvent.clientX - firstEvent.clientX;\n    const deltaY = secondEvent.clientY - firstEvent.clientY;\n\n    return {deltaX, deltaY};\n}\n","export function dfDistanceBetweenTouches({touches}: TouchEvent): number {\n    return Math.hypot(\n        (touches[0]?.clientX ?? 0) - (touches[1]?.clientX ?? 0),\n        (touches[0]?.clientY ?? 0) - (touches[1]?.clientY ?? 0),\n    );\n}\n","/**\n * Handler that always returns `false`.\n */\nexport const DF_FALSE_HANDLER = (): false => false;\n\n/**\n * Handler that always returns `true`.\n */\nexport const DF_TRUE_HANDLER = (): true => true;\n","export * from './clamp';\nexport * from './connector';\nexport * from './deep-equal';\nexport * from './distance-between-points';\nexport * from './distance-between-touches';\nexport * from './handlers';\nexport * from './initial-coordinates';\nexport * from './prevent-default';\nexport * from './px';\nexport * from './stop-propagation';\n","import type {DfPoint} from '../ng-draw-flow.interfaces';\n\nexport const INITIAL_COORDINATES: DfPoint = {x: 0, y: 0};\n","import type {MonoTypeOperatorFunction} from 'rxjs';\nimport {tap} from 'rxjs';\n\nexport function dfPreventDefault<T extends Event>(): MonoTypeOperatorFunction<T> {\n    return tap((event) => event.preventDefault());\n}\n","/**\n * Adds 'px' to the number and turns it into a string\n */\nexport function dfPx(value: number): string {\n    return `${value}px`;\n}\n","import type {MonoTypeOperatorFunction} from 'rxjs';\nimport {tap} from 'rxjs';\n\nexport function dfStopPropagation<T extends Event>(): MonoTypeOperatorFunction<T> {\n    return tap((event) => event.stopPropagation());\n}\n","import type {QueryList} from '@angular/core';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    EventEmitter,\n    inject,\n    Input,\n    Output,\n    ViewChildren,\n} from '@angular/core';\n\nimport {DfInputComponent, DfOutputComponent} from './components/connectors';\n\n/**\n * Base abstract class for DrawFlow nodes.\n * Provides common functionality and structure for all node types in the flow diagram.\n */\n@Directive({\n    standalone: true,\n    host: {\n        '[class.df-invalid]': 'this.invalid',\n        '[class.df-selected]': 'this.selected',\n    },\n})\nexport abstract class DrawFlowBaseNode {\n    private invalidState = false;\n    private readonly cdr = inject(ChangeDetectorRef);\n    /**\n     * Collection of input connectors for this node.\n     * Accessible from outside to monitor changes in the number of inputs.\n     */\n    @ViewChildren(DfInputComponent)\n    public inputs!: QueryList<DfInputComponent>;\n\n    /**\n     * Collection of output connectors for this node.\n     * Accessible from outside to monitor changes in the number of outputs.\n     */\n    @ViewChildren(DfOutputComponent)\n    public outputs!: QueryList<DfOutputComponent>;\n\n    /**\n     * Unique identifier for the node.\n     * Can be used to create connector names in format `${nodeId}-${uniqConnectorId}`.\n     * @default ''\n     */\n    @Input()\n    public nodeId = '';\n\n    /**\n     * Metadata for the node.\n     * Contains type information and other node-specific data.\n     */\n    @Input()\n    public model!: Record<string, any> & {type: string};\n\n    /**\n     * Indicates if this node is a starting node in the flow.\n     * Can be used to apply special styling or behavior for start nodes.\n     * @default false\n     */\n    @Input()\n    public startNode? = false;\n\n    /**\n     * Indicates if this node is an ending node in the flow.\n     * Can be used to hide output connectors or apply special styling.\n     * @default false\n     */\n    @Input()\n    public endNode? = false;\n\n    /**\n     * Selection state of the node.\n     * Changes when the node is clicked or deselected.\n     * Applied as 'df-selected' CSS class when true.\n     * @default false\n     */\n    @Input()\n    public selected = false;\n\n    /**\n     * Validation state of the node.\n     * Can be manually set to highlight the node with red color,\n     * for example when a form inside the node is invalid.\n     * Applied as 'df-invalid' CSS class when true.\n     * @default false\n     */\n    @Input()\n    public set invalid(value: boolean) {\n        this.invalidState = value;\n    }\n\n    public get invalid(): boolean {\n        return this.invalidState;\n    }\n\n    @Output()\n    public readonly connectorsUpdated = new EventEmitter<void>();\n\n    public markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n}\n","import {NgIf} from '@angular/common';\nimport type {OnInit} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    DestroyRef,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    inject,\n    Output,\n    signal,\n    ViewChild,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport type {ControlValueAccessor} from '@angular/forms';\nimport {FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\nimport {debounceTime, filter} from 'rxjs';\n\nimport {ConnectionsService} from './components/connections/connections.service';\nimport {DraftConnectionService} from './components/connections/draft-connection/draft-connection.service';\nimport {PanZoomComponent} from './components/pan-zoom/pan-zoom.component';\nimport {PanZoomService} from './components/pan-zoom/pan-zoom.service';\nimport {SceneComponent} from './components/scene/scene.component';\nimport {DfResizeObserver, ErrorsDirective} from './directives';\nimport type {\n    DfDataConnection,\n    DfDataModel,\n    DfDataNode,\n    DfEvent,\n} from './ng-draw-flow.interfaces';\nimport {DRAW_FLOW_ROOT_ELEMENT} from './ng-draw-flow.token';\nimport {CoordinatesService} from './services/coordinates.service';\nimport {SelectionService} from './services/selection.service';\n\n/**\n * Root component of **ng-draw-flow** – a lightweight graph editor\n * capable of rendering and manipulating hundreds of nodes and edges.\n *\n * * Acts as a form-field (`ControlValueAccessor`) whose value is the\n *   entire diagram (`DfDataModel`).\n * * Wraps the low-level services (`PanZoomService`, `ConnectionsService`\n *   …) and re-emits high-level events so host applications can stay\n *   framework-agnostic.\n * * Exposes a minimal public API (`zoomIn`, `zoomOut`, `resetPosition`,\n *   `removeConnection`) for programmatic control.\n */\n@Component({\n    standalone: true,\n    selector: 'ng-draw-flow',\n    imports: [\n        DfResizeObserver,\n        NgIf,\n        PanZoomComponent,\n        ReactiveFormsModule,\n        SceneComponent,\n    ],\n    templateUrl: './ng-draw-flow.component.html',\n    styleUrls: ['./ng-draw-flow.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        PanZoomService,\n        ConnectionsService,\n        CoordinatesService,\n        DraftConnectionService,\n        SelectionService,\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgDrawFlowComponent),\n            multi: true,\n        },\n        {\n            provide: DRAW_FLOW_ROOT_ELEMENT,\n            useFactory: ({nativeElement}: ElementRef<HTMLElement>) => nativeElement,\n            deps: [ElementRef],\n        },\n    ],\n    hostDirectives: [\n        ErrorsDirective,\n        {\n            directive: DfResizeObserver,\n            outputs: ['dfResizeObserver'],\n        },\n    ],\n    host: {\n        '(dfResizeObserver)': 'this.onResize($event)',\n    },\n})\nexport class NgDrawFlowComponent implements ControlValueAccessor, OnInit {\n    private readonly destroyRef = inject(DestroyRef);\n    private readonly connectionsService = inject(ConnectionsService);\n\n    @ViewChild(PanZoomComponent)\n    protected panzoom!: PanZoomComponent;\n\n    /** Emits the *current* zoom factor each time it changes. */\n    @Output()\n    protected readonly scale = new EventEmitter<number>();\n\n    /** Fired after a new edge is successfully created. */\n    @Output()\n    protected readonly connectionCreated = new EventEmitter<DfEvent<DfDataConnection>>();\n\n    /** Fired after an edge is removed—via UI or `removeConnection()`. */\n    @Output()\n    protected readonly connectionDeleted = new EventEmitter<DfEvent<DfDataConnection>>();\n\n    /** Fired when an edge receives focus in the scene. */\n    @Output()\n    protected readonly connectionSelected = new EventEmitter<DfDataConnection>();\n\n    /** Fired when a node receives focus in the scene. */\n    @Output()\n    protected readonly nodeSelected = new EventEmitter<DfDataNode>();\n\n    /** Fired whenever the user drags a node to a new position. */\n    @Output()\n    protected readonly nodeMoved = new EventEmitter<DfEvent<DfDataNode>>();\n\n    /** Fired when a node is removed from the graph. */\n    @Output()\n    protected readonly nodeDeleted = new EventEmitter<DfEvent<DfDataNode>>();\n\n    protected readonly form = new FormControl<DfDataModel>({\n        nodes: [],\n        connections: [],\n    });\n\n    protected readonly $rootReady = signal<boolean>(false);\n\n    public ngOnInit(): void {\n        this.watchFormChanges();\n    }\n\n    public writeValue(value: DfDataModel): void {\n        if (!value) {\n            return;\n        }\n\n        this.form.setValue(value, {emitEvent: false});\n    }\n\n    public registerOnChange(fn: (value: DfDataModel) => void): void {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Zooms one step *in* towards the centre of the scene. */\n    public zoomIn(): void {\n        this.panzoom.zoomIn();\n    }\n\n    /** Zooms one step *out* from the centre of the scene. */\n    public zoomOut(): void {\n        this.panzoom.zoomOut();\n    }\n\n    /** Resets both zoom factor and pan offset to their defaults. */\n    public resetPosition(): void {\n        this.panzoom.resetPanzoom();\n    }\n\n    /** Method that removes an existing edge. */\n    public removeConnection(connection: DfDataConnection): void {\n        this.connectionsService.removeConnection(connection);\n    }\n\n    protected onConnectionCreated(event: DfEvent<DfDataConnection>): void {\n        this.connectionCreated.emit(event);\n        this.form.setValue(event.model);\n    }\n\n    protected onConnectionDeleted(event: DfEvent<DfDataConnection>): void {\n        this.connectionDeleted.emit(event);\n        this.form.setValue(event.model);\n    }\n\n    protected onNodeDeleted(event: DfEvent<DfDataNode>): void {\n        this.nodeDeleted.emit(event);\n        this.form.setValue(event.model);\n    }\n\n    protected onNodeMoved(event: DfEvent<DfDataNode>): void {\n        this.nodeMoved.emit(event);\n        this.form.setValue(event.model);\n    }\n\n    protected onResize(event: any): void {\n        const {width, height} = event[0].contentRect;\n\n        this.$rootReady.set(width && height);\n    }\n\n    private watchFormChanges(): void {\n        this.form.valueChanges\n            .pipe(filter(Boolean), debounceTime(10), takeUntilDestroyed(this.destroyRef))\n            .subscribe((value: DfDataModel) => {\n                this.onChange(value);\n            });\n    }\n\n    private onChange: (value: DfDataModel) => void = (_: DfDataModel) => {};\n    // @ts-ignore\n    private onTouched: () => void = () => {};\n}\n","<df-pan-zoom (scale)=\"scale.emit($event)\">\n    <df-scene\n        *ngIf=\"$rootReady()\"\n        [formControl]=\"form\"\n        (connectionCreated)=\"onConnectionCreated($event)\"\n        (connectionDeleted)=\"onConnectionDeleted($event)\"\n        (connectionSelected)=\"connectionSelected.emit($event)\"\n        (nodeDeleted)=\"onNodeDeleted($event)\"\n        (nodeMoved)=\"onNodeMoved($event)\"\n        (nodeSelected)=\"nodeSelected.emit($event)\"\n    />\n</df-pan-zoom>\n","import type {FactoryProvider} from '@angular/core';\nimport {InjectionToken} from '@angular/core';\n\nimport type {DfOptions} from './ng-draw-flow.interfaces';\nimport {DfConnectionType} from './ng-draw-flow.interfaces';\n\nexport const DRAW_FLOW_DEFAULT_OPTIONS: DfOptions = {\n    connection: {\n        arrowhead: 'none',\n        type: DfConnectionType.Bezier,\n        curvature: 50,\n    },\n    nodes: {},\n    options: {\n        nodeDragThreshold: 1,\n    },\n};\n\nexport const DRAW_FLOW_OPTIONS = new InjectionToken('[DRAW_FLOW_OPTIONS]: Options', {\n    factory: () => DRAW_FLOW_DEFAULT_OPTIONS,\n});\n\nexport function provideNgDrawFlowConfigs(options: Partial<DfOptions>): FactoryProvider {\n    return {\n        provide: DRAW_FLOW_OPTIONS,\n        useFactory: (): DfOptions => ({\n            ...DRAW_FLOW_DEFAULT_OPTIONS,\n            ...options,\n        }),\n    };\n}\n","import type {Type} from '@angular/core';\n\nimport type {DrawFlowBaseNode} from './ng-draw-flow-node.base';\n\nexport enum DfConnectionType {\n    Bezier = 'bezier',\n    SmoothStep = 'smoothStep',\n    Step = 'step',\n}\n\nexport enum DfConnectorPosition {\n    Top = 'top',\n    Right = 'right',\n    Bottom = 'bottom',\n    Left = 'left',\n}\n\nexport interface DfConnectionOptions {\n    type: DfConnectionType;\n    arrowhead: 'none' | 'triangle';\n    curvature: number;\n}\n\nexport interface DfOptions {\n    connection: DfConnectionOptions;\n    nodes: DfComponents;\n    options: {\n        nodeDragThreshold: number;\n    };\n}\n\nexport type DfComponents = Record<string, Type<DrawFlowBaseNode>>;\n\nexport interface DfPoint {\n    x: number;\n    y: number;\n}\n\nexport interface DfDelta {\n    deltaX: number;\n    deltaY: number;\n}\n\nexport interface DfDataModel {\n    nodes: Array<DfDataInitialNode | DfDataNode>;\n    connections: DfDataConnection[];\n}\n\nexport interface DfDataInitialNode {\n    id: string;\n    data: {\n        type: string;\n        [key: string]: any;\n    };\n    startNode?: boolean;\n    endNode?: boolean;\n}\n\nexport interface DfDataNode extends DfDataInitialNode {\n    position: DfPoint;\n}\n\nexport interface DfDataConnection {\n    source: DfDataConnector;\n    target: DfDataConnector;\n}\n\nexport type DfId = string;\n\nexport interface DfDataConnector {\n    readonly nodeId: DfId;\n    readonly connectorType: DfConnectionPoint;\n    readonly connectorId: DfId;\n    readonly position?: string;\n}\n\nexport interface DfDataConnectorConfig {\n    readonly nodeId: DfId;\n    readonly connectorId: DfId;\n    readonly single: boolean;\n}\n\nexport interface DfConnectorData {\n    point: DfPoint;\n    position: DfConnectorPosition | null;\n}\n\nexport enum DfConnectionPoint {\n    Input = 'input',\n    Output = 'output',\n}\n\nexport interface DfEvent<T> {\n    readonly target: T;\n    readonly model: DfDataModel;\n}\n\nexport interface DfPathCoords {\n    startX: number;\n    startY: number;\n    endX: number;\n    endY: number;\n    radius: number;\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const DRAW_FLOW_ROOT_ELEMENT = new InjectionToken<HTMLElement>(\n    'DRAW_FLOW_ROOT_ELEMENT',\n);\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, ReplaySubject} from 'rxjs';\n\nimport type {\n    DfConnectorData,\n    DfConnectorPosition,\n    DfPoint,\n} from '../ng-draw-flow.interfaces';\n\n@Injectable()\nexport class CoordinatesService {\n    private connectionPointsMap: Record<string, BehaviorSubject<DfConnectorData>> = {};\n\n    public connectionPointsMapChange$: ReplaySubject<void> = new ReplaySubject<void>(1);\n\n    public getConnectionPoint(\n        connectorHash: string,\n    ): BehaviorSubject<DfConnectorData> | BehaviorSubject<null> {\n        return this.connectionPointsMap[connectorHash] || new BehaviorSubject(null);\n    }\n\n    public addConnectionPoint(\n        connectorHash: string,\n        point: DfPoint,\n        position: DfConnectorPosition,\n    ): void {\n        if (this.connectionPointsMap[connectorHash]) {\n            this.connectionPointsMap[connectorHash]!.next({point, position});\n        } else {\n            this.connectionPointsMap[connectorHash] =\n                new BehaviorSubject<DfConnectorData>({\n                    point,\n                    position,\n                });\n        }\n\n        this.connectionPointsMapChange$.next();\n    }\n}\n","import type {OnDestroy} from '@angular/core';\nimport {inject, Injectable, NgZone} from '@angular/core';\n\ninterface SelectableItem {\n    element: HTMLElement;\n    callback: (selected: boolean) => void;\n}\n\n@Injectable()\nexport class SelectionService implements OnDestroy {\n    private readonly ngZone = inject(NgZone);\n    private readonly selectedElements = new Set<HTMLElement>();\n    private readonly registeredElements = new Map<HTMLElement, SelectableItem>();\n\n    private isDragging = false;\n    private clickedOnScene = false;\n    private startX: number | null = null;\n    private startY: number | null = null;\n    private readonly dragThreshold = 5;\n    private currentTarget: HTMLElement | null = null;\n    private readonly boundMouseDown = this.onMouseDown.bind(this);\n    private readonly boundMouseMove = this.onMouseMove.bind(this);\n    private readonly boundMouseUp = this.onMouseUp.bind(this);\n\n    constructor() {\n        // Use NgZone.runOutsideAngular to prevent change detection\n        // from running on every mouse event\n        this.ngZone.runOutsideAngular(() => {\n            document.addEventListener('mousedown', this.boundMouseDown);\n            document.addEventListener('mousemove', this.boundMouseMove);\n            document.addEventListener('mouseup', this.boundMouseUp);\n        });\n    }\n\n    public ngOnDestroy(): void {\n        document.removeEventListener('mousedown', this.boundMouseDown);\n        document.removeEventListener('mousemove', this.boundMouseMove);\n        document.removeEventListener('mouseup', this.boundMouseUp);\n\n        this.registeredElements.clear();\n        this.selectedElements.clear();\n    }\n\n    /**\n     * Registers an element for selection tracking\n     * @param element HTML element to track\n     * @param callback Callback function triggered when selection changes\n     * @returns Function to unregister\n     */\n    public registerElement(\n        element: HTMLElement,\n        callback: (selected: boolean) => void,\n    ): () => void {\n        this.registeredElements.set(element, {element, callback});\n\n        // Return a function to unregister\n        return () => {\n            this.unregisterElement(element);\n        };\n    }\n\n    /**\n     * Unregisters an element\n     * @param element HTML element to unregister\n     */\n    public unregisterElement(element: HTMLElement): void {\n        if (this.selectedElements.has(element)) {\n            this.selectedElements.delete(element);\n        }\n\n        this.registeredElements.delete(element);\n    }\n\n    /**\n     * Selects an element\n     * @param element HTML element to select\n     * @param exclusive If true, deselects all other elements\n     */\n    public selectElement(element: HTMLElement, exclusive = true): void {\n        if (exclusive) {\n            this.clearSelection(element);\n        }\n\n        if (!this.selectedElements.has(element)) {\n            this.selectedElements.add(element);\n            const item = this.registeredElements.get(element);\n\n            if (item) {\n                // Run callback inside Angular zone for change detection\n                this.ngZone.run(() => {\n                    item.callback(true);\n                });\n            }\n        }\n    }\n\n    /**\n     * Deselects an element\n     * @param element HTML element to deselect\n     */\n    public deselectElement(element: HTMLElement): void {\n        if (this.selectedElements.has(element)) {\n            this.selectedElements.delete(element);\n            const item = this.registeredElements.get(element);\n\n            if (item) {\n                this.ngZone.run(() => {\n                    item.callback(false);\n                });\n            }\n        }\n    }\n\n    /**\n     * Clears selection of all elements except the excluded one\n     * @param exceptElement Element to exclude from clearing\n     */\n    public clearSelection(exceptElement?: HTMLElement): void {\n        this.selectedElements.forEach((element) => {\n            if (element !== exceptElement) {\n                this.deselectElement(element);\n            }\n        });\n    }\n\n    /**\n     * Checks if an element is selected\n     * @param element HTML element to check\n     * @returns true if the element is selected\n     */\n    public isSelected(element: HTMLElement): boolean {\n        return this.selectedElements.has(element);\n    }\n\n    /**\n     * Gets all selected elements\n     * @returns Array of selected HTML elements\n     */\n    public getSelectedElements(): HTMLElement[] {\n        return Array.from(this.selectedElements);\n    }\n\n    /**\n     * Mouse down event handler\n     */\n    private onMouseDown(event: MouseEvent): void {\n        this.startX = event.clientX;\n        this.startY = event.clientY;\n        this.isDragging = false;\n        this.currentTarget = event.target as HTMLElement;\n\n        // Find the nearest registered element\n        const targetElement = this.findRegisteredParent(this.currentTarget);\n\n        // If clicked on a registered element\n        if (targetElement) {\n            // If Ctrl or Shift key is pressed, add to selection\n            const multiSelect = event.ctrlKey || event.shiftKey;\n\n            this.selectElement(targetElement, !multiSelect);\n        }\n        // If clicked on the scene and it's not the start of dragging\n        else if (this.currentTarget.dataset.element === 'scene') {\n            // Remember that the click was on the scene\n            this.clickedOnScene = true;\n        }\n    }\n\n    /**\n     * Mouse move event handler\n     */\n    private onMouseMove(event: MouseEvent): void {\n        if (!this.startX || !this.startY) {\n            return;\n        }\n\n        const dx = event.clientX - this.startX;\n        const dy = event.clientY - this.startY;\n\n        // Check if the drag threshold has been exceeded\n        if (!this.isDragging && Math.sqrt(dx * dx + dy * dy) > this.dragThreshold) {\n            this.isDragging = true;\n        }\n    }\n\n    /**\n     * Mouse up event handler\n     */\n    private onMouseUp(event: MouseEvent): void {\n        const target = event.target as HTMLElement;\n\n        // If it was dragging and releasing on the scene,\n        // just reset the state without changing the selection\n        if (this.isDragging) {\n            this.reset();\n\n            return;\n        }\n\n        // If it was a click (not dragging)\n        const targetElement = this.findRegisteredParent(target);\n\n        // If clicked on a registered element\n        if (targetElement) {\n            // If Ctrl or Shift key is pressed, toggle selection\n            if (event.ctrlKey || event.shiftKey) {\n                if (this.isSelected(targetElement)) {\n                    this.deselectElement(targetElement);\n                } else {\n                    this.selectElement(targetElement, false);\n                }\n            }\n        }\n        // If clicked on the scene (not while dragging)\n        else if (this.clickedOnScene && !this.isDragging) {\n            // Clear selection only when clicking on the scene, not when dragging\n            this.clearSelection();\n        }\n\n        this.reset();\n    }\n\n    /**\n     * Finds the closest parent element that is registered in the service\n     */\n    private findRegisteredParent(element: HTMLElement | null): HTMLElement | null {\n        let current = element;\n\n        while (current) {\n            if (this.registeredElements.has(current)) {\n                return current;\n            }\n\n            current = current.parentElement;\n        }\n\n        return null;\n    }\n\n    /**\n     * Resets the drag state\n     */\n    private reset(): void {\n        this.startX = null;\n        this.startY = null;\n        this.isDragging = false;\n        this.currentTarget = null;\n        this.clickedOnScene = false; // Reset the scene click flag\n    }\n}\n","import type {AbstractControl, ValidationErrors, ValidatorFn} from '@angular/forms';\n\nimport type {DfDataModel} from '../../ng-draw-flow.interfaces';\nimport {buildAdjacencyMap, findCycleNodes, generateConnectionsHash} from './helpers';\n\n/**\n * Validator for checking cycles in a graph\n *\n * ### Validation error shape\n * ```ts\n * {\n *   hasCycle: true,\n *   cycleNodes: DfId[] // array of nodeIds that form a cycle\n * }\n * ```\n * @returns ValidatorFn that returns an error if a cycle is detected in the graph\n */\nexport function dfCycleDetectionValidator(): ValidatorFn {\n    // Cache for storing previous state\n    let previousConnectionsHash: string | null = null;\n    let previousResult: ValidationErrors | null = null;\n\n    return (control: AbstractControl): ValidationErrors | null => {\n        const model: DfDataModel = control.value;\n\n        if (!model?.connections || model.connections.length === 0) {\n            previousConnectionsHash = null;\n            previousResult = null;\n\n            return null; // No connections - no cycles\n        }\n\n        // Create a hash of current connections for comparison\n        const currentConnectionsHash = generateConnectionsHash(model.connections);\n\n        // If the hash hasn't changed, return the previous result\n        if (\n            previousConnectionsHash === currentConnectionsHash &&\n            previousResult !== undefined\n        ) {\n            return previousResult;\n        }\n\n        // Save the new hash\n        previousConnectionsHash = currentConnectionsHash;\n\n        // Build the adjacency map\n        const {adjacencyMap, nodeIds} = buildAdjacencyMap(model.connections);\n\n        // Check for cycles and get the cycle nodes if any\n        const cycleNodes = findCycleNodes(adjacencyMap, nodeIds);\n\n        if (cycleNodes.length > 0) {\n            previousResult = {\n                hasCycle: true,\n                cycleNodes,\n            };\n\n            return previousResult;\n        }\n\n        previousResult = null;\n\n        return null; // No cycles detected\n    };\n}\n","import type {DfDataConnection, DfId} from '../../ng-draw-flow.interfaces';\n\n/**\n * Builds an adjacency map from a list of connections\n * @param connections List of graph connections\n * @returns Object with adjacency map and array of unique node IDs\n */\nexport function buildAdjacencyMap(connections: DfDataConnection[]): {\n    adjacencyMap: Map<DfId, Set<DfId>>;\n    nodeIds: DfId[];\n} {\n    const adjacencyMap = new Map<DfId, Set<DfId>>();\n    const nodeIdsSet = new Set<DfId>();\n\n    connections.forEach((connection) => {\n        const sourceNodeId = connection.source.nodeId;\n        const targetNodeId = connection.target.nodeId;\n\n        nodeIdsSet.add(sourceNodeId);\n        nodeIdsSet.add(targetNodeId);\n\n        if (!adjacencyMap.has(sourceNodeId)) {\n            adjacencyMap.set(sourceNodeId, new Set<DfId>());\n        }\n\n        adjacencyMap.get(sourceNodeId)!.add(targetNodeId);\n    });\n\n    return {\n        adjacencyMap,\n        nodeIds: Array.from(nodeIdsSet),\n    };\n}\n\n/**\n * Iterative function to find cycle nodes\n * @param adjacencyMap Adjacency map\n * @param nodeIds Array of node IDs\n * @returns Array of node IDs that form a cycle, or empty array if no cycle is found\n */\nexport function findCycleNodes(\n    adjacencyMap: Map<DfId, Set<DfId>>,\n    nodeIds: DfId[],\n): DfId[] {\n    // Node states: 0 - not visited, 1 - in current path, 2 - fully processed\n    const nodeStates = new Map<DfId, number>();\n\n    // Initialize all nodes as not visited\n    nodeIds.forEach((nodeId) => {\n        nodeStates.set(nodeId, 0);\n    });\n\n    // Check each node as a possible starting point\n    for (const nodeId of nodeIds) {\n        if (nodeStates.get(nodeId) !== 0) {\n            continue;\n        }\n\n        const cycleResult = checkNodeForCycle(nodeId, adjacencyMap, nodeStates);\n\n        if (cycleResult.length > 0) {\n            return cycleResult;\n        }\n    }\n\n    return []; // No cycle found\n}\n\n/**\n * Helper function to check a specific node for cycles\n * @param startNodeId Starting node ID\n * @param adjacencyMap Adjacency map\n * @param nodeStates Map of node states\n * @returns Array of node IDs that form a cycle, or empty array if no cycle is found\n */\nfunction checkNodeForCycle(\n    startNodeId: DfId,\n    adjacencyMap: Map<DfId, Set<DfId>>,\n    nodeStates: Map<DfId, number>,\n): DfId[] {\n    // Use a stack for iterative DFS and a path array to track the current path\n    const stack: Array<{nodeId: DfId; processed: boolean}> = [\n        {nodeId: startNodeId, processed: false},\n    ];\n    const path: DfId[] = [];\n\n    while (stack.length > 0) {\n        const {nodeId, processed} = stack[stack.length - 1]!;\n\n        if (processed) {\n            // Node is fully processed\n            nodeStates.set(nodeId, 2);\n            stack.pop();\n\n            // Remove the node from the current path when backtracking\n            if (path.length > 0 && path[path.length - 1] === nodeId) {\n                path.pop();\n            }\n\n            continue;\n        }\n\n        // Mark the node as being in the current path\n        nodeStates.set(nodeId, 1);\n        stack[stack.length - 1]!.processed = true;\n        path.push(nodeId);\n\n        // Process neighbors\n        const cycleFound = processNeighbors({\n            nodeId,\n            adjacencyMap,\n            nodeStates,\n            path,\n            stack,\n        });\n\n        if (cycleFound.length > 0) {\n            return cycleFound;\n        }\n    }\n\n    return []; // No cycle found from this starting node\n}\n\ninterface ProcessNeighborsContext {\n    /** Current node ID */\n    nodeId: DfId;\n    /** Map of adjacency relationships between nodes */\n    adjacencyMap: Map<DfId, Set<DfId>>;\n    /** Map of node states (0 = unvisited, 1 = visiting, 2 = visited) */\n    nodeStates: Map<DfId, number>;\n    /** Current path */\n    path: DfId[];\n    /** DFS stack */\n    stack: Array<{nodeId: DfId; processed: boolean}>;\n}\n\n/**\n * Processes all neighbors of a given node during DFS.\n *\n * @param context Object containing traversal context, adjacency map and state tracking.\n * @returns Array of node IDs forming a cycle, or empty array if no cycle is found.\n */\nfunction processNeighbors({\n    nodeId,\n    adjacencyMap,\n    nodeStates,\n    path,\n    stack,\n}: ProcessNeighborsContext): DfId[] {\n    const neighbors = adjacencyMap.get(nodeId) || new Set<DfId>();\n\n    for (const neighbor of neighbors) {\n        const neighborState = nodeStates.get(neighbor);\n\n        if (neighborState === 1) {\n            // Cycle found - extract the cycle nodes from the path\n            const cycleStartIndex = path.indexOf(neighbor);\n\n            return path.slice(cycleStartIndex).concat([neighbor]);\n        }\n\n        if (neighborState === 0) {\n            // Add unvisited node to the stack\n            stack.push({nodeId: neighbor, processed: false});\n        }\n    }\n\n    return []; // No cycle found among neighbors\n}\n\n/**\n * Generates a hash for an array of connections\n * @param connections Array of connections\n * @returns String hash representing the current state of connections\n */\nexport function generateConnectionsHash(connections: DfDataConnection[]): string {\n    let hash = 0;\n\n    for (const conn of connections) {\n        // Create a string representation of the connection\n        const connStr = `${conn.source.nodeId}:${conn.source.connectorId}->${conn.target.nodeId}:${conn.target.connectorId}`;\n\n        // Calculate the string hash (simple hash function)\n        for (let i = 0; i < connStr.length; i++) {\n            const char = connStr.charCodeAt(i);\n\n            hash = (hash << 5) - hash + char;\n            hash &= hash; // Convert to 32-bit integer\n        }\n    }\n\n    return hash.toString(36); // Convert to base-36 string for compactness\n}\n","export * from './cycle-detection/cycle-detection.validator';\nexport * from './isolated-nodes/isolated-nodes.validator';\n","import type {WritableSignal} from '@angular/core';\nimport {InjectionToken, signal} from '@angular/core';\n\nexport const INVALID_NODES = new InjectionToken<WritableSignal<string[]>>(\n    '[INVALID_NODES]: Invalid nodes signal',\n    {factory: () => signal([])},\n);\n","import type {AbstractControl, ValidationErrors, ValidatorFn} from '@angular/forms';\n\nimport type {\n    DfDataConnection,\n    DfDataInitialNode,\n    DfDataModel,\n    DfDataNode,\n    DfId,\n} from '../../ng-draw-flow.interfaces';\n\n/**\n * Validator that checks for *isolated* (disconnected) nodes — nodes that do **not** appear in any connection.\n *\n * ### Validation error shape\n * ```ts\n * {\n *   hasIsolatedNodes: boolean;\n *   isolatedNodes: DfId[] // array of nodeIds without connections\n * }\n * ```\n * When there are **no** isolated nodes, it returns `null` so the control is valid.\n */\nexport function dfIsolatedNodesValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n        const model: DfDataModel = control.value;\n\n        if (!model?.nodes?.length) {\n            return null; // nothing to validate\n        }\n\n        // Collect all node ids that participate in at least one connection\n        const connectedIds = new Set<DfId>();\n\n        if (model.connections?.length) {\n            model.connections.forEach((connection: DfDataConnection) => {\n                connectedIds.add(connection.source.nodeId);\n                connectedIds.add(connection.target.nodeId);\n            });\n        }\n\n        // Every node absent in connectedIds is isolated\n        const isolatedNodes: DfId[] = [];\n\n        model.nodes.forEach((node: DfDataInitialNode | DfDataNode) => {\n            if (!connectedIds.has(node.id)) {\n                isolatedNodes.push(node.id);\n            }\n        });\n\n        if (isolatedNodes.length) {\n            return {\n                hasIsolatedNodes: true,\n                isolatedNodes,\n            };\n        }\n\n        // All nodes have at least one connection\n        return null;\n    };\n}\n"],"names":["HttpClient","HttpClientModule","SecurityContext","BrowserModule","BrowserAnimationsModule","TuiAlert","TuiDialog","TuiLink","TuiRoot","NG_EVENT_PLUGINS","MarkdownModule","AppComponent","APP_PROVIDERS","AppRoutingModule","AppBrowserModule","bootstrap","imports","withServerTransition","appId","forRoot","loader","sanitize","NONE","i3","TuiDocAPI","TuiDocAPIItem","TuiDocCopy","TuiDocTab","TuiDocDemo","TuiDocCode","TuiDocExample","TuiDocDocumentation","TuiDocPage","TuiDocNavigation","TuiDocMain","declarations","i1","i2","TuiDocAPINumberItem","TuiDocExampleGetTabsPipe","TuiDocTypeReferencePipe","TuiDocDocumentationPropertyConnector","TuiDocPageTabConnector","i4","TuiDocText","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","isPlatformBrowser","LocationStrategy","PathLocationStrategy","inject","PLATFORM_ID","provideNgDrawFlowConfigs","TUI_DOC_DEFAULT_TABS","TUI_DOC_LOGO","TUI_DOC_PAGES","TUI_DOC_TITLE","HIGHLIGHT_OPTIONS","DEMO_PAGES","LOGO_CONTENT","FormNodeComponent","InfoNodeComponent","InputNodeComponent","MiniNodeComponent","OutputNodeComponent","SimpleNodeComponent","provide","useClass","useValue","useFactory","isBrowser","coreLibraryLoader","_ref","_asyncToGenerator","apply","arguments","lineNumbersLoader","_ref2","Promise","resolve","languages","typescript","_ref3","less","_ref4","xml","_ref5","nodes","infoNode","simpleNode","inputNode","outputNode","miniNode","formNode","RouterModule","DemoPath","appRoutes","path","Quickstart","loadComponent","data","title","TermsAndDefinitions","ConfigurationAndPublicApi","PanZoom","Nodes","Connectors","_ref6","Validation","_ref7","SimpleExample","_ref8","Overview","_ref9","Editor","_ref0","StressTest","_ref1","redirectTo","initialNavigation","scrollPositionRestoration","exports","Connections","CustomNodes","GITHUB_API","DestroyRef","signal","takeUntilDestroyed","RouterLink","TuiButton","TuiIcon","PolymorpheusComponent","LogoComponent","constructor","stars","destroyRef","http","ngOnInit","get","pipe","subscribe","response","set","Intl","NumberFormat","notation","format","standalone","features","ɵɵStandaloneFeature","consts","LogoComponent_Template","ɵɵtext","ɵɵadvance","ɵɵstyleProp","ɵɵtextInterpolate1","TuiBadgedContentDirective","TuiBadgedContentComponent","styles","changeDetection","CommonModule","FormControl","FormGroup","ReactiveFormsModule","Validators","DfInputComponent","DfOutputComponent","DrawFlowBaseNode","TuiInputModule","TuiTextfieldControllerModule","ɵɵproperty","ɵɵpureFunction2","_c0","ctx_r0","nodeId","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r4","getConnectorId","fieldName_r2","ɵɵtemplate","FormNodeComponent_div_4_ng_container_3_Template","ctx_r1","form","field1","connectorId","fieldValue","required","field2","invalid","value","formInvalid","Object","values","controls","some","fieldGroup","touched","fieldNames","keys","fieldName","group","ngAfterViewInit","valueChanges","model","add","index","length","newFieldKey","newField","addControl","t","hostBindings","FormNodeComponent_HostBindings","FormNodeComponent_keydown_backspace_stop_HostBindingHandler","FormNodeComponent_df_input_0_Template","FormNodeComponent_div_4_Template","ɵɵlistener","FormNodeComponent_Template_button_click_5_listener","startNode","text","NgForOf","NgIf","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","FormGroupName","TuiInputComponent","TuiInputDirective","TuiTextfieldSizeDirective","ɵɵInheritDefinitionFeature","InfoNodeComponent_Template","DfConnectorPosition","connectorPosition","InputNodeComponent_Template","Left","Top","ɵɵtextInterpolate","Right","Bottom","ɵɵpureFunction1","_c1","MiniNodeComponent_Template","MiniNodeComponent_df_input_0_Template","MiniNodeComponent_df_output_3_Template","endNode","OutputNodeComponent_Template","SimpleNodeComponent_Template","SimpleNodeComponent_df_input_0_Template","SimpleNodeComponent_df_output_3_Template","document","addEventListener","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","then","ref","windowRef","window","ngRef","destroy","catch","err","console","error","section","route","AsyncPipe","EventEmitter","animationFrameScheduler","asyncScheduler","combineLatest","concat","delay","distinctUntilChanged","map","observeOn","of","shareReplay","skip","startWith","switchMap","SelectableElementDirective","createConnectorHash","deepEqual","DRAW_FLOW_OPTIONS","DfConnectionType","CoordinatesService","ConnectionsService","calculateCurvature","calculateDistance","createBezierPath","createSmoothstepPath","ConnectionComponent","connectionsService","coordinatesService","options","selected","connectionDeleted","connectionSelected","path$","getConnectionPoint","connection","source","target","sourcePoint","targetPoint","warn","start","end","type","SmoothStep","curvature","Bezier","distance","point","maxCurvature","bufferSize","refCount","optimization$","handleKeyboardEvent","event","preventDefault","removeConnection","emit","onSelectedChanged","connector","ConnectionComponent_HostBindings","$event","ɵɵresolveDocument","ConnectionComponent_keydown_backspace_HostBindingHandler","ɵɵnamespaceSVG","ConnectionComponent_Template__svg_path_dfSelectableElement_2_listener","ɵɵclassProp","ɵɵpipeBind1","ɵɵattribute","BehaviorSubject","connections$","usedConnectors$","addConnections","connections","newConnections","filter","newConnection","existingConnection","areConnectionsEqual","updatedUsedConnectors","forEach","includes","push","next","connectionToRemove","filteredConnections","usedConnectors","removeConnectionsByNodeId","id","connectionsToKeep","removeConnectionsByConnectorId","connectorIdToRemove","connection1","connection2","connectorType","factory","ɵfac","computed","DraftConnectionService","DraftConnectionComponent","draftConnectionService","connectionCreated","connectionCreated$","viewQuery","DraftConnectionComponent_Query","DOCUMENT","fromEvent","pairwise","repeat","Subject","takeUntil","tap","dfDistanceBetweenPoints","INITIAL_COORDINATES","DfConnectionPoint","PanZoomService","getConnectorDataset","panZoomService","destroy$","position","isConnectionCreating$","connection$","connectionSubscription","ngOnDestroy","complete","connectorData","onDragStart","previousEvent","currentEvent","onDragMove","onDragEnd","sourceConnector","sourceId","getTargetPosition","deltaX","deltaY","zoom","panzoomModel","x","y","startPosition","targetConnector","Input","resetConnectors","maxDistanceForCurvature","Math","min","sqrt","startConnector","endConnector","startX","startY","startConnectorPosition","endX","endY","endConnectorPosition","startConnectorPointX","startConnectorPointY","endConnectorPointX","endConnectorPointY","MIN_LINE_SIZE","createBottomBottomCurve","createBottomLeftCurve","createBottomRightCurve","createBottomTopCurve","createLeftBottomCurve","createLeftLeftCurve","createLeftRightCurve","createLeftTopCurve","createRightBottomCurve","createRightLeftCurve","createRightRightCurve","createRightTopCurve","createTopBottomCurve","createTopLeftCurve","createTopRightCurve","createTopTopCurve","radius","adjustRadius","createEndPoint","createHorizontalLineWithCurve","createStartPoint","createVerticalLineToLeftWithCurve","createVerticalLineToRightWithCurve","isEndPointOnRightSide","isEndPointOnUpSide","horizontalDifference","join","isEndPointOnLeftSide","halfY","secondCurvatureRadius","abs","verticalDifference","secondRadius","halfX","firstLineEndX","secondCurveRadius","secondLineEndX","horizontalLineToEndX","thirdCurve","difference","createLine","lineToCurvature","isConnectorType","element","dataset","isValidConnector","ElementRef","BaseConnector","isDisabled","nativeElement","sub","usedConnectorIds","setupDisabledState","bindNodeId","bindConnectorId","bindPosition","connected","setAttribute","removeAttribute","single","classList","toggle","hostVars","BaseConnector_HostBindings","inputs","DfInputComponent_Template","Output","_event","DfOutputComponent_HostBindings","ChangeDetectorRef","ViewContainerRef","merge","DfDragDropStage","DragDropDirective","DRAW_FLOW_ROOT_ELEMENT","DF_PAN_ZOOM_OPTIONS","NodeComponent","cdr","drawFlowComponents","nodeDragThreshold","drawFlowElement","panZoomOptions","accumulatedDelta","previousInputs","previousOutputs","nodeMoved","nodeDeleted","nodeSelected","connectorDeleted","cursor","node","ngOnChanges","changes","innerComponent","currentValue","markForCheck","createNodeContentComponent","subscribeToConnectorsChanges","saveInnerNodeSize","fillValue","setInitialPosition","updateConnectorsCoordinates","nodeType","containerRef","clear","nodeContentComponentRef","createComponent","instance","detectChanges","onDrag","stage","Move","applyX","applyY","centeredPosition","getCenteredPosition","applyPositionToStyle","recalculateConnectorsPosition","panzoomDisabled","getCenterOfViewport","location","nodeWidth","offsetWidth","nodeHeight","offsetHeight","centeredCoordinates","input","updateConnectorCoordinates","outputs","output","currentMoveDistance","recalculateConnectorPositionFromLast","newConnectorPosition","coordinates","addConnectionPoint","calculatedConnectorPosition","calculateConnectorPosition","nodePosition","offsetLeft","clientWidth","offsetTop","clientHeight","hasAttribute","offsetParent","dynamic","nodeElementRef","style","transform","panSize","leftPosition","panZoomLeftPosition","topPosition","panZoomTopPosition","halfOfNodeWidth","halfOfNodeHeight","halfOfPanSize","toArray","connectorsUpdates$","collectConnectorUpdateSources","panPositionX","panPositionY","scaledPanPositionX","scaledPanPositionY","sources","addContentComponentUpdates","addInputsUpdates","addOutputsUpdates","connectorsUpdated","currentInputs","handleRemovedInputs","currentOutputs","handleRemovedOutputs","currentArray","removedOutputs","prev","curr","NodeComponent_Query","NodeComponent_keydown_backspace_HostBindingHandler","NodeComponent_Template_div_dfDragDrop_0_listener","NodeComponent_Template_div_dfSelectableElement_0_listener","ɵɵelementContainer","ResizeObserverService","take","throttleTime","timer","DF_FALSE_HANDLER","dfClamp","dfPx","DF_PAN_ZOOM_INITIAL_SCALE","ZoomDirective","PanZoomComponent","el","drawFlowRootElement","resizeObserver$","zoom$","coordinates$","manualZoomAnimation$","dragStage$","scale","zoomAnimationDuration","cursor$","transitioned$","passive","leading","trailing","wrapperTransform$","round","translate","panZoomContainerTransform$","entries","contentRect","rootSize","offset","width","offsetX","height","offsetY","onPan","getGuardedCoordinates","onZoom","clientX","clientY","delta","getBoundingClientRect","processZoom","resetPanzoom","zoomIn","zoomStep","maxZoom","setZoom","zoomOut","minZoom","oldScale","newScale","center","getScaleCenter","moveX","moveY","offsets","ngContentSelectors","PanZoomComponent_Template","PanZoomComponent_Template_div_dfDragDrop_0_listener","PanZoomComponent_Template_div_dfZoom_0_listener","ɵɵprojection","InjectionToken","DF_PAN_ZOOM_DEFAULT_OPTIONS","zoomWheelSensitivity","touchSensitivity","dfPanZoomOptionsProvider","ZoomService","dfZoom","ZoomDirective_HostBindings","Observable","scan","dfDistanceBetweenTouches","dfPreventDefault","wheelSensitivity","subscriber","touches","startEvent","touch1","touch2","wheel","forwardRef","NG_VALUE_ACCESSOR","INVALID_NODES","SceneComponent_ng_container_0_Template_df_node_connectorDeleted_1_listener","ɵɵrestoreView","_r5","ɵɵnextContext","ɵɵresetView","onConnectorDeleted","SceneComponent_ng_container_0_Template_df_node_nodeDeleted_1_listener","restoredCtx","node_r3","$implicit","ctx_r6","onNodeDeleted","SceneComponent_ng_container_0_Template_df_node_nodeMoved_1_listener","ctx_r7","onNodeMoved","SceneComponent_ng_container_0_Template_df_node_nodeSelected_1_listener","ctx_r8","onNodeSelected","$invalidNodes","SceneComponent_ng_container_1_Template_df_connection_connectionDeleted_1_listener","_r11","connection_r9","ctx_r10","onConnectionDeleted","SceneComponent_ng_container_1_Template_df_connection_connectionSelected_1_listener","ctx_r12","SceneComponent_df_draft_connection_2_Template_df_draft_connection_connectionCreated_0_listener","_r14","ctx_r13","onConnectionCreated","SceneComponent","onChange","_","onTouched","initializeConnectionsSubscription","updated","n","deleted","find","emitConnectionDeletedByNodeId","trackByNodeId","trackByConnectionsFn","_index","originalOrder","writeValue","registerOnChange","fn","registerOnTouched","hostAttrs","SceneComponent_HostBindings","useExisting","multi","SceneComponent_Template","SceneComponent_ng_container_0_Template","SceneComponent_ng_container_1_Template","SceneComponent_df_draft_connection_2_Template","DragDropService","elementRef","dfDragDrop","streamFor","share","pointerDownMap","WeakMap","dragDropStreams","pointerMove$","pointerUp$","cached","pointerDown$","drag$","pointerId","lastPointerEvent","pointerUpStream$","e","End","sourceElement","pointerMoveStream$","dx","dy","providedIn","NgControl","collectInvalidNodeIds","ErrorsDirective","ngControl","control","statusChanges","status","errors","idsSet","Array","from","RESIZE_OPTION_BOX","RESIZE_OPTION_BOX_DEFAULT","DfResizeObserver","dfResizeObserver","box","dfResizeBox","ɵɵProvidersFeature","getAttribute","SelectionService","selectionService","unregisterFn","selectionChanged","registerElement","handleSelectionChange","max","Set","allIds","v","isArray","every","nodeIds","reduce","acc","arr","a","b","visited","Map","typeA","typeB","Number","isNaN","has","isArrayA","isArrayB","i","Date","getTime","RegExp","toString","size","key","arrA","arrB","primitivesOnly","item","primitiveCompare","String","localeCompare","sort","itemA","itemB","keysA","keysB","prototype","hasOwnProperty","call","firstEvent","secondEvent","hypot","DF_TRUE_HANDLER","dfStopPropagation","stopPropagation","invalidState","DrawFlowBaseNode_Query","debounceTime","NgDrawFlowComponent_df_scene_1_Template_df_scene_connectionCreated_0_listener","_r2","NgDrawFlowComponent_df_scene_1_Template_df_scene_connectionDeleted_0_listener","ctx_r3","NgDrawFlowComponent_df_scene_1_Template_df_scene_connectionSelected_0_listener","NgDrawFlowComponent_df_scene_1_Template_df_scene_nodeDeleted_0_listener","ctx_r5","NgDrawFlowComponent_df_scene_1_Template_df_scene_nodeMoved_0_listener","NgDrawFlowComponent_df_scene_1_Template_df_scene_nodeSelected_0_listener","NgDrawFlowComponent","$rootReady","watchFormChanges","setValue","emitEvent","panzoom","resetPosition","onResize","Boolean","NgDrawFlowComponent_Query","deps","ɵɵHostDirectivesFeature","directive","NgDrawFlowComponent_Template","NgDrawFlowComponent_Template_df_pan_zoom_scale_0_listener","NgDrawFlowComponent_df_scene_1_Template","FormControlDirective","DRAW_FLOW_DEFAULT_OPTIONS","arrowhead","ReplaySubject","connectionPointsMap","connectionPointsMapChange$","connectorHash","NgZone","ngZone","selectedElements","registeredElements","isDragging","clickedOnScene","dragThreshold","currentTarget","boundMouseDown","onMouseDown","bind","boundMouseMove","onMouseMove","boundMouseUp","onMouseUp","runOutsideAngular","removeEventListener","callback","unregisterElement","delete","selectElement","exclusive","clearSelection","run","deselectElement","exceptElement","isSelected","getSelectedElements","targetElement","findRegisteredParent","multiSelect","ctrlKey","shiftKey","reset","current","parentElement","buildAdjacencyMap","findCycleNodes","generateConnectionsHash","dfCycleDetectionValidator","previousConnectionsHash","previousResult","currentConnectionsHash","undefined","adjacencyMap","cycleNodes","hasCycle","nodeIdsSet","sourceNodeId","targetNodeId","nodeStates","cycleResult","checkNodeForCycle","startNodeId","stack","processed","pop","cycleFound","processNeighbors","neighbors","neighbor","neighborState","cycleStartIndex","indexOf","slice","hash","conn","connStr","char","charCodeAt","dfIsolatedNodesValidator","connectedIds","isolatedNodes","hasIsolatedNodes"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}