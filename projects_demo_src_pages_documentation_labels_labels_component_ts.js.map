{"version":3,"file":"projects_demo_src_pages_documentation_labels_labels_component_ts.js","mappings":"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","sources":["./projects/demo/src/pages/documentation/labels/examples/component.ts","./projects/demo/src/pages/documentation/labels/examples/template.html","./projects/demo/src/pages/documentation/labels/examples/labels/copy/copy.component.ts","./projects/demo/src/pages/documentation/labels/labels.component.ts","./projects/demo/src/pages/documentation/labels/labels.component.html"],"sourcesContent":["import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {\n    DfArrowhead,\n    DfConnectionPoint,\n    DfConnectionType,\n    type DfDataModel,\n    dfPanZoomOptionsProvider,\n    NgDrawFlowComponent,\n    provideNgDrawFlowConfigs,\n} from '@ng-draw-flow/core';\nimport {TuiAddonDoc} from '@taiga-ui/addon-doc';\nimport {PolymorpheusComponent} from '@taiga-ui/polymorpheus';\n\nimport {LabelNodeComponent, SimpleNodeComponent} from '../../../../app/modules/nodes';\nimport {CopyComponent} from './labels/copy/copy.component';\n\n@Component({\n    standalone: true,\n    selector: 'example-component',\n    imports: [NgDrawFlowComponent, ReactiveFormsModule, TuiAddonDoc],\n    templateUrl: './template.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        dfPanZoomOptionsProvider({\n            topPosition: null,\n            leftPosition: 20,\n        }),\n        provideNgDrawFlowConfigs({\n            connection: {\n                type: DfConnectionType.SmoothStep,\n                arrowhead: {type: DfArrowhead.ArrowClosed},\n                curvature: 10,\n            },\n            nodes: {\n                labelNode: LabelNodeComponent,\n                simpleNode: SimpleNodeComponent,\n            },\n        }),\n    ],\n})\nexport default class ExampleComponent {\n    public data: DfDataModel = {\n        nodes: [\n            {\n                id: 'node-1',\n                data: {type: 'simpleNode', text: 'This base node'},\n                position: {x: 0, y: 0},\n                startNode: true,\n            },\n            {\n                id: 'node-2',\n                data: {type: 'simpleNode', text: 'This child node 1'},\n                position: {x: 250, y: 50},\n            },\n            {\n                id: 'node-3',\n                data: {type: 'simpleNode', text: 'This child node 2'},\n                position: {x: 250, y: -50},\n            },\n            {\n                id: 'node-4',\n                data: {type: 'simpleNode', text: 'This child node 3'},\n                position: {x: 500, y: 0},\n                endNode: true,\n            },\n            {\n                id: 'node-5',\n                data: {\n                    type: 'simpleNode',\n                    text: 'This node creates connections with a label',\n                    connectionLabel: {\n                        content: new PolymorpheusComponent(CopyComponent),\n                        context: 'some text',\n                    },\n                },\n                position: {x: 0, y: -100},\n            },\n            {\n                id: 'node-6',\n                data: {\n                    type: 'labelNode',\n                    text: 'This node defines label content dynamically',\n                },\n                position: {x: 0, y: 100},\n            },\n        ],\n        connections: [\n            {\n                source: {\n                    nodeId: 'node-1',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-1-output-1',\n                },\n                target: {\n                    nodeId: 'node-2',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-2-input-1',\n                },\n                label: {\n                    content: 'Label 1',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-1',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-1-output-1',\n                },\n                target: {\n                    nodeId: 'node-3',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-3-input-1',\n                },\n                label: {\n                    content: new PolymorpheusComponent(CopyComponent),\n                    context: 'https://taiga-ui.dev',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-2',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-2-output-1',\n                },\n                target: {\n                    nodeId: 'node-4',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-4-input-1',\n                },\n                label: {\n                    content: 'Label 3',\n                },\n            },\n            {\n                source: {\n                    nodeId: 'node-3',\n                    connectorType: DfConnectionPoint.Output,\n                    connectorId: 'node-3-output-1',\n                },\n                target: {\n                    nodeId: 'node-4',\n                    connectorType: DfConnectionPoint.Input,\n                    connectorId: 'node-4-input-1',\n                },\n                label: {\n                    content: 'Label 4',\n                },\n            },\n        ],\n    };\n\n    public form = new FormControl<DfDataModel>(this.data);\n}\n","<ng-draw-flow [formControl]=\"form\" />\n","import {ChangeDetectionStrategy, Component, inject, signal} from '@angular/core';\nimport {WA_NAVIGATOR} from '@ng-web-apis/common';\nimport {TuiIcon} from '@taiga-ui/core';\nimport {injectContext} from '@taiga-ui/polymorpheus';\n\n@Component({\n    standalone: true,\n    imports: [TuiIcon],\n    template: `\n        <div\n            class=\"copy\"\n            (click)=\"copy()\"\n        >\n            <tui-icon\n                class=\"copy-icon\"\n                [class.copied]=\"copied()\"\n                [icon]=\"copied() ? '@tui.check' : '@tui.copy'\"\n            />\n            {{ copied() ? 'Copied' : 'Copy' }}\n        </div>\n    `,\n    styleUrls: ['./copy.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CopyComponent {\n    private readonly navigator = inject(WA_NAVIGATOR);\n    protected readonly context = injectContext<{$implicit: string}>();\n    protected copied = signal(false);\n    public link = this.context.$implicit;\n\n    protected copy(): void {\n        this.navigator.clipboard.writeText(this.link).then(() => {\n            this.copied.set(true);\n            setTimeout(() => this.copied.set(false), 3000);\n        });\n    }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {NgDrawFlowComponent} from '@ng-draw-flow/core';\nimport {TuiAddonDoc, type TuiRawLoaderContent} from '@taiga-ui/addon-doc';\n\nimport ExampleComponent from './examples/component';\n\n@Component({\n    standalone: true,\n    imports: [ExampleComponent, NgDrawFlowComponent, TuiAddonDoc],\n    templateUrl: './labels.component.html',\n    styleUrls: ['./labels.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport default class LabelsComponent {\n    public readonly labelsExample: Record<string, TuiRawLoaderContent> = {\n        TypeScript: import('./examples/component.ts?raw'),\n        Template: import('./examples/template.html?raw'),\n        'Copy label example': import('./examples/labels/copy/copy.component.ts?raw'),\n        'Label node component': import(\n            '../../../app/modules/nodes/label-node/label-node.component.ts?raw'\n        ),\n        'Label node template': import(\n            '../../../app/modules/nodes/label-node/label-node.component.html?raw'\n        ),\n    };\n}\n","<tui-doc-page header=\"Labels\">\n    <section>\n        <h2>Overview</h2>\n        <p>\n            <code>DfConnectionLabel</code>\n            adds textual or templated annotations to connections. A label is defined by the\n            <code>content</code>\n            that can be a string, template or component and an optional\n            <code>context</code>\n            passed to it.\n        </p>\n    </section>\n\n    <section class=\"tui-space_top-4\">\n        <h3>Creation scenarios</h3>\n        <ul class=\"tui-list tui-list_extra-small\">\n            <li class=\"tui-list__item\">\n                <b>Connection level</b>\n                – specify the\n                <code>label</code>\n                property for a particular item in the\n                <code>connections</code>\n                array of the data model.\n            </li>\n            <li class=\"tui-list__item\">\n                <b>Connector level</b>\n                – provide\n                <code>connectionLabel</code>\n                to a connector (for example,\n                <code>df-output</code>\n                ) so every created connection inherits it.\n            </li>\n            <li class=\"tui-list__item\">\n                <b>Node level</b>\n                – define\n                <code>data.connectionLabel</code>\n                for a node to apply the same label to all of its output connectors.\n            </li>\n        </ul>\n    </section>\n\n    <section class=\"tui-space_top-4\">\n        <h3>Example</h3>\n\n        <tui-doc-example\n            style=\"padding: 0\"\n            [content]=\"labelsExample\"\n        >\n            <div\n                tuiTheme=\"light\"\n                class=\"editor\"\n            >\n                <example-component />\n            </div>\n        </tui-doc-example>\n    </section>\n</tui-doc-page>\n"],"names":["FormControl","ReactiveFormsModule","DfArrowhead","DfConnectionPoint","DfConnectionType","dfPanZoomOptionsProvider","NgDrawFlowComponent","provideNgDrawFlowConfigs","PolymorpheusComponent","LabelNodeComponent","SimpleNodeComponent","CopyComponent","ExampleComponent","constructor","data","nodes","id","type","text","position","x","y","startNode","endNode","connectionLabel","content","context","connections","source","nodeId","connectorType","Output","connectorId","target","Input","label","form","selectors","standalone","features","i0","ɵɵProvidersFeature","topPosition","leftPosition","connection","SmoothStep","arrowhead","ArrowClosed","curvature","labelNode","simpleNode","ɵɵStandaloneFeature","decls","vars","consts","template","ExampleComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","i1","NgControlStatus","FormControlDirective","encapsulation","changeDetection","inject","signal","WA_NAVIGATOR","TuiIcon","injectContext","navigator","copied","link","$implicit","copy","clipboard","writeText","then","set","setTimeout","CopyComponent_Template","ɵɵelementStart","ɵɵlistener","CopyComponent_Template_div_click_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵclassProp","ɵɵtextInterpolate1","styles","LabelsComponent","labelsExample","TypeScript","Template","LabelsComponent_Template","TuiDocExample","TuiDocPage"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}