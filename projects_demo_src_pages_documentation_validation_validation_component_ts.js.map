{"version":3,"file":"projects_demo_src_pages_documentation_validation_validation_component_ts.js","mappings":"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","sources":["./projects/demo/src/pages/documentation/validation/validation.component.ts","./projects/demo/src/pages/documentation/validation/validation.component.html"],"sourcesContent":["import {NgIf} from '@angular/common';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {RouterLink} from '@angular/router';\nimport {type DfDataModel} from '@ng-draw-flow/core';\nimport {TuiAddonDoc, type TuiRawLoaderContent} from '@taiga-ui/addon-doc';\nimport {TuiLink, TuiNotification} from '@taiga-ui/core';\n\n@Component({\n    standalone: true,\n    selector: 'app-validation',\n    imports: [\n        NgIf,\n        ReactiveFormsModule,\n        RouterLink,\n        TuiAddonDoc,\n        TuiLink,\n        TuiNotification,\n    ],\n    templateUrl: './validation.component.html',\n    styleUrls: ['./validation.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport default class ValidationComponent {\n    public readonly validationExamples: Record<string, TuiRawLoaderContent> = {\n        LocalValidation: import('./examples/local-1.md?raw'),\n        CycleDetectionValidatorError: import(\n            './examples/cycle-detection-validator-error.md?raw'\n        ),\n        IsolatedNodesValidatorError: import(\n            './examples/isolated-nodes-validator-error.md?raw'\n        ),\n    };\n\n    public nodeData: DfDataModel = {\n        nodes: [\n            {\n                id: 'node-1',\n                data: {type: 'simpleNode', text: 'Node example'},\n                position: {x: 0, y: 0},\n            },\n        ],\n        connections: [],\n    };\n\n    public nodeForm = new FormControl(this.nodeData);\n}\n","<tui-doc-page header=\"Validation\">\n    <p>\n        ng-draw-flow provides a flexible graph validation system at two levels: at the individual node level and at the\n        entire graph level. This allows you to create complex validation rules for your diagrams and visually display\n        errors.\n    </p>\n\n    <h2>Node-level Validation</h2>\n\n    <p>\n        Each node in ng-draw-flow can have its own validation logic. For this purpose, the base class\n        <code>DrawFlowBaseNode</code>\n        has an\n        <code>invalid</code>\n        flag, which when set to\n        <code>true</code>\n        automatically adds the CSS class\n        <code>.df-invalid</code>\n        to the node.\n    </p>\n\n    <h3>How to Use</h3>\n\n    <p>\n        You can independently manage the validity state of a node within your component. This is especially useful when\n        a node contains a form or other input elements that require validation.\n    </p>\n\n    <ng-container *ngIf=\"validationExamples.LocalValidation as localValidation\">\n        <tui-doc-code\n            filename=\"Example: Node with Form and Validation\"\n            [code]=\"localValidation\"\n        />\n    </ng-container>\n\n    <h2>Graph-level Validation</h2>\n\n    <p>\n        ng-draw-flow also provides the ability to validate the entire graph as a whole. For this purpose, ready-made\n        validators are available that can be applied to the FormControl associated with the ng-draw-flow component.\n    </p>\n\n    <h3>Built-in Validators</h3>\n\n    <b>\n        1.\n        <code>dfCycleDetectionValidator</code>\n    </b>\n\n    <p>\n        Checks the graph for cycles (cyclicity). A cycle occurs when there is a path that starts and ends at the same\n        node.\n    </p>\n\n    <ng-container *ngIf=\"validationExamples.CycleDetectionValidatorError as cycleDetectionValidatorError\">\n        <tui-doc-code\n            filename=\"dfCycleDetectionValidator error\"\n            class=\"tui-space_bottom-4\"\n            [code]=\"cycleDetectionValidatorError\"\n        />\n    </ng-container>\n\n    <b>\n        2.\n        <code>dfIsolatedNodesValidator</code>\n    </b>\n\n    <p>Checks the graph for isolated nodes - nodes that have neither incoming nor outgoing connections.</p>\n\n    <ng-container *ngIf=\"validationExamples.IsolatedNodesValidatorError as isolatedNodesValidatorError\">\n        <tui-doc-code\n            filename=\"dfIsolatedNodesValidator error\"\n            [code]=\"isolatedNodesValidatorError\"\n        />\n    </ng-container>\n\n    <h2>Creating Custom Validators</h2>\n\n    <p>\n        You can create your own validators for the graph by implementing a function that conforms to the\n        <code>ValidatorFn</code>\n        interface from Angular.\n    </p>\n\n    <tui-notification\n        appearance=\"warning\"\n        size=\"m\"\n    >\n        Important: If your validator should highlight problematic nodes, it must return an array with the IDs of these\n        nodes.\n    </tui-notification>\n\n    <a\n        routerLink=\"/examples/editor\"\n        style=\"display: block\"\n        tuiLink\n        class=\"tui-space_top-4\"\n    >\n        Example\n    </a>\n</tui-doc-page>\n"],"names":["NgIf","FormControl","ReactiveFormsModule","RouterLink","TuiLink","TuiNotification","i0","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","localValidation_r3","cycleDetectionValidatorError_r4","isolatedNodesValidatorError_r5","ValidationComponent","constructor","validationExamples","LocalValidation","CycleDetectionValidatorError","IsolatedNodesValidatorError","nodeData","nodes","id","data","type","text","position","x","y","connections","nodeForm","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ValidationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ValidationComponent_ng_container_23_Template","ValidationComponent_ng_container_36_Template","ValidationComponent_ng_container_43_Template","i1","TuiDocCode","TuiDocPage","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}