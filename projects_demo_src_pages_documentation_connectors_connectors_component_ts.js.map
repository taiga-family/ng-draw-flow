{"version":3,"file":"projects_demo_src_pages_documentation_connectors_connectors_component_ts.js","mappings":";;;;;;;;;;;;;;;;;AACmD;;;AAInD,MAQqBC,mBAAmB;uBAAnBA,mBAAmB;;mBAAnBA,oBAAmB;AAAA;;QAAnBA,oBAAmB;EAAAC,SAAA;EAAAC,UAAA;EAAAC,QAAA,GAAAC,iEAAA;EAAAE,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCbxCP,4DAAA,sBAAkC;MAE1BA,oDAAA,qNAEJ;MAAAA,0DAAA,EAAI;MACJA,4DAAA,SAAI;MAAAA,oDAAA,kCAA2B;MAAAA,0DAAA,EAAK;MACpCA,4DAAA,QAAG;MACCA,oDAAA,yIAEA;MAAAA,4DAAA,WAAM;MAAAA,oDAAA,sBAAe;MAAAA,0DAAA,EAAO;MAC5BA,oDAAA,4CACA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAO;MACnBA,oDAAA,aACA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,mBAAW;MAAAA,0DAAA,EAAO;MACxBA,oDAAA,WACJ;MAAAA,0DAAA,EAAI;MACJA,4DAAA,SAAG;MACOA,oDAAA,cAAM;MAAAA,0DAAA,EAAO;MACnBA,oDAAA,qDACA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,mBAAW;MAAAA,0DAAA,EAAO;MACxBA,oDAAA,iEACA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAO;MACnBA,oDAAA,wGACA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAO;MACnBA,oDAAA,mBACA;MAAAA,4DAAA,SAAG;MAAAA,oDAAA,YAAI;MAAAA,0DAAA,EAAI;MACXA,oDAAA,wHACJ;MAAAA,0DAAA,EAAI;MACJA,4DAAA,UAAI;MAAAA,oDAAA,qCAA6B;MAAAA,0DAAA,EAAK;MACtCA,4DAAA,SAAG;MACCA,oDAAA,uLAEA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAO;MACnBA,oDAAA,aACA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,mBAAW;MAAAA,0DAAA,EAAO;MACxBA,oDAAA,uEACA;MAAAA,4DAAA,YAAM;MAAAA,oDAAA,cAAM;MAAAA,0DAAA,EAAO;MACnBA,oDAAA,8JAEJ;MAAAA,0DAAA,EAAI;MACJA,4DAAA,UAAI;MAAAA,oDAAA,8BAAsB;MAAAA,0DAAA,EAAK;MAC/BA,4DAAA,SAAG;MACCA,oDAAA,gKAEJ;MAAAA,0DAAA,EAAI;MACJA,4DAAA,aAA0C;MAE5BA,oDAAA,4BAAoB;MAAAA,0DAAA,EAAO;MACjCA,oDAAA,iPAGJ;MAAAA,0DAAA,EAAK;MACLA,4DAAA,aAA2B;MACjBA,oDAAA,kCAA0B;MAAAA,0DAAA,EAAO;MACvCA,oDAAA,4QAGJ;MAAAA,0DAAA,EAAK;;;iBDjDsBL,+DAAmB,EAAAiB,sEAAA;EAAAE,MAAA;EAAAC,eAAA;AAAA;iEAKjCnB,mBAAmB,E","sources":["./projects/demo/src/pages/documentation/connectors/connectors.component.ts","./projects/demo/src/pages/documentation/connectors/connectors.component.html"],"sourcesContent":["import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {NgDrawFlowComponent} from '@ng-draw-flow/core';\nimport {TuiAddonDoc} from '@taiga-ui/addon-doc';\n\n@Component({\n    standalone: true,\n    selector: 'app-connectors',\n    imports: [NgDrawFlowComponent, ReactiveFormsModule, TuiAddonDoc],\n    templateUrl: './connectors.component.html',\n    styleUrls: ['./connectors.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport default class ConnectorsComponent {}\n","<tui-doc-page header=\"Connectors\">\n    <p>\n        Connectors play a pivotal role in defining the interactions within a node-based flow architecture. They form the\n        interactive endpoints for establishing relationships between different nodes in the system.\n    </p>\n    <h3>Input Connectors (df-input)</h3>\n    <p>\n        To ensure the correct functioning and tracking of connections, input connectors require specific parameters to\n        be passed via the\n        <code>[connectorData]</code>\n        parameter. These parameters include\n        <code>nodeId</code>\n        and\n        <code>connectorId</code>\n        .\n    </p>\n    <p>\n        <code>nodeId</code>\n        is the unique identifier of the node, while\n        <code>connectorId</code>\n        uniquely identifies the connector within that node. The\n        <code>single</code>\n        parameter dictates whether the input connector can accept multiple connections or just one. If\n        <code>single</code>\n        is set to\n        <b>true</b>\n        , it means that once a connection is made to this input connector, no additional connections will be accepted.\n    </p>\n    <h3>Output Connectors (df-output)</h3>\n    <p>\n        Similarly, output connectors are the points from which connections originate to other node&#39;s input\n        connectors. Much like input connectors, output connectors also require the\n        <code>nodeId</code>\n        and\n        <code>connectorId</code>\n        parameters for identification and functionality purposes. The\n        <code>single</code>\n        parameter, when set to true for an output connector, restricts it to create only one connection to another node,\n        ensuring a one-to-one relationship.\n    </p>\n    <h2>Customizing Connectors</h2>\n    <p>\n        The color of the connectors, can be customized to fit the design requirements of your application. This is\n        achieved by altering CSS custom properties:\n    </p>\n    <ul class=\"tui-list tui-list_extra-small\">\n        <li class=\"tui-list__item\">\n            <code>--df-connector-color</code>\n            : This property controls the default color of the connectors. By setting this variable, you can ensure that\n            all connectors in your application adhere to a consistent color scheme that matches your branding or design\n            specifications.\n        </li>\n        <li class=\"tui-list__item\">\n            <code>--df-connector-color-hover</code>\n            : When a user hovers over a connector, this property determines the color that the connector will change to.\n            This interactive feedback is important for user experience, making it clear which connector is currently\n            under consideration for connection creation.\n        </li>\n    </ul>\n</tui-doc-page>\n"],"names":["ReactiveFormsModule","ConnectorsComponent","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","ConnectorsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","i1","TuiDocPage","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}