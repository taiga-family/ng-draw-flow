{"version":3,"file":"projects_demo_src_pages_examples_stress-test_stress-test_component_ts.js","mappings":"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","sources":["./projects/demo/src/pages/examples/stress-test/stress-test.component.ts","./projects/demo/src/pages/examples/stress-test/stress-test.component.html"],"sourcesContent":["import type {OnInit} from '@angular/core';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport type {DfDataConnection, DfDataModel, DfDataNode} from '@ng-draw-flow/core';\nimport {\n    DfConnectionPoint,\n    dfCycleDetectionValidator,\n    dfPanZoomOptionsProvider,\n    NgDrawFlowComponent,\n} from '@ng-draw-flow/core';\nimport {TuiAddonDoc} from '@taiga-ui/addon-doc';\nimport {MarkdownModule} from 'ngx-markdown';\n\nconst ROWS_COUNT = 23;\nconst COLUMNS_COUNT = 23;\n\n@Component({\n    standalone: true,\n    selector: 'stress-test',\n    imports: [MarkdownModule, NgDrawFlowComponent, ReactiveFormsModule, TuiAddonDoc],\n    templateUrl: './stress-test.component.html',\n    styleUrls: ['./stress-test.component.less'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        dfPanZoomOptionsProvider({\n            topPosition: 50,\n            leftPosition: 50,\n            panSize: 5000,\n        }),\n    ],\n})\nexport default class StressTestComponent implements OnInit {\n    public data: DfDataModel = {\n        nodes: this.createNodesMap(ROWS_COUNT, COLUMNS_COUNT),\n        connections: this.createConnectionsArray(ROWS_COUNT, COLUMNS_COUNT),\n    };\n\n    public form = new FormControl(this.data, [dfCycleDetectionValidator()]);\n\n    public ngOnInit(): void {\n        this.form.statusChanges.subscribe((s) => {\n            console.warn(s, this.form, 'form status');\n        });\n    }\n\n    public createNodesMap(rows: number, columns: number): Map<string, DfDataNode> {\n        const nodesMap = new Map();\n\n        for (let i = 1; i <= rows; i++) {\n            for (let j = 1; j <= columns; j++) {\n                const nodeId = `node-${(i - 1) * columns + j}`;\n\n                nodesMap.set(nodeId, {\n                    id: nodeId,\n                    data: {type: 'miniNode', index: (i - 1) * columns + j},\n                    position: {x: (j - 1) * 70, y: (i - 1) * 70},\n                });\n            }\n        }\n\n        return nodesMap;\n    }\n\n    public createConnectionsArray(rows: number, columns: number): DfDataConnection[] {\n        const connectionsArray: DfDataConnection[] = [];\n\n        for (let row = 1; row <= rows; row++) {\n            for (let col = 1; col <= columns; col++) {\n                const sourceId = `node-${(row - 1) * columns + col}`;\n\n                // Check if it's not the last column\n                if (col < columns) {\n                    const targetId = `node-${(row - 1) * columns + col + 1}`;\n\n                    connectionsArray.push({\n                        source: {\n                            nodeId: sourceId,\n                            connectorType: DfConnectionPoint.Output,\n                            connectorId: 'output-1',\n                        },\n                        target: {\n                            nodeId: targetId,\n                            connectorType: DfConnectionPoint.Input,\n                            connectorId: 'input-1',\n                        },\n                    });\n                } else if (row < rows) {\n                    // It's the last column and not the last row\n                    const firstNodeNextRowId = `node-${row * columns + 1}`;\n\n                    connectionsArray.push({\n                        source: {\n                            nodeId: sourceId,\n                            connectorType: DfConnectionPoint.Output,\n                            connectorId: 'output-1',\n                        },\n                        target: {\n                            nodeId: firstNodeNextRowId,\n                            connectorType: DfConnectionPoint.Input,\n                            connectorId: 'input-1',\n                        },\n                    });\n                }\n            }\n        }\n\n        return connectionsArray;\n    }\n}\n","<tui-doc-page header=\"Stress test\">\n    You doubt we can render a lot of nodes and edges? See for yourself.\n\n    <section class=\"tui-space_top-4\">\n        <div class=\"editor\">\n            <ng-draw-flow [formControl]=\"form\" />\n        </div>\n    </section>\n</tui-doc-page>\n"],"names":["FormControl","ReactiveFormsModule","DfConnectionPoint","dfCycleDetectionValidator","dfPanZoomOptionsProvider","NgDrawFlowComponent","MarkdownModule","ROWS_COUNT","COLUMNS_COUNT","StressTestComponent","constructor","data","nodes","createNodesMap","connections","createConnectionsArray","form","ngOnInit","statusChanges","subscribe","s","console","warn","rows","columns","nodesMap","Map","i","j","nodeId","set","id","type","index","position","x","y","connectionsArray","row","col","sourceId","targetId","push","source","connectorType","Output","connectorId","target","Input","firstNodeNextRowId","selectors","standalone","features","i0","ɵɵProvidersFeature","topPosition","leftPosition","panSize","ɵɵStandaloneFeature","decls","vars","consts","template","StressTestComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","i1","NgControlStatus","FormControlDirective","i2","TuiDocPage","styles","encapsulation","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}